<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../transforms/pp2html.xsl"?>
<!-- <?xml-model href="https://github.com/commoncriteria/transforms/raw/master/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?> -->
<?xml-model href="../transforms/schemas/CCProtectionProfile.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<!--
Partial mapping from old iteration to new
FCS_COP.1(1) => FCS_COP.1/CONF_ALG
FCS_COP.1(2) => FCS_COP.1/HASH_ALG
FCS_COP.1(3) => FCS_COP.1/SIGN_ALG
FCS_COP.1(4) => FCS_COP.1/KEY_HASH
FAU_GEN.1(1) => FAU_GEN.1/AUDITGEN
FAU_GEN.1(2) => FAU_GEN.1/MAS_SERVER
FPT_ITT.1(1) => FPT_ITT.1/INTER_XFER
FPT_ITT.1(2) => FPT_ITT.1/INTER_XFER_AGENT
fia_uau_ext.4(1) => fia_uau_ext.4/REUSE
fia_uau_ext.4(2) => fia_uau_ext.4/REUSE_ENROLL
fia_x509_ext.1(1) => fia_x509_ext.1/CERTVAL_MAN
fia_x509_ext.1(2) => fia_x509_ext.1/CERTVAL_SEL
fmt_mof.1(1) => fmt_mof.1/FUNCBE
fmt_mof.1(2) => fmt_mof.1/MANAGEMENT_ENROLL
fmt_mof.1(3) => fmt_mof.1/MANAGEMENT_MAS
FMT_SMF.1(1) => FMT_SMF.1/SERVER_CONF_AGENT
FMT_SMF.1(2) => FMT_SMF.1/SERVER_CONF_SERVER
FMT_SMF.1(3) => FMT_SMF.1/MAS
FMT_SMR.1(1) => FMT_SMR.1/SECMAN_ROLES
FMT_SMR.1(2) => FMT_SMR.1/SECMAN_ROLES_MAS
-->

<!-- 26 Feb 2021 - rmc
    To bring this up to the latest transforms:
	  - added ids to all f-elements
	  - changed all chapters and subsections to sections
	  - changed all explicit cross-references to xref to=
	  - changed all implicit references to xref g=
	  - removed all the abbr tags
	  - removed unnecessary references 
	  - Fixed table prefixes so there would be a space
	  - fixed the ECD material (to the best of my ability). ECD section now auto-generated as per TD552.
		Someone needs to validate that the addressed-by and rationale elements are correct.
	  - Updated iteration names where they were still using old ones
	  - Changed a bunch of explicit references to xrefs.
	  - Moved the essay on Security Audit for Distributed TOEs from the Requirements section to the front matter
		in the Introduction to Distributed TOEs. I think it belongs here.
	  - Moved the audit events into the SFRs and removed the audit table from the EA section of FAU_GEN
		(which is an abomination).
	  - Audit events now appear in tables at the top of the section or appendix in which the SFR appears.
	  - Created a new table for audit events from external packages.
	  - The re-working of the audit requirements makes things look different, but all the requirements should be the same.
	  - Added the Implicity Saisfied Requirements Appendix based on TD552
	  - Incorporated all TDs as of the draft date:
		- 0552 – SFR Rationale and Implicitly Satisfied SFRs
		- 0524 – Updates to Certificate Revocation (FIA_X509_EXT.1)
		- 0479 – FMT_SMF.1(1) Reliance on MDF Evals
		- 0461 – Security Audit for Distributed TOEs
		- 0438 – TST and TUD on the MDM Agent
-->	  

<!--
Check this:
- the objective-refer info in the threats & assumptions sections is not in the 
  version 3 word document. I had to copy them from the 2.0 github doc  

- for the security objectives (<SOs> tags), I copied the <component-refer> 
   tags from version 2.0, these need to be checked

To do:
- ask Kevin about <OSPs> tag, why do I have to wrap each <OSP> with an <OSPs> 
(You shouldn't the OSPs tag should wrap all OSP tags).
- Make .1 of trusted channel/path freed
- TLS: package and figure out how to use platform TLS with the TLS package: NOTE: most or all of these say something to the effect that protocol,etc. may be met 
	with platform provided services - check FTP_TRP.1(1) - is this good enough?
- update TOE boundary section



NOTES:
- Mas server SFR's that were removed: ftp_itc.1(3), ftp_itc.1.3(2), fau_stg_ext.1.1(2), fmt_mof.1(3)

DONE:
- map new SFR's to o.things
- Mas server SFR's that have functionality that needs to be brought in somehow: fau_gen.1(2), fmt_smr.1(2), fmt_mof.1(3), fmt_smf.1(3)
- Mas server - Need to check references to MAS
- edit fau_gen to make it applicable to any component of a distributed toe
- have to change ftp_itc_ext.1.1 to bring in fpt_itt even if agent is not in the TOE because its needed for distributed
- NIAP comment matrix
- finish table 1, have to add where we think things belong
- split table 2 (audit) into mandatory/selection based table and opt/obj table >> does not need to be completed before draft 2 goes out
- fix dead links to TLS, etc: NOTE: The TLS/DTLS links should be fixed
- add disclaimer to audit table that only those SFRs included in the ST are required to be audited. (I.e., if an objective SFR is not included then they do not have
	to audit it)
- unify the random use of  TOE/TSF/MDM server and MD user/agent
- make links out of all the references to ITT/ITC sfr's
- fix table 2 after mas server sfr's get figured out
- incorporate evaluation activity for distributed TOE (SD B.4) (pulled it in the appendix but its ugly and might need to be fixed)
- cross references - search for Section & Appendix cross refs & adjust

-->

<PP type="pp" boilerplate="yes" xmlns="https://niap-ccevs.org/cc/v1" name="Mobile Device Management"
  xmlns:sec="https://niap-ccevs.org/cc/v1/section" xmlns:h="http://www.w3.org/1999/xhtml">
    
  <PPReference>
    <ReferenceTable>
      <PPTitle>Protection Profile for Mobile Device Management</PPTitle>
      <PPVersion>4.0d Draft</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2021-03-11</PPPubDate>
      <Keywords>Mobile Device Management; MDM</Keywords>
    </ReferenceTable>
  </PPReference>  
  <RevisionHistory>
    <entry>
      <version>1.0</version>
      <date>2013-10-21</date>
      <subject>Initial Release</subject>
    </entry>
    <entry>
      <version>1.1</version>
      <date>2014-02-07</date>
      <subject>Typographical changes and clarifications to front-matter</subject>
    </entry>
    <entry>
      <version>2.0</version>
      <date>2014-12-31</date>
      <subject>Separation of MDM Agent SFRs<h:br/>Updated cryptography, protocol, X.509
        requirements.<h:br/> Updated management functions to match MDFPPv2.0.<h:br/> Included SSH as
        a remote administration protocol.<h:br/> Removed IPsec as protocol to communicate to MDM
        Agent.<h:br/> Added X509 enrollment objective requirement.<h:br/> Added Optional Mobile
        Application Store requirements. </subject>
    </entry>
    <entry>
      <version>3.0</version>
      <date>2016-11-21</date>
      <subject>Updates to align with Technical Decisions<h:br/>
        Added requirements to support BYOD use case
        <h:br/>
        Removed IPsec and SSH requirements, which are now contained in
        EPs</subject>
    </entry>
    <entry>
      <version>4.0</version>
      <date>2018-09-24</date>
      <subject>
        Updates to align with Technical Decisions<h:br/>
        Removed platform dependency<h:br/>
        Removed TLS SFRs and utilize the TLS Functional Package<h:br/>
        Allowed for a distributed TOE
      </subject>
    </entry>
  </RevisionHistory>
  
      <pp-preferences>
<!--        <pp-pref name="display-audit-with-sfrs">0</pp-pref> -->
    	<audit-events-in-sfrs/>
    </pp-preferences>

	<!-- 1.0 Introduction -->
	<section id="int" title="Introduction">
	
		<!-- 1.1. Overview -->
		<section id="ov" title="Overview"> 
			Mobile device management (MDM) products allow enterprises to apply security policies to mobile devices, such as smartphones and tablets. The purpose of 
			these policies is to establish a security posture adequate to permit mobile devices to process enterprise data and connect to enterprise network
			resources.<h:br/><h:br/> 
			This document provides a baseline set of Security Functional Requirements (SFRs) for an MDM system, which is the Target of Evaluation (TOE). The MDM 
			System is only one component of an enterprise deployment of mobile devices. Other components, such as the mobile device platforms, which enforce 
			the security policies and network access control servers are out of scope. 
		</section>
		
		<!-- 1.2 Terms -->
		<!-- 1.2.1 Common Criteriq Terms (auto-generated) -->
		<!-- 1.2.2 Technical Terms -->
		<tech-terms>
			<term full="Administrator" >The person who is responsible for management activities, including setting the 
				policy that is applied by the enterprise on the mobile device.</term>
			<term full="API Application Programming Interface " abbr="API">A specification of routines, data structures,
				object classes, and variables that allows an application to make use of services provided by another
				software component, such as a library. APIs are often provided for a set of libraries included with 
				the platform.</term>
			<term full="Critical Security Parameter" abbr="CSP">Security-related information whose disclosure or 
				modification can compromise the security of a cryptographic module and/or authentication system.</term>
			<term full="Data">Program or application or data files that are stored or transmitted by a server or MD.</term>
			<term full="Data Encryption Key" abbr="DEK">A key used to encrypt data-at-rest.</term>
			<term full="Developer Modes" >States in which additional services are available to a user in order to
				provide enhanced system access for debugging of	software.</term>
			<term full="Enrolled State" >The state in which a mobile device is managed by a policy from an MDM.</term>
			<term full="Enterprise Applications" >Applications that are provided and managed by the enterprise as
				opposed to a public application store.</term>
			<term full="Enterprise Data" >Any data residing in enterprise servers or temporarily stored on mobile 
				devices to which the mobile device user is allowed access according to the security policy defined by 
				the enterprise and implemented by the administrator. </term>
			<term full="Enrollment over Secure Transport" abbr="EST">Cryptographic protocol that describes an X.509 
				certificate management protocol targeting public key infrastructure (PKI) clients that need to acquire
				client certificates and associated certificate authority (CA) certificates.</term>
			<term full="Key Encryption Key" abbr="KEK">A key that is used to encrypt other keys,
				such as (DEKs) or storage repositories that contain keys. </term>
			<term full="Locked State" >Mobile device state where the device is powered
				on but most functionality is unavailable for use without authentication.</term>
			<term full="Mobile Device" abbr="MD">A device which is composed of a hardware platform and its system software. The device typically provides wireless
				connectivity and may include software for functions like secure messaging, email, web, VPN connection, and VoIP (Voice over IP), for access
				to the protected enterprise network, enterprise data and applications, and for communicating to other MDs.</term>
			<term full="Mobile Device Management" abbr="MDM">Products that allow enterprises to apply security policies to MDs. This system consists of two primary
				components: the MDM Server and the MDM Agent.</term>
			<term full="Mobile Device User" >The person who uses and is held responsible for an MD. </term>
			<term full="Operating System" abbr="OS">Software which runs at the highest
				privilege level and can directly control hardware resources. Modern mobile devices
				typically have at least two primary operating systems: one which runs on the cellular
				baseband processor and one which runs on the application processor. The platform of the
				application processor handles most user interaction and provides the execution
				environment for apps. The platform of the cellular baseband processor handles
				communications with the cellular network and may control other peripherals. The term
				OS, without context, may be assumed to refer to the platform of the
				application processor. </term>
			<term full="Powered-Off State" >Mobile device shutdown state.</term>
			<term full="Protected Data" >All non-TSF data on the mobile device,
				including user or enterprise data. Protected data is encrypted while the mobile device
				is in the powered-off state. This includes keys in software-based storage. May overlap
				with sensitive data. </term>
			<term full="Root Encryption Key" abbr="REK">A key tied to a particular device that
				is used to encrypt all other keys for that device. </term>
			<term full="Sensitive Data" >Data that is encrypted by the mobile device.
				May include all user or enterprise data or may be data for specific applications such as
				emails, messaging, documents, calendar items, or contacts. May be protected while the
				mobile device is in the locked state. Must include at minimum some keys in
				software-based key storage. </term>
			<term full="Trust Anchor Database" >A list of trusted root Certificate Authority certificates. </term>
			<term full="Unenrolled State" >Mobile device state when it is not managed by an MDM.</term>
			<term full="Unlocked State" >Mobile device state where it is powered on
				and its functionality is available for use. </term>       
		</tech-terms>
	  
		<!-- 1.3 Cmpliant Targets of Evaluation -->
		<section id="cte" title="Compliant Targets of Evaluation">
			The Mobile Device Management (MDM) system consists of two primary components: the MDM Server software and the MDM Agent. Optionally, the MDM system may
			consist of a separate Mobile Application Store (MAS) server. 
			
			<!-- 1.3.1 TOE Boundary -->
			<section id="tb" title="TOE Boundary"> The MDM system operational environment consists of the mobile device on which the MDM Agent resides, 
				the platform on which the MDM Server runs, and an untrusted wireless network over which they communicate, as pictured below.
				<h:br/><h:br/>
				<figure entity="images/MDMserveroperatingenvironment.jpg" title="MDM System Operating Environment" id="agentoperatingenvironment"/>
				<h:br/><h:br/>
				The <h:b>MDM Server</h:b> is software (an application, service, etc.) on a general-purpose platform, a network device, or cloud architecture executing
				in a trusted network environment. The MDM Server provides administration of the mobile device policies and reporting on mobile device behavior.
				The MDM Server is responsible for managing device enrollment, configuring and sending policies to the MDM Agents, collecting reports on device
				status, and sending commands to the Agents. The MDM Server may be standalone or distributed, where a distributed TOE is one that requires
				multiple distinct components to operate as a logical whole in order to fulfill the requirements of this PP (a more extensive description of 
				distributed MDMs is given in section 3).
				<h:br/><h:br/>
				The <h:b>MDM Agent</h:b> establishes a secure connection back to the
				MDM Server controlled by an enterprise administrator and configures the
				mobile device per the administrator's policies. The MDM Agent is addressed in the PP-Module for MDM
				Agents. If the MDM Agent is installed on a mobile device as an application
				developed by the MDM developer, the PP-Module extends this PP and is included in the TOE. In this case, the TOE security 
				functionality specified in this PP must be
				addressed by the MDM Agent in addition to the MDM
				Server. Otherwise, the MDM Agent is provided by the mobile device vendor
				and is out of scope of this PP; however, MDMs are
				required to indicate the mobile platforms supported by the MDM Server and
				must be tested against the native MDM agent of those platforms.
				<h:br/><h:br/>
				The <h:b>Mobile Application Store (MAS)</h:b> hosts applications for the enterprise, authenticates Agents, and securely transmits 
				applications to enrolled mobile devices.The MAS functionality can be included as part of the MDM Server Software or can be logically
				distinct. If the MAS functionality is on a physically separate server, then the TOE is distributed with the MDM Server and MAS Server being 
				separate components.
			</section>
		</section>
	
		<!-- 1.4 Use Cases -->
		<section id="usec" title="Use Cases"> This PP defines four use cases:<h:br/>
			<usecases>
				<usecase title="Enterprise-owned device for general-purpose enterprise use" id="uc1">
					<description>An enterprise-owned device for general-purpose business use is commonly
						called Corporately Owned, Personally Enabled (COPE). This use case entails a significant
						degree of enterprise control over configuration and software inventory. Enterprise
						administrators use an MDM product to establish policies on the mobile
						devices prior to user issuance. Users may use internet connectivity to browse the web, access corporate mail, or run enterprise 
						applications, but this connectivity may be under
						significant control of the enterprise. The user may also be expected to store data and
						use applications for personal, non-enterprise use. The enterprise administrator uses the
						MDM product to deploy security policies and query mobile device
						status. The MDM may issue commands for remediation
						actions.</description>
				</usecase>
				<usecase title="Enterprise-owned device for specialized, high-security use" id="uc2">
					<description>An enterprise-owned device with intentionally limited network connectivity, tightly controlled configuration,
						and limited software inventory is appropriate for specialized, high-security use cases. As in the previous use case, the MDM
						product is used to establish such policies on mobile devices prior to issuance to users. The device may not be permitted
						connectivity to any external
						peripherals. It may only be able to communicate via its Wi-Fi or cellular radios with
						the enterprise-run network, which may not even permit connectivity to the internet. Use
						of the device may require compliance with usage policies that are more restrictive than
						those in any general-purpose use case, yet may mitigate risks to highly sensitive
						information. Based upon the operation environment and the acceptable risk level of the
						enterprise, those security functional requirements outlined in Section 5 of this
						PP along with the selections in the Use Case 2 template defined in
						Appendix G are sufficient for the high-security use case.</description>
				</usecase>
				<usecase title="Personally-owned device for personal and enterprise use" id="uc3">
					<description> A personally owned device which is used for both personal activities and
						enterprise data is commonly called Bring Your Own Device (BYOD). The device may be
						provisioned for access to enterprise resources after significant personal usage has
						occurred. Unlike in the enterprise-owned cases, the enterprise is limited in what
						security policies it can enforce because the user purchased the device primarily for
						personal use and is unlikely to accept policies that limit the functionality of the
						device.<h:br/><h:br/> 
						However, because the enterprise allows the user full (or nearly full)
						access to the enterprise network, the enterprise will require certain security policies,
						for example a password or screen lock policy and health reporting, such as the
						integrity of the mobile device system software, before allowing access. The
						administrator of the MDM can establish remediation actions, such as
						wipe of the enterprise data, for non-compliant devices. These controls could potentially
						be enforced by a separation mechanism built-in to the device itself to distinguish
						between enterprise and personal activities, or by a third-party application that
						provides access to enterprise resources and leverages security capabilities provided by
						the mobile device. Based upon the operational environment and the acceptable risk level
						of the enterprise, those security functional requirements outlined in Section 5 of this
						PP along with the selections in the Use Case 3 template defined in
						Appendix G are sufficient for the secure implementation of this BYOD use case.
					</description>
				</usecase>
				<usecase title="Personally owned device for personal and limited enterprise use" id="uc4">
					<description>A personally owned device may also be given access to limited enterprise services such as enterprise email. The enterprise may not
						need to enforce any security policies on this device because the user does not have full access to the enterprise or enterprise data.
						However, the enterprise may want secure email and web browsing with assurance that the services being provided to those clients by the
						mobile device are not compromised. Based upon the operational environment and the acceptable risk level of the enterprise, those security
						functional requirements outlined in Section 5 of this PP are sufficient for the secure implementation of this BYOD use case.</description>
				</usecase>
			</usecases>
		</section>
	</section>
  
	<!-- 2. Conformance Claims -->
	<section title="Conformance Claims" id="ccl" boilerplate="no">
		<cclaims>
			<cclaim title="Conformance Statement">
				<description>A Security Target (ST) must claim exact conformance to this PP, as defined in the CC and CEM addenda for Exact Conformance, 
					Selection-Based SFRs, and Optional SFRs (dated May 2017).  </description>
			</cclaim>
			<cclaim title="CC Conformance Claims">
				<description>This PP is conformant to Parts 2 (extended) and 3 (conformant) of Common Criteria Version 3.1, Release 5.</description>
			</cclaim>
			<cclaim title="PP Claim">
				<description>This PP does not claim conformance to any PP.</description>
			</cclaim>
			<cclaim title="Package Claim">
				<description>This PP is TLS Package Version 1.1 Conformant.</description>
			</cclaim>
			<cclaim title="Module Claim">
				<description>The following PPs and PP-Modules are allowed to be specified in a PP-Configuration with this PP.
					<h:ul>
						<h:li>PP-Module for MDM Agent, Version 1.0<!-- C ToDo: add date/update --></h:li>
						<h:li>PP-Module for VPN Client, Version 2.1</h:li>
						<h:li>Protection Profile for Mobile Device Fundamentals, Version 3.1 </h:li>
						<h:li>Protection Profile for Application Software, Version 1.3 <!-- C ToDo: add date/update --></h:li>
					</h:ul>
				</description>
			</cclaim>
		</cclaims>
	</section>

	<!-- Introduction to Distributed TOEs -->
	<section title="Introduction to Distributed TOEs" id="idt">
		This PP includes support for distributed MDM TOEs. MDMs can sometimes be composed of multiple components operating as a logical whole. Frequently we
		see this architecture when dealing with products hosted in the cloud and offered as Software as a Service. There are a number of different
		architectures; but fundamentally, they are variations of the following model where the SFRs of this PP can only be fulfilled if the components 
		are deployed and operate together. To be considered a distributed TOE, a minimum of two interconnected components are required.

		<!-- 3.1 Registration of DDistributed TOE Components -->
		<section title="Registration of Distributed TOE Components" id="rcd">
			When dealing with a distributed TOE, a number of separate components need to be brought together in the operational environment in order to create the TOE.
			This requires that trusted communications channels are set up between certain pairs of components (it is assumed that all components need to
			communicate with at least one other component, but not that all components need to communicate with all other components). The underlying model for
			creation of the TOE is to have a "registration process" in which components "join" the TOE. The registration
			process starts with two components, one of which (the "joiner") is about to join an existing TOE by registering with the other
			(the "gatekeeper"). The two components will use one or more specified authentication and communication channel options so that the components
			authenticate each other and protect any sensitive data that is transmitted during the registration process (e.g. a key might be sent by a gatekeeper 
			to the joiner as a result of the registration). The following figures illustrate the three supported registration models. <xref to="DTF1"/> illustrates a
			distributed TOE registration approach which uses an instance of FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or
			FTP_ITC.1/INTER_XFER_IT to protect the registration exchange.<h:br/><h:br/>
			<figure entity="images/DistributedToeFig1.png" pre="Figure " title="Distributed TOE registration using channel satisfying FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or FTP_ITC.1/INTER_XFER_IT" id="DTF1"/>
			<h:br/><h:br/>
			The second approach (<xref to="DTF2"/> 3) uses an alternative registration channel and supports use cases where the channel relies on environmental security
			constraints to provide the necessary protection of the registration exchange.<h:br/><h:br/>
			<figure entity="images/DistributedToeFig2.png" pre="Figure " title="Distributed TOE registration using channel satisfying FTP_TRP.1/TRUSTPATH_JOIN" id="DTF2"/>
			<h:br/><h:br/>
			The final approach (<xref to="DTF3"/>) supports use cases where registration is performed manually through direct configuration of both the Joiner and Gatekeeper 
			devices. Once configured, the two components establish an internal TSF channel that satisfies
			FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or FTP_ITC.1/INTER_XFER_IT.<h:br/><h:br/>
			<figure entity="images/DistributedToeFig3.png" pre="Figure " title="Distributed TOE registration without a registration channel" id="DTF3"/>
			<h:br/><h:br/>
			In each case, during the registration process, the administrator must positively enable the joining components before it can act as part of the TSF.
			<xref to="DTF4"/> illustrates the approaches that this enablement step may take;<h:br/><h:br/>
			<figure entity="images/DistributedToeFig4.png" pre="Figure " title="Joiner enablement options for Distributed TOE's" id="DTF4"/>
			<h:br/><h:br/>
			Note that in the case where no registration channel is required, that is the joiner and gatekeeper are directly configured (<xref to="DTF3"/>), enablement is
			implied as part of this direct configuration process.<h:br/><h:br/>
			After registration the components will communicate between themselves using a normal SSH/TLS/DTLS/IPsec/HTTPS channel (which is specified in an ST as 
			an instance of FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or FTP_ITC.1/INTER_XFER_IT in terms of <xref to="req"/> <!--Section 6--> and <xref g="optional"/> <!--Appendix A-->). This channel for
			intercomponent communications is specified at the top level with the new (extended) SFR FCO_CPC_EXT.1 and is in addition to the other communication 
			channels required for communication with entities outside the TOE (which are specified in an ST as instances of FTP_ITC.1/INTER_XFER_IT and 
			FTP_TRP.1/TRUSTPATH_REM_ADMIN. 
		</section>
	
		<!-- 3.2 Allocation of Requirements in Distributed TOEs -->
		<section title="Allocation of Requirements in Distributed TOEs" id="ard">
			For a distributed TOE, the security functional requirements in this PP need to be met by the TOE as a whole, but not all SFRs will necessarily be 
			implemented by all components. The following categories are defined in order to specify when each SFR must be implemented by a component:<h:br/>
			<h:ul>
				<h:li><h:b>All Components ("All")</h:b> - All components that comprise the distributed TOE must independently satisfy the requirement.</h:li>
				<h:li><h:b>At least one Component ("One")</h:b> - This requirement must be fulfilled by at least one component within the distributed TOE.</h:li>
				<h:li><h:b>Feature Dependent ("Feature Dependent")</h:b> - These requirements will only be fulfilled where the feature is implemented by the
				distributed TOE component (note that the requirement to meet the PP as a whole requires that at least one component implements these
				requirements if they are specified in <xref to="req"/>).</h:li>
			</h:ul>
			<xref to="distTOE"/> specifies how each of the SFRs in this PP must be met, using the categories above.
			<h:br/><h:br/>
			<h:b><ctr ctr-type='Table' pre="Table " id="distTOE">: Security Functional Requirements for Distributed TOEs</ctr></h:b><h:br/>
			<h:table>
				<h:TR>
					<h:TD><h:b>Requirement</h:b></h:TD>
					<h:TD><h:b>Description</h:b></h:TD>
					<h:TD><h:b>Distributed TOE SFR Allocation</h:b></h:TD>
				</h:TR>
				<h:tr>
					<h:td>FAU_ALT_EXT.1</h:td>
					<h:td>Server Alerts</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_CRP_EXT.1</h:td>
					<h:td>Support for Compliance Reporting of Mobile Device Configuration</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_GEN.1/AUDITGEN</h:td>
					<h:td>Audit Data Generation</h:td>
					<h:td>All</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_GEN.1/MAS_SERVER</h:td>
					<h:td>Audit Data Generation</h:td>
					<h:td>Feature Dependent</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_NET_EXT.1</h:td>
					<h:td>Network Reachability Review</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_SAR.1</h:td>
					<h:td>Audit Review</h:td>
					<h:td>Feature Dependent</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_SEL.1</h:td>
					<h:td>Security Audit Event Selection</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_STG_EXT.1</h:td>
					<h:td>External Trail Storage</h:td>
					<h:td>All</h:td>
				</h:tr>
				<h:tr>
					<h:td>FAU_STG_EXT.2</h:td>
					<h:td>Audit Event Storage</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FCO_CPC_EXT.1</h:td>
					<h:td>Communication Partner Control</h:td>
					<h:td>All</h:td> 
				</h:tr> 
				<h:tr>
					<h:td>FCS_CKM.1</h:td>
					<h:td>Cryptographic Key Generation</h:td>
					<h:td>Feature Dependent</h:td> <!-- Changed to account for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_CKM.2</h:td>
					<h:td>Cryptographic Key Establishment</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_CKM_EXT.4</h:td>
					<h:td>Cryptographic Key Destruction</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_COP.1.1/CONF_ALG</h:td>
					<h:td>Cryptographic Operation (Confidentiality Algorithms)</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr>
				<h:tr>
					<h:td>FCS_COP.1.1/HASH_ALG</h:td>
					<h:td>Cryptographic Operation (Hashing Algorithms)</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_COP.1.1/SIGN_ALG</h:td>
					<h:td>Cryptographic Operation (Signature Algorithms)</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_COP.1.1/KEY_HASH</h:td>
					<h:td>Cryptographic Operation (Keyed-Hash Message Authentication)</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FCS_HTTPS_EXT.1</h:td>
					<h:td>HTTPS Protocol</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr> 
				<!--> 
				  <h:tr>
					<h:td>FCS_IPSEC_EXT.1</h:td>
					<h:td>IPsec Protocol</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr> 
				<-->
				<!-->
				<h:tr>
					<h:td>FCS_SSHC_EXT.1</h:td>
					<h:td>SSH Client</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<-->
				<!-->
				<h:tr>
					<h:td>FCS_SSHS_EXT.1</h:td>
					<h:td>SSH Server</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<-->
				<h:tr>
					<h:td>FCS_IV_EXT.1</h:td>
					<h:td>Initialization Vector Generation</h:td>
					<h:td>Feature Dependent</h:td>
				</h:tr>
				<h:tr>
					<h:td>FCS_RBG_EXT.1</h:td>
					<h:td>Random Bit Generation</h:td>
					<h:td>All</h:td> <!-- Good, Needed for Agent -->
				</h:tr>
				<h:tr>
					<h:td>FCS_STG_EXT.1</h:td>
					<h:td>Cryptographic Key Storage</h:td>
					<h:td>All</h:td>
				</h:tr>
				<h:tr>
					<h:td>FCS_STG_EXT.2</h:td>
					<h:td>Encrypted Cryptographic Key Storage</h:td>
					<h:td>Feature Dependent</h:td>
				</h:tr>
				<h:tr>
					<h:td>FIA_ENR_EXT.1</h:td>
					<h:td>Enrollment of Mobile Device into Management</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FIA_UAU.1</h:td>
					<h:td>Timing of Authentication</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FIA_UAU_EXT.4/REUSE</h:td>
					<h:td>User Authentication</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FIA_UAU_EXT.4/REUSE_ENROLL</h:td>
					<h:td>User Authentication</h:td>
					<h:td>One</h:td>
				</h:tr>
				<h:tr>
					<h:td>FIA_X509_EXT.1/CERTVAL_MAN</h:td>
					<h:td>X.509 Certification Validation</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr> 
				<h:tr>
					<h:td>FIA_X509_EXT.1/CERTVAL_SEL</h:td>
					<h:td>X.509 Certification Validation</h:td>
					<h:td>Feature Dependent</h:td> <!-- Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FIA_X509_EXT.2</h:td>
					<h:td>X.509 Certificate Authentication</h:td>
					<h:td>Feature Dependent</h:td> <!-- Needed for Agent -->
				</h:tr> 
				<h:tr>
					<h:td>FIA_X509_EXT.3</h:td>
					<h:td>X.509 Enrollment</h:td>
					<h:td>Feature Dependent</h:td> <!-- Needed for Agent -->
				</h:tr>
				<h:tr>
					<h:td>FIA_X509_EXT.4</h:td>
					<h:td>Alternate X.509 Enrollment</h:td>
					<h:td>Feature Dependent</h:td> <!-- Needed for Agent -->
				</h:tr>
				<h:tr>
					<h:td>FIA_X509_EXT.5</h:td>
					<h:td>X.509 Unique Certificate</h:td>
					<h:td>One</h:td> <!-- Needed for Agent -->
				</h:tr>       
				<h:tr>
					<h:td>FMT_MOF.1/FUNCBE</h:td>
					<h:td>Management of functions behaviour</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_MOF.1/MANAGEMENT_ENROLL</h:td>
					<h:td>Management of functions behaviour (Enrollment)</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_MOF.1/MANAGEMENT_MAS</h:td>
					<h:td>Management of Functions in (MAS Server Downloads)</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_POL_EXT.1</h:td>
					<h:td>Trusted Policy Update</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_SAE_EXT.1</h:td>
					<h:td>Security Attribute Expiration</h:td>
					<h:td>One</h:td> 
				</h:tr>      
				<h:tr>
					<h:td>FMT_SMF.1/SERVER_CONF_AGENT"</h:td>
					<h:td>Specification of Management Functions (Server configuration of Agent)</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_SMF.1/SERVER_CONF_SERVER</h:td>
					<h:td>Specification of Management Functions (Server configuration of Server)</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_SMF.1/MAS</h:td>
					<h:td>Specification of Management Functions (MAS Server)</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>    
				<h:tr>
					<h:td>FMT_SMR.1/SECMAN_ROLES</h:td>
					<h:td>Security Management Roles</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FMT_SMR.1/SECMAN_ROLES_MAS</h:td>
					<h:td>Security Management Roles</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_API_EXT.1</h:td>
					<h:td>Use of Supported Services and API's</h:td>
					<h:td>All</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_ITT.1/INTER_XFER</h:td>
					<h:td>Internal TOE TSF Data Transfer</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_ITT.1/INTER_XFER_AGENT</h:td>
					<h:td>Internal TOE TSF Data Transfer (To MDM Agent)</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_LIB_EXT.1</h:td>
					<h:td>Use of Third Party Libraries</h:td>
					<h:td>All</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_TST_EXT.1</h:td>
					<h:td>Functionality Testing</h:td>
					<h:td>All (except for MDM Agent components)</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FPT_TUD_EXT.1</h:td>
					<h:td>Trusted Update</h:td>
					<h:td>All</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FTA_TAB.1</h:td>
					<h:td>Default TOE Access Banners</h:td>
					<h:td>One</h:td> 
				</h:tr> 
				<h:tr>
					<h:td>FTP_ITC.1/INTER_XFER_IT</h:td>
					<h:td>Inter-TSF Trusted Channel (Authorized IT Entities)</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FTP_ITC.1/INTER_TSF_XFER_AGENT</h:td>
					<h:td>Inter-TSF Trusted Channel (MDM Agent)</h:td>
					<h:td>One</h:td> 
				</h:tr>
				<h:tr>
					<h:td>FTP_ITC_EXT.1</h:td>
					<h:td>Trusted Channel</h:td>
					<h:td>One</h:td> 
				</h:tr> 
				<h:tr>
					<h:td>FTP_TRP.1/TRUSTPATH_REM_ADMIN</h:td>
					<h:td>Trusted Path for Remote Administration</h:td>
					<h:td>Feature Dependent</h:td> <!-- Both MDM and MAS could allow for remote admin -->
				</h:tr>
				<h:tr>
					<h:td>FTP_TRP.1/TRUSTPATH_ENROLL</h:td>
					<h:td>Trusted Path for Enrollment</h:td>
					<h:td>Feature Dependent</h:td> <!-- Changed because Agent also needs to do this. -->
				</h:tr>
				<h:tr>
					<h:td>FTP_TRP.1/TRUSTPATH_JOIN</h:td>
					<h:td>Trusted Path for Joining</h:td>
					<h:td>Feature Dependent</h:td> 
				</h:tr>     
			</h:table>
			<h:br/>
			Only those SFRs included in the ST are required to be audited. The ST for a distributed TOE must include a mapping of SFRs to each of the components 
			of the TOE. (Note that this deliverable is examined as part of the ASE_TSS.1 and AVA_VAN.1 Evaluation Activities.) The ST for a distributed TOE 
			may also introduce a "minimum configuration" and identify components that may have instances added to an operational configuration without affecting 
			the validity of the CC certification. Appendix E describes Evaluation Activities relating to these equivalency aspects of a distributed TOE (and
			hence what is expected in the ST). 
		</section>
		
		<section id="dis" title="Security Audit for Distributed TOEs">
			<h:br/>
            For distributed TOEs the handling of audit information might be more complicated than for TOEs consisting only of one component.
			There are a few basic requirements to be fulfilled:<h:br/><h:br/>
              <h:ul>
                <h:li>Every component must be able to generate audit information.</h:li>
                <h:li>Every component must be able to buffer audit information and forward it to another TOE component or an external audit server. Optionally,
			each componemt may store audit information locally.</h:li>
                <h:li>For the overall TOE it must be possible to send out audit information to an external audit server.</h:li>
              </h:ul><h:br/>              
			In general, every component must be able to generate its own audit information. It would be possible that every component also stores its own audit 
	      information locally as well as every component could be able to send out audit data to an external audit server. It would also be sufficient that
	      every component would be able to generate its own audit data and buffer it locally before the information is sent out to one or more other 
	      TOE components for local storage and/or transmission to an external audit server. For the transfer of audit records between TOE components 
	      the secure connection via FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT  must be used.<h:br/><h:br/>
              
              Such a solution would still be suitable to fulfil the requirement that all audit-related SFRs have to be fulfilled by all TOE components,
	      although formally not every component would support local storage or transfer to an external audit server itself.<h:br/><h:br/>
              
              Regarding the establishment of inter-TOE communication, error conditions as well as successful connection/teardown events should be captured
	      by both ends of the connection.<h:br/><h:br/>

		All TOE components shall be able to generate its own audit data according to FAU_GEN.1 for all SFRs that it implements. For distributed 
	      TOEs, a mapping shall be provided to show which auditable events according to FAU_GEN.1 are covered by which components (also giving a
	      justification that the records generated by each component cover all the SFRs that it implements). The overall TOE has to provide audit 
	      information about all events defined for FAU_GEN.1. As a result, at least one TOE component has to be assigned to every auditable event
	      defined for FAU_GEN.1. The part of the mapping related to <xref g="t-audit-mandatory"/> shall be consistent with the mapping of SFRs to 
	      TOE components for ASE_TSS.1 in the sense that all components defined as generating audit information for a particular SFR should also contribute 
	      to that SFR in the mapping for ASE_TSS.1. This applies not only to audit events defined for mandatory SFRs but also to all audit events for 
	      optional, selection-based, and objective SFRs as defined in <xref g="optional"/>, <xref g="sel-based"/>, and 
	      <xref g="objective"/>.<h:br/><h:br/>
              
		If one or more of the optional audit components FAU_STG_EXT.1 or FAU_STG_EXT.2 are selected in the ST derived from this PP, then the SFR
	      mapping for ASE_TSS.1 must include a specific identification of the TOE components to which they apply.
      </section>
	</section>
	
	<!-- 4. Security Problem Description -->
	<section title="Security Problem Description" id="spd">
	
		<!-- 4.2 Threats -->
		<section title="Threats" id="threats">
			<threats>
				<threat name="T.MALICIOUS_APPS">
					<description>Malicious or flawed application threats exist because apps loaded onto a
						mobile device may include malicious or exploitable code. An administrator of the MDM or mobile device user
						may inadvertently import malicious code, or an attacker may insert malicious code into the TOE, resulting in the
						compromise of TOE or TOE data.</description>
					<objective-refer ref="O.APPLY_POLICY">
						<rationale>The threat T.MALICIOUS_APPS is countered by O.APPLY_POLICY as this provides the capability to limit the ability to install
							applications on the MD.</rationale>
					</objective-refer>
					<objective-refer ref="O.INTEGRITY">
						<rationale>The threat T.MALICIOUS_APPS is countered by O.INTEGRITY as this provides the capability to perform self-tests to ensure the integrity
							of critical functionality, software/firmware and data has been maintained.</rationale>
					</objective-refer>
				</threat>
				<threat name="T.NETWORK_ATTACK">
					<description>An attacker may masquerade as an MDM Server and attempt to
						compromise the integrity of the mobile device by sending malicious management commands.</description>
					<objective-refer ref="O.DATA_PROTECTION_TRANSIT">
						<rationale>The threat T.NETWORK_ATTACK is countered by O.DATA_PROTECTION_TRANSIT as this provides authentication of the endpoints of a trusted 
							communication path.</rationale>
					</objective-refer>
				</threat>
				<threat name="T.NETWORK_EAVESDROP">
					<description>An attacker is positioned on a communications channel or elsewhere on the
						network infrastructure. Attackers may monitor and gain access to data exchanged
						between the MDM Server and other endpoints.</description>
					<objective-refer ref="O.DATA_PROTECTION_TRANSIT">
						<rationale>The threat T.NETWORK_EAVESDROP is countered by O.DATA_PROTECTION_TRANSIT as this provides the capability to communicate using one
							(or more) standard protocols as a means to maintain the confidentiality of data that are transmitted outside and within the TOE.
						</rationale>
					</objective-refer>
					<objective-refer ref="O.QUALITY">
						<rationale>The threat T.NETWORK_EAVESDROP is countered by O.QUALITY as this provides the capability to invoke platform resources 
							to ensure quality of implementation.
						</rationale>
					</objective-refer>
				</threat>
				<threat name="T.PHYSICAL_ACCESS">
					<description>The mobile device may be lost or stolen, and an unauthorized individual may
						attempt to access user data. Although these attacks are primarily directed against the
						mobile device platform, the TOE configures features, which address
						these threats.</description>
					<objective-refer ref="O.APPLY_POLICY">
						<rationale>The threat T.PHYSICAL_ACCESS is countered by O.APPLY_POLICY as this provides the capability to configure and apply security policies 
							to ensure the Mobile Device can protect user and enterprise data that it may store or process.</rationale>
					</objective-refer>
				</threat>
			</threats>
		</section>
		
		<!-- 4.2 Assumptions -->
		<section id="asp" title="Assumptions">
			<assumptions>
				<assumption name="A.COMPONENTS_RUNNING">
					<description>This assumption applies to distributed TOEs only.
						For distributed TOEs it is assumed that the availability of all TOE components is checked as
						appropriate to reduce the risk of an undetected attack on (or failure of) one or more TOE components. It is also assumed that in addition to the
						availability of all components it is also checked as appropriate that the audit functionality is running properly on all TOE components.</description>
					<objective-refer ref="OE.COMPONENTS_RUNNING">
						<rationale>The operational environment objective OE.COMPONENTS_RUNNING is realized through A.COMPONENTS_RUNNING.</rationale>
					</objective-refer>
				</assumption>
				<assumption name="A.CONNECTIVITY">
					<description>The TOE relies on network connectivity to carry out its
						management activities. The TOE will robustly handle instances when
						connectivity is unavailable or unreliable.</description>
					<objective-refer ref="OE.WIRELESS_NETWORK">
						<rationale>The operational environment objective OE.WIRELESS_NETWORK is realized through
							A.CONNECTIVITY.</rationale>
					</objective-refer>
				</assumption>
				<assumption name="A.MDM_SERVER_PLATFORM">
					<description> The MDM Server relies upon a trustworthy platform and
						local network from which it provides administrative capabilities. <h:br/><h:br/> 
						The MDM Server relies on this platform to provide a range of
						security-related services including reliable timestamps, user and group account
						management, logon and logout services via a local or network directory service, remote
						access control, and audit log management services to include offloading of audit logs to
						other servers. The platform is expected to be configured specifically to provide 
						MDM services, employing features such as a host-based firewall, which
						limits its network role to providing MDM functionality. </description>
					<!--<objective-refer ref="OE.MOBILE_DEVICE_PLATFORM">
						<rationale>The operational environment objective OE.MOBILE_DEVICE_PLATFORM is realized
							through A.MDM_SERVER_PLATFORM.</rationale>
					</objective-refer>-->
					<objective-refer ref="OE.TIMESTAMP">
						<rationale>The operational environment objective OE.TIMESTAMP is realized through A.MDM_SERVER_PLATFORM.</rationale>
					</objective-refer>
				</assumption>
				<assumption name="A.PROPER_ADMIN">
					<description>One or more competent, trusted personnel who are not careless, willfully
						negligent, or hostile, are assigned and authorized as the TOE
						Administrators, and do so using and abiding by guidance documentation.</description>
					<objective-refer ref="OE.PROPER_ADMIN">
						<rationale>The operational environment objective OE.PROPER_ADMIN is realized through
							A.PROPER_ADMIN.</rationale>
					</objective-refer>
				</assumption>
				<assumption name="A.PROPER_USER">
					<description>Mobile device users are not willfully negligent or hostile, and use the
						device within compliance of a reasonable Enterprise security policy. </description>
					<objective-refer ref="OE.PROPER_USER">
						<rationale>The operational environment objective OE.PROPER_USER is realized through
							A.PROPER_USER.</rationale>
					</objective-refer>
				</assumption>
			</assumptions>
		</section>
		
		<!-- 4.3 Organizational Security Policies -->
		<section id="osp" title="Organizational Security Policies">
			<OSPs>
				<OSP name="P.ACCOUNTABILITY">
					<description>Personnel operating the TOE shall be accountable for their actions within the TOE.</description>
					<objective-refer ref="O.ACCOUNTABILITY">
						<rationale>The organizational security policy O.ACCOUNTABILITY is realized through P.ACCOUNTABILITY.</rationale>
					</objective-refer>         
				</OSP>
				<OSP name="P.ADMIN">
					<description>The configuration of the mobile device security functions must adhere to the
						Enterprise security policy.</description>
					<objective-refer ref="OE.PROPER_ADMIN">
						<rationale>The organizational security policy P.ADMIN is realized through
							OE.PROPER_ADMIN.</rationale>
					</objective-refer>
				</OSP>
				<OSP name="P.DEVICE_ENROLL">
					<description>A mobile device must be enrolled for a specific user by the administrator of
						the MDM prior to being used in the Enterprise network by the user.</description>
					<objective-refer ref="OE.IT_ENTERPRISE">
						<rationale>The organizational security policy P.DEVICE_ENROLL is realized through
							OE.IT_ENTERPRISE.</rationale>
					</objective-refer>
				</OSP>
				<OSP name="P.NOTIFY">
					<description>The mobile user must immediately notify the administrator if a mobile device
						is lost or stolen so that the administrator may apply remediation actions via the 
						MDM system.</description>
					<objective-refer ref="OE.PROPER_USER">
						<rationale>The organizational security policy P.NOTIFY is realized through
							OE.PROPER_USER.</rationale>
					</objective-refer>
				</OSP>
			</OSPs>
		</section>
	</section>
	
	
	<!-- 5. Security Objectives -->
	<!-- ? Means that the entry was in the TD but not in the XML -->
	<!-- ?? Means tha the entry as in the XML, but not in the TD. -->
	<!-- Or maybe it's the other way around -->
	<section id="so" title="Security Objectives">
	
	<!-- 5.1 Security Objectives for the TOE -->
    <section id="sot" title="Security Objectives for the TOE">
      <SOs>
        <SO name="O.ACCOUNTABILITY">
          <description>The TOE must provide logging facilities which record management actions undertaken by its administrators.</description>
		<addressed-by>FAU_ALT_EXT.1</addressed-by><rationale>The PP includes FAU_ALT_EXT.1 to define the ability of the TSF to generate alerts when certain actions	occur.</rationale>
		<addressed-by>FAU_GEN.1/AUDITGEN</addressed-by><rationale>The PP includes FAU_GEN.1/AUDITGEN to require the TSF to generate audit records of security-relevant events, including management actions.</rationale>
		<addressed-by>FAU_GEN.1/MAS_SERVER (sel-based)</addressed-by><rationale>The PP includes FAU_GEN.1/MAS_SERVER to require the TSF to generate records of MAS Server functionality if the TSF supports this capability.</rationale>
		<addressed-by>FAU_NET_EXT.1</addressed-by><rationale>The PP includes FAU_NET_EXT.1 to require the TSF to record the connectivity status of enrolled agents.</rationale>
		<addressed-by>FAU_SAR.1 (optional)</addressed-by><rationale>The PP includes FAU_SAR.1 to optionally require the TSF to provide a method to review stored audit data.</rationale>
		<addressed-by>FAU_SEL.1 (optional)</addressed-by><rationale>The PP includes FAU_SEL.1 to optionally require the TSF to define the actions that are accounted for.</rationale>
		<addressed-by>FAU_STG_EXT.1</addressed-by><rationale>The PP includes FAU_STG_EXT.1 for the TSF to securely transmit its audit data to an external entity.</rationale>
		<addressed-by>FAU_STG_EXT.2 (sel-based)</addressed-by><rationale>The PP includes FAU_STG_EXT.2 to require the TSF to protect stored audit records from unauthorized modification if these records are stored locally.</rationale>
<!-- ? -->	<addressed-by>FAU_CRP_EXT.1 (objective)</addressed-by><rationale>The PP includes FAU_CRP_EXT.1 to optionally require the TSF to collect information about the configuration of enrolled devices.</rationale>
        </SO>
        <SO name="O.APPLY_POLICY">
          <description>The TOE must facilitate configuration and enforcement of enterprise security policies on mobile devices via interaction
		  with the mobile OS and the MDM Server. This includes the initial enrollment of the device into management through its entire
		  lifecycle, including policy updates and its possible unenrollment from management services.</description>
	  	<addressed-by>FIA_ENR_EXT.1</addressed-by><rationale>The PP includes FIA_ENR_EXT.1 for the TSF to perform the initial enrollment of devices into management, including applying restrictions on what devices can be enrolled.</rationale>
		<addressed-by>FMT_MOF.1/FUNCBE</addressed-by><rationale>The PP includes FMT_MOF.1/FUNCBE to define the supported TSF management functions, including those used to enable, disable, and apply policies to enrolled devices.</rationale>
		<addressed-by>FMT_MOF.1/MANAGEMENT_ENROLL</addressed-by><rationale>The PP includes FMT_MOF.1/MANAGEMENT_ENROLL for the TSF to restrict the enrollment process to authorized administrators and mobile device users.</rationale>
		<addressed-by>FMT_MOF.1/MANAGEMENT_MAS</addressed-by><rationale>The PP includes FMT_MOF.1/MANAGEMENT_MAS to enforce restrictions on access to the MAS Server from enrolled devices based on applied policies.</rationale>
		<addressed-by>FMT_SAE_EXT.1 (objective)</addressed-by><rationale>The PP includes FMT_SAE_EXT.1 for the TSF to enforce restriction on agent enrollment by limiting the length of time that enrollment authentication data is valid.</rationale>
	 	<addressed-by>FMT_SMF.1/SERVER_CONF_AGENT (sel-based)</addressed-by><rationale>The PP includes FMT_SMF.1/SERVER_CONF_AGENT to specify that the TSF is capable of sending configuration information and enterprise security policies to an MDM Agent.</rationale>
		<addressed-by>FMT_SMR.1/SERVER_CONF_SERVER (sel-based)</addressed-by><rationale>The PP includes FMT_SMR.1/SERVER_CONF_SERVER to define roles on the MAS Server, if this capability is supported, that are used to determine the extent to which enrolled devices can access data on the MAS Server.</rationale>
		<addressed-by>FMT_SMF.1/MAS (sel-based)</addressed-by><rationale>The PP includes FMT_SMF.1/MAS to specify that the TSF is capable of configuring the MAS Server to enforce restrictions on enrolled devices attempting to access it.</rationale>
<!-- ? -->	<addressed-by>FIA_UAU_EXT.4/1 (objective)</addressed-by><rationale>The PP includes FIA_UAU_EXT.4/1 to optionally require the TSF to limit enrollment through the prevention of reuse of enrollment authentication data.</rationale>
<!-- ? -->	<addressed-by>FIA_UAU_EXT.4/2 (objective)</addressed-by><rationale>The PP includes FIA_UAU_EXT.4/2 to provide access controls to prevent the reuse of enrollment data related to device enrollment. The TSF shall prevent two devices to be enrolled using the same unique identifier.</rationale>
<!-- ? -->	<addressed-by>FMT_SAE_EXT.1 (objective)</addressed-by><rationale>The PP includes FMT_SAE_EXT.1 for the TSF to enforce restriction on agent enrollment by limiting the length of time that enrollment authentication data is valid.</rationale>
        </SO>
        <SO name="O.DATA_PROTECTION_TRANSIT">
          <description>Data exchanged between the MDM Server and the MDM Agent must be protected from being monitored, accessed, or altered.</description>
<!-- ? -->	<addressed-by>FAU_CRP_EXT.1 (objective)</addressed-by><rationale>The PP includes FAU_CRP_EXT.1 to require certain data to be collected from remote agents using a secure channel.</rationale>
		<addressed-by>FAU_STG_EXT.1</addressed-by><rationale>The PP includes FAU_STG_EXT.1 which requires the TSF to use a trusted channel for the external transmission of audit data.</rationale>
<!-- ? -->	<addressed-by>FCO_CPC_EXT.1 (objective)</addressed-by><rationale>The PP includes FCO_CPC_EXT.1 to define secure connectivity between different TOE components, including security of data in transit.</rationale>
		<addressed-by>FCS_CKM_EXT.4</addressed-by><rationale>The PP includes FCS_CKM_EXT.4 to ensure that the TSF destroys plaintext keying material and critical security parameters when no longer needed in support of securing data in transit.</rationale>
		<addressed-by>FCS_CKM.1</addressed-by><rationale>The PP includes FCS_CKM.1 to define whether the TSF or the platform generates asymmetric keys that are used in support of securing data in transit.</rationale>
		<addressed-by>FCS_CKM.2</addressed-by><rationale>The PP includes FCS_CKM.2 to define whether the TSF or the platform performs key establishment in support of securing data in transit.</rationale>
	  	<addressed-by>FCS_COP.1/CONF_ALG</addressed-by><rationale>The PP includes FCS_COP.1/CONF_ALG to define the symmetric AES encryption algorithms used in support of securing data in transit.</rationale>
	  	<addressed-by>FCS_COP.1/HASH_ALG</addressed-by><rationale>The PP includes FCS_COP.1/HASH_ALG to define the hash algorithms used in support of securing data in transit.</rationale>
	  	<addressed-by>FCS_COP.1/SIGN_ALG</addressed-by><rationale>The PP includes FCS_COP.1/SIGN_ALG to define the digital signature algorithms used in support of securing data in transit.</rationale>
	  	<addressed-by>FCS_COP.1/KEY_HASH</addressed-by><rationale>The PP includes FCS_COP.1/KEY)HASH to define the HMAC algorithms used in support of securing data in transit.</rationale>
	  	<!--FCS_DTLSS_EXT.1(TLSPackage), --><!--FCS_DTLSC_EXT.1(TLSPackage), -->
		<addressed-by>FCS_HTTPS_EXT.1 (sel-based)</addressed-by><rationale>The PP includes FCS_HTTPS_EXT.1 to define the TOE’s support for the HTTPS trusted communications protocol.</rationale>
		<!--FCS_IPSEC_EXT.1, -->
		<addressed-by>FCS_IV_EXT.1 (sel-based)</addressed-by><rationale>The PP includes FCS_IV_EXT.1 to define the initialization vector generation to ensure secure implementation of cryptography used to secure data in transit.</rationale>
		<addressed-by>FCS_RBG_EXT.1</addressed-by><rationale>The PP includes FCS_RBG_EXT.1 to define whether random bit generation services are implemented by the TSF or the platform. The TOE may rely on the use of a random bit generator to create keys that are subsequently used in support of securing data in transit.</rationale>
		<!--FCS_SSHS_EXT.1, -->
		<addressed-by>FCS_STG_EXT.1</addressed-by><rationale>The PP includes FCS_STG_EXT.1 to define whether the TSF or the Operational Environment protects key data that may be used in support of securing data in transit.</rationale>
		<addressed-by>FCS_STG_EXT.2 (sel-based)</addressed-by><rationale>The PP includes FCS_STG_EXT.2 to define the method the TSF uses to protect stored key data that may be used in support of securing data in transit.</rationale>
		<!--FCS_TLSC_EXT.1(TLSPackage), --><!--FCS_TLSC_EXT.2(TLSPackage), --><!--FCS_TLSS_EXT.1(TLSPackage), --><!--FCS_TLSS_EXT.2(TLSPackage), -->
<!-- ? -->	<addressed-by>FIA_ENR_EXT.1</addressed-by><rationale>The PP includes FIA_ENR_EXT.1 which requires the TSF to use a trusted channel for the agent enrollment process.</rationale>
		<addressed-by>FIA_X509_EXT.1/CERTVAL_MAN</addressed-by><rationale>The PP includes FIA_X509_EXT.1/CERTVAL_MAN to define validation rules for X.509 certificates that may be used in support of securing data in transit.</rationale>
		<addressed-by>FIA_X509_EXT.1/CERTVAL_SEL (sel-based)</addressed-by><rationale>The PP includes FIA_X509_EXT.1/CERTVAL_SEL to define validation rules for X.509 certificates that may be used in support of securing data in transit in the specific case where the TOE is distributed across multiple remote nodes.</rationale>
		<addressed-by>FIA_X509_EXT.2</addressed-by><rationale>The PP includes FIA_X509_EXT.2 to define the TOE functions that support the use of X.509 certificates. This includes protection of data in transit.</rationale>
		<addressed-by>FIA_X509_EXT.3 (objective)</addressed-by><rationale>The PP includes FIA_X509_EXT.3 to define X.509 enrollment activities using PKCS#10 to allow the TOE to obtain a signed certificate for use when establishing trusted communications.</rationale>
		<addressed-by>FIA_X509_EXT.4 (objective)</addressed-by><rationale>The PP includes FIA_X509_EXT.3 to define X.509 enrollment activities using EST to allow the TOE to obtain a signed certificate for use when establishing trusted communications.</rationale>
		<addressed-by>FIA_X509_EXT.5</addressed-by><rationale>The PP includes FIA_X509_EXT.5 to require the TSF to enforce uniqueness for client certificates that are used in support of securing data in transit.</rationale>
		<addressed-by>FPT_ITT.1/INTER_XFER (sel-based)</addressed-by><rationale>The PP includes FPT_ITT.1/INTER_XFER to define how data is secured in transit between TOE components if the MDM server itself is distributed.</rationale>
		<addressed-by>FPT_ITT.1/INTER_XFER_AGENT (sel-based)</addressed-by><rationale>The PP includes FPT_ITT.1/INTER_XFER_AGENT to define how data is secured in transit between the MDM server and MDM agent if both are part of the TOE.</rationale>
		<addressed-by>FTP_ITC_EXT.1</addressed-by><rationale>The PP includes FTP_ITC_EXT.1 to define the trusted channels used by the TOE where security of data in transit is enforced.</rationale>
		<addressed-by>FTP_ITC.1/INTER_XFER_IT</addressed-by><rationale>The PP includes FTP_ITC.1/INTER_XFER_IT to define a trusted communication channel between itself and trusted external servers.</rationale>
		<addressed-by>FTP_ITC.1/INTER_TSF_XFER_AGENT</addressed-by><rationale>The PP includes FTP_ITC.1/INTER_TSF_XFER_AGENT to define a trusted communication channel between itself and an MDM agent if the MDM agent is not part of the TOE.</rationale>
		<addressed-by>FTP_TRP.1/TRUSTPATH_REM_ADMIN</addressed-by><rationale>The PP includes FTP_TRP.1/TRUSTPATH_REM_ADMIN to define requirements for securing data in transit for administrative communications.</rationale>
		<addressed-by>FTP_TRP.1/TRUSTPATH_ENROLL</addressed-by><rationale>The PP includes FTP_TRP.1/TRUSTPATH_ENROLL to define requirements for securing data in transit for agent enrollment.</rationale>
		<addressed-by>FTP_TRP.1/TRUSTPATH_JOIN</addressed-by><rationale>The PP includes FTP_TRP.1/TRUSTPATH_JOIN to define requirements for securing data in transit between TOE components when establishing initial connectivity if the MDM server itself is distributed and a separate registration channel is used.</rationale>
        </SO>
        <SO name="O.INTEGRITY">
          <description>The TOE will provide the capability to perform self tests to ensure the integrity of critical functionality, software, firmware, 
		  and data has been maintained. The TOE will also provide a means to verify the integrity of downloaded updates.</description>
<!-- ? -->  	<addressed-by>FCS_COP.1/HASH_ALG</addressed-by><rationale>The PP includes FCS_COP.1/HASH_ALG to require the TSF to include a mechanism to cryptographically assert and verity the integrity of data using a hash algorithm.</rationale>
<!-- ? -->  	<addressed-by>FCS_COP.1/SIG_ALG</addressed-by><rationale>The PP includes FCS_COP.1(3) to require the TSF to include a mechanism to cryptographically assert and verify the integrity of data using a digital signature.</rationale>
	  	<addressed-by>FIA_X509_EXT.2</addressed-by><rationale>The PP includes FIA_X509_EXT.2 to define the TOE functions that support the use of X.509 certificates. This includes code signing for system software updates, integrity verification, and policy signing.</rationale>
<!-- ? -->	<addressed-by>FMT_POL_EXT.1</addressed-by><rationale>The PP includes FMT_POL_EXT.1 to ensure the integrity of the policies and policy updates to the MDM Agent are digitally signed to protect their integrity.</rationale>
<!-- ?? -->	<addressed-by>FCO_CPC_EXT.1</addressed-by><rationale>The PP includes FCO_CPC_EXT.1 to define secure connectivity between different TOE components, including security of data in transit.</rationale>
		<addressed-by>FPT_TST_EXT.1</addressed-by><rationale>The PP includes FPT_TST_EXT.1 to require The TSF to run a suite of self tests to ensure the correct operation of the TSF and the integrity of stored TSF executable code.</rationale>
		<addressed-by>FPT_TUD_EXT.1</addressed-by><rationale>The PP includes FPT_TUD_EXT.1 to define requirements for trusted update of TSF executable code, including that the integrity of this update data can be verified.</rationale>
        </SO>
        <SO name="O.MANAGEMENT">
          <description>The TOE provides access controls around its management functionality.</description>
<!-- ?? -->  	<addressed-by>FAU_CRP_EXT.1 (objective)</addressed-by><rationale>The PP includes FAU_CRP_EXT.1 to require certain data to be collected from remote agents using a secure channel.</rationale>
		<addressed-by>FAU_SAR.1 (optional)</addressed-by><rationale>The PP includes FAU_SAR.1 to optionally require the TSF to implement management functionality to review audit data that is restricted to authorized users.</rationale>
<!-- ? -->	<addressed-by>FAU_SEL.1 (optional)</addressed-by><rationale>The PP includes FAU_SEL.1 to optionally require the TSF to implement management functionality for configuring the events that are audited.</rationale>
<!-- ?? -->	<addressed-by>FIA_ENR_EXT.1</addressed-by><rationale>The PP includes FIA_ENR_EXT.1 which requires the TSF to use a trusted channel for the agent enrollment process.</rationale>
		<addressed-by>FIA_UAU.1</addressed-by><rationale>The PP includes FIA_UAU.1 to require the TSF to enforce access control on its management interface by requiring user authentication.</rationale>
<!-- ? -->	<addressed-by>FIA_UAU_EXT.4/REUSE (objective)</addressed-by><rationale>The PP includes FIA_UAU_EXT.4/REUSE to optionally require the TSF to limit enrollment through the prevention of reuse of enrollment authentication data.</rationale>
<!-- ? -->	<addressed-by>FIA_UAU_EXT.4/2 (objective)</addressed-by><rationale>The PP includes FIA_UAU_EXT.4(2) to provide access controls to prevent the reuse of enrollment data related to device enrollment. The TSF shall prevent two devices to be enrolled using the same unique identifier.</rationale>
		<addressed-by>FMT_MOF.1/FUNCBE</addressed-by><rationale>The PP includes FMT_MOF.1/FUNCBE for the TSF to restrict the functions to enable, disable, modify, and monitor functions and policies to authorized administrators.</rationale>
		<addressed-by>FMT_MOF.1/MANAGEMENT_ENROLL</addressed-by><rationale>The PP includes FMT_MOF.1/MANAGEMENT_ENROLL to restrict the enrollment process to authorized administrators and mobile device users.</rationale>
<!-- ? -->	<addressed-by>FMT_MOF.1/MANAGEMENT_MAS</addressed-by><rationale>The PP includes FMT_MOF.1/MANAGEMENT_MAS to enforce restrictions on access to the MAS Server from enrolled devices based on applied policies.</rationale>
<!-- ?? -->	<addressed-by>FMT_POL_EXT.1</addressed-by><rationale>The PP includes FMT_POL_EXT.1 to ensure the integrity of the policies and policy updates to the MDM Agent are digitally signed to protect their integrity.</rationale>
		<addressed-by>FMT_SMF.1/SERVER_CONF_AGENT</addressed-by><rationale>The PP includes FMT_SMF.1/SERVER_CONF_AGENT to define the security-relevant management functions that the MDM server is capable of communicating to the MDM Agent.</rationale>
		<addressed-by>FMT_SMF.1/SERVER_CONF_SERVER</addressed-by><rationale>The PP includes FMT_SMF.1/SERVER_CONF_SERVER to define the security-relevant management functions that the MDM server has for its own configuration.</rationale>
		<addressed-by>FMT_SMF.1/MAS</addressed-by><rationale>The PP includes FMT_SMF.1/MAS to define the MAS Server management functionality if this capability is supported.</rationale>
		<addressed-by>FMT_SMR.1/SECMAN_ROLES</addressed-by><rationale>The PP includes FMT_SMR.1/SECMAN_ROLES to define the security management roles that are used as the basis for access control enforcement.</rationale>
		<addressed-by>FMT_SMR.1/SECMAN_ROLES_MAS (sel-based)</addressed-by><rationale>The PP includes FMT_SMR.1/SECMAN_ROLES_MAS to define the management roles that apply to the MAS Server if this capability is supported.</rationale>
		<addressed-by>FTA_TAB.1 (optional)</addressed-by><rationale>The PP includes FTA_TAB.1 to display an Administrator-specified advisory notice and consent warning message regarding use of the TOE.</rationale>
        </SO>
        <SO name="O.QUALITY">
        <description>To ensure quality of implementation, conformant TOEs leverage services and APIs provided by the runtime environment rather than
		implementing their own versions of these services and APIs. This is especially important for cryptographic services and other complex 
		operations such as file and media parsing. Leveraging this platform behavior relies upon using only documented and supported APIs.</description>
        	<addressed-by>FPT_API_EXT.1</addressed-by><rationale>The PP includes FPT_API_EXT.1 to enforce quality of implementation by ensuring that the MDM software uses only documented platform APIs to supports its security functionality.</rationale>
		<addressed-by>FPT_LIB_EXT.1</addressed-by><rationale>The PP includes FPT_LIB_EXT.1 to enforce quality of implementation by ensuring that the MDM software does not include any unnecessary or unexpected third-party libraries which could present a privacy threat or vulnerability.</rationale>
        </SO>        
      </SOs>
    </section>
	  
	<!-- 5.2 Securioty Objectives for the Operational Environment -->
    <section id="sooe" title="Security Objectives for the Operational Environment">
      <SOEs>
        <SOE name="OE.COMPONENTS_RUNNING">
          <description>For distributed TOEs the administrator ensures that the availability of every TOE component is checked as appropriate to reduce the 
		  risk of an undetected attack on (or failure of) one or more TOE components. The administrator also ensures that it is checked as appropriate 
		  for every TOE component that the audit functionality is running properly. </description>
        </SOE>
        <SOE name="OE.PROPER_ADMIN">
          <description>TOE Administrators are trusted to follow and apply all administrator guidance in a trusted manner.</description>
        </SOE>
        <SOE name="OE.PROPER_USER">
          <description>Users of the mobile device are trained to securely use the mobile device and apply all guidance in a trusted manner.</description>
        </SOE>
        <SOE name="OE.IT_ENTERPRISE">
          <description>The enterprise IT infrastructure provides security for a network that is available to the TOE and mobile devices that prevents 
		  unauthorized access.</description>
        </SOE>
        <!--
        <SOE name="OE.MOBILE_DEVICE_PLATFORM">
          <description>The MDM Agent relies upon the trustworthy mobile platform and hardware to provide policy enforcement as well as cryptographic services
 		and data protection. The mobile platform provides trusted updates and software integrity verification of the MDM Agent.</description>
        </SOE>-->        
        <SOE name="OE.TIMESTAMP">
          <description>Reliable timestamp is provided by the operational environment for the TOE.</description>
        </SOE>        
        <SOE name="OE.WIRELESS_NETWORK">
          <description>A wireless network will be available to the mobile devices.</description>
        </SOE>
	</SOEs>
    </section>
	
		<!-- 5.3 Security Objectives Rationale (auto-generated -->
		<section title="Security Objectives Rationale" id="secobjrat"/>

	</section>
  
	<!-- 6. Security Requirements -->
	<section title="Security Requirements" id="req">
	
		<!-- NOTE: CC Conventions text autopopulates here -->
		The SFRs included in this section are derived from Part 2 of the Common Criteria for Information Technology Security Evaluation, Version 3.1, Revision 5,
		with additional extended functional components.
		<h:br/><h:br/>
		For a distributed TOE, the ST author should reference <xref to="distTOE"/> for guidance on how each SFR should be met. The table details whether
		SFRs should be met by all TOE components, by at least one TOE component or whether they are dependent upon the feature being implemented by the
		TOE component. The ST for a distributed TOE must include a mapping of SFRs to each of the components of the TOE. (Note that this deliverable 
		is examined as part of the ASE_TSS.1 and AVA_VAN.1 Evaluation Activities.)
	  
		<h:b>Test Environment for Evaluation Activities</h:b><h:p/>
			As described in the evaluation activities below, the ST for an MDM system is required to list all the supported MDM Agents and MD platforms with which
			an MDM Server operates. The identified evaluation activities for testing that includes the use of an Agent should be completed for each MDM Agent
			and platform listed in the ST.<h:br/><h:br/>      
			The evaluator's activities for testing that include use of an Agent will ensure that the Server interacts appropriately with the Agent (i.e. sends a
			policy update to the Agent), but will not ensure that the Agent handles the received data correctly (i.e. appropriately applies the policy to the 
			device), as that is accounted for in the Evaluation Activities in the Mobile Device Fundamentals PP or the PP-Module for Mobile Device Management
			Agents.<h:p/> 
		
		<section id="tsfr" title="Security Functional Requirements">
		
			<section id="ss-audit-table" title="Auditable Events for Mandatory SFRs">
				<audit-table table="mandatory"/>
			</section>		
	
		<section id="fau" title="Security Audit (FAU)">
	  
        <f-component cc-id="fau_alt_ext.1" name="Server Alerts">
          <f-element id="fau-alt-ext-1e1">
            <title>The TSF shall alert the administrators in the event of any of the following: <h:ol type="a">
                <h:li>Change in enrollment status</h:li>
                <h:li>Failure to apply policies to a mobile device</h:li>
                <h:li><selectables><selectable><assignable>Other events</assignable></selectable><selectable>no other events</selectable></selectables></h:li>
              </h:ol>
            </title>
            <note role="application"> An alert can be defined as any form of providing straightaway notice to the administrator. An alert is different from 
		    an audit record, however the fact that an alert was sent should be audited per FAU_GEN.1. Email, pop-up notifications, or other methods 
		    are acceptable forms of alerts.<h:br/><h:br/>            
              The MDM Agent is required to report to the MDM Server on successful application of policies on a managed mobile device, and failures can be
		    inferred from the absence of such alerts. This requirement is intended to ensure that the MDM Server notifies administrators when policies 
		    are not properly installed. Failure to properly install policy updates does not affect the enrollment status of the mobile device.</note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS and verify that it describes how the alert system is implemented. The evaluator shall also verify that
		      a description of each assigned event is provided in the TSS.</TSS>
              <Guidance>The evaluator shall examine the guidance document and verify that it describes how the alerts can be configured, if configurable.</Guidance>
              <Tests> For each MDM Agent/platform listed as supported in the ST: <testlist>
                <test>The evaluator shall enroll a device and ensure that the MDM server alerts the administrator of the change in enrollment status. The 
			evaluator shall unenroll (retire) a device and ensure that the MDM server alerts the administrator of the change in enrollment status.</test>
                <test>The evaluator shall configure policies, which the MDM agent should not be able to apply. These policies shall include:<h:ul>
                      <h:li>a setting which is configurable on the MDM Server interface but not supported by the platform on which the MDM Agent runs, if any
			      such settings exist</h:li>
                      <h:li>a valid configuration setting with an invalid parameter, which may require manual modification of the policy prior to transmission
			      to the device</h:li>
                    </h:ul> 
                    The evaluator shall deploy such policies and verify that the MDM server alerts the administrator about the failed application of the policy.</test>
                <test>(Conditional) The evaluator shall trigger each of the events listed and ensure that the MDM Server alerts the administrator.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
			<audit-event>
				<audit-event-descr>Type of alert</audit-event-descr>
				<audit-event-info>Identity of Mobile Device that sent alert.</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fau_crp_ext.1" name="Support for Compliance Reporting of Mobile Device Configuration" status="objective">
          <f-element id="fau-crp-ext-1e1">
            <title> The TSF shall provide <selectables><selectable>an interface that provides responses 
              to queries about the configuration of enrolled devices</selectable><selectable>an interface that permits the export 
                of data about the configuration of enrolled devices</selectable> </selectables> to authorized entities over a 
              channel that meets the secure channel requirements in FTP_ITC.1/INTER_XFER_IT. The provided information for each enrolled mobile device includes: <h:ol type="a">
              <h:li>The current version of the MD firmware/software</h:li>
              <h:li>The current version of the hardware model of the device</h:li>
              <h:li>The current version of installed mobile applications</h:li>
              <h:li>List of MD configuration policies that are in place on the device (as defined in 
                <xref to="fel-smf-man-agnt"/>)</h:li>
              <h:li><selectables>
                <selectable><assignable>list of other available information about enrolled devices</assignable></selectable>
                <selectable>no other information</selectable></selectables>
              </h:li>
            </h:ol>
            </title>
            <note role="application">The intent of this requirement is that the MDM Server be able to provide 
              compliance information about enrolled mobile devices for use by other enterprise security infrastructure systems. 
              There are active standards efforts underway by the Internet Engineering Task Force (IETF) Security Automation and 
              Continuous Monitoring (SACM) Working Group and others to define protocols and standards to assess and report upon 
              endpoint device posture. We expect that this requirement will evolve in future versions of this Protection Profile 
              as standards efforts mature.<h:br/><h:br/> 
            </note>
            <aactivity>
              <Guidance>The evaluator shall check to ensure that the operational guidance contains instructions on how to access the MDM Server's compliance
		      reporting interface.</Guidance>
              <Tests>
                <testlist>
                  <test>Using the operational guidance, the evaluator shall demonstrate the ability to access the compliance reporting interface from an 
			  authorized entity and successfully obtain information about enrolled devices.</test>
                  <test>The evaluator shall attempt to access the compliance reporting interface from an unauthorized entity and demonstrate that the attempt
			  is denied.</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
	
        <f-component cc-id="fau_gen.1" name="Audit Data Generation" iteration="AUDITGEN">
			<f-element id="fel-gen-func-tsf">
				<title><h:b>Refinement:</h:b> The TSF shall 
					<selectables>
						<selectable>invoke platform-provided functionality</selectable>
						<selectable>implement functionality</selectable>
					</selectables> to generate an audit record of the following auditable events: 
					<h:ol type="a">
						<h:li>Start up and shut down of the MDM System</h:li>
						<h:li>All administrative actions</h:li>
						<h:li>
							<selectables>
								<selectable>Commands issued to the MDM Agent</selectable>
								<selectable>none</selectable>
								</selectables>
						</h:li>
						<h:li>Specifically defined auditable events listed in <xref g="t-audit-mandatory"/></h:li>
                        <h:li><refinement><selectables linebreak="yes">
                            <selectable id="sel-at2">Auditable events defined in <xref g="t-audit-optional"/> for Strictly Optional SFRs</selectable>
							<selectable id="sel-at3">Auditable events defined in <xref g="t-audit-objective"/> for Objective SFRs</selectable>
                            <selectable id="sel-at4">Auditable events defined in <xref g="t-audit-sel-based"/> for Selection-Based SFRs</selectable>
							<selectable id="sel-attls">Auditable events defined in the audit table for the TLS Functional Package (see <xref to="atref-pkgs"/>)</selectable>
                            <selectable>no other auditable events</selectable>
						</selectables></refinement></h:li>
						<h:li>
							<selectables>
								<selectable><assignable>other events</assignable></selectable>
								<selectable>no other events</selectable>
							</selectables>.
						</h:li>
					</h:ol>
				</title>
            <note role="application">
				This requirement outlines the events for which an audit record must be generated by either the MDM System or the
				MDM Server platform. Each of these audit records may be written by the MDM System or may be dispatched to the operating system on which 
				it runs. It is acceptable to select both "invoke platform-provided functionality" and "implement functionality." It should be specified
				which auditable events are completed by the MDM System and which are completed by the MDM platform. <h:br/><h:br/>
				The ST author can include other auditable events in the assignment; they are not limited to the list presented. All audits must contain at least 
				the information mentioned in <xref to="fel-gen-tsf-info"/>, but may contain more information which can be assigned.<h:br/><h:br/> 
				For distributed TOEs each component must generate an audit record for each of the SFRs that it implements. If more than one TOE component is
				involved when an audit event is triggered, the event has to be audited on each component (e.g. rejection of a connection by one component
				while attempting to establish a secure communication channel between two components should result in an audit event being generated by
				both components). This is not limited to error cases but also includes events about successful actions like successful build up/tear down 
				of a secure communication channel between TOE components.<h:br/><h:br/>
				Item a above requires the audtiting of the start-up and shutdown of the given component of the MDM System. If the TOE is distributed, this 
				applies to all components. If the TOE is not distributed then MDM System is equivalent to MDM Server.<h:br/><h:br/>
				Item b above requires all administrative actions to be auditable. Administrative actions refer to any management functions specified by 
				FMT_MOF.1/FUNCBE. Thus no additional specification for the auditability of these actions is specified in the various auditable events tables aside 
				from those that require additional record content. If the TOE is distributed and the given component does not deal with setting the policy 
				applied to the MDM Agent, it is acceptable to not have any administrative actions to audit.<h:br/><h:br/> 
				Item c includes those commands, which may be performed automatically based on triggers or on a schedule. If the TOE component, if distributed, 
				interacts directly with the MDM Agent, then "Commands issued to an MDM Agent" must be selected. If the TOE component, if distributed, does
				not interact directly with the MDM Agent, then it is acceptable to select "none".<h:br/><h:br/> 
				Depending on the specific requirements selected by the ST author from Security Functional Requirements, Optional Requirements, Selection-Based
				Requirements, and Objective Requirements, the ST author should include the appropriate auditable events from <xref g="t-audit-optional"/>.
				<xref g="t-audit-sel-based"/>, and <xref g="t-audit-objective"/> in the ST for the requirements selected.<h:br/><h:br/> 
		    	The following table contains the events enumerated in the auditable events tables for the TLS Functional Package. Inclusion of these events
		    	in the ST is subject to selection above, inclusion of the corresponding SFRs in the ST, and support in the FP as represented by a selection
		    	in the FP audit table. This list is included here for reference.
							<h:b><ctr ctr-type='Table' id="atref-pkgs" pre="Table ">: Auditable Events for Functional Packages</ctr></h:b><h:br/>							
							<h:table>
								<h:tr class="header"><h:td>Requirement</h:td><h:td>Auditable Events</h:td><h:td>Additional Audit Record Contents</h:td></h:tr>

								<h:tr><h:td>FCS_TLSC_EXT.1</h:td>
								<h:td>Failure to establish a TLS session.</h:td>
								<h:td>Reason for failure.</h:td></h:tr>
								
								<h:tr><h:td>FCS_TLSC_EXT.1</h:td>
								<h:td>Failure to verify presented identifier.</h:td>
								<h:td>Presented identifier and reference identifier.</h:td></h:tr>

								<h:tr><h:td>FCS_TLSS_EXT.1</h:td>
								<h:td>Failure to establish a TLS session.</h:td>
								<h:td>Reason for failure.</h:td></h:tr>

								<h:tr><h:td>FCS_DTLSC_EXT.1</h:td>
								<h:td>Failure of the certificate validity check.</h:td>
								<h:td>Issuer Name and Subject Name of certificate.</h:td></h:tr>
							
								<h:tr><h:td>FCS_DTLSS_EXT.1</h:td>
								<h:td>Failure of the certificate validity check.</h:td>
								<h:td>Issuer Name and Subject Name of certificate.</h:td></h:tr>
							</h:table>
				
            </note>
            <aactivity>
              <TSS>The evaluator shall check the TSS and ensure that it lists all of the auditable events. The evaluator shall check to make sure that every
		      audit event type mandated by the PP is described in the TSS. The evaluator shall verify that for every audit event described in the 
		      TSS, the description indicates where the audit event is generated (TSF, TOE platform).<h:br/><h:br/>                            
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
		      platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the 
		      MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance> The evaluator shall check the administrative guide and ensure that it lists all of the auditable events. The evaluator shall check 
		      to make sure that every audit event type mandated by the PP is described.<h:br/><h:br/> 
              The evaluator shall also make a determination of the administrative actions that are relevant in the context of this PP including those listed in
		      the Management section. The evaluator shall examine the administrative guide and make a determination of which administrative commands 
		      are related to the configuration (including enabling or disabling) of the mechanisms implemented in the TOE that are necessary to enforce 
		      the requirements specified in the PP. The evaluator shall document the methodology or approach taken while determining which actions
		      in the administrative guide are security relevant with respect to this PP. The evaluator may perform this activity as part of the
		      activities associated with ensuring the AGD_OPE guidance  satisfies the requirements.<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator shall test the TOEs ability to correctly generate audit records by having the TOE generate audit records for the events
		      listed in the provided table and administrative actions. This should include all instances of an event. The evaluator shall test that 
		      audit records are generated for the establishment and termination of a channel for each of the cryptographic protocols contained in the
		      ST. For administrative actions, the evaluator shall test that each action determined by the evaluator above to be security relevant in
		      the context of this PP is auditable.<h:br/><h:br/> 
              Note that the testing here can be accomplished in conjunction with the testing of the security mechanisms directly. For example, testing
		      performed to ensure that the administrative guidance provided is correct verifies that AGD_OPE.1 is satisfied and should address the
		      invocation of the administrative actions that are needed to verify the audit records are generated as expected.
	      </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-gen-tsf-info">
            <title> The TSF shall record within each TSF audit record at least the following information: <h:ul>
              <h:li>date and time of the event</h:li>
              <h:li>type of event</h:li>
              <h:li>subject identity</h:li>
              <h:li>(if relevant) the outcome (success or failure) of the event</h:li>
              <h:li>additional information in <xref g="t-audit-mandatory"/></h:li>
              <h:li><refinement><selectables linebreak="yes">
                    <selectable id="sel-at2-i">Additional information defined in <xref g="t-audit-optional"/> for Strictly Optional SFRs</selectable>
					<selectable id="sel-at3-i">Additional information defined in <xref g="t-audit-objective"/> for Objective SFRs</selectable>
                    <selectable id="sel-at4-i">Additional information defined in <xref g="t-audit-sel-based"/> for Selection-Based SFRs</selectable>
					<selectable id="sel-attls-i">Additional information defined in the audit table for the TLS Functional Package (see <xref to="atref-pkgs"/>)</selectable>
                    <selectable>no other additional information</selectable>
				</selectables></refinement></h:li>
              <h:li><assignable>other audit relevant information</assignable>.</h:li>
            </h:ul>
            </title>
            <note role="application"> This requirement outlines the information to be included in audit records. All audits must contain at least the
		    information mentioned in <xref to="fel-gen-tsf-info"/>, but may contain more information which can be assigned. The ST author
		    must identify in the TSS which information of the audit record that is performed by the TSF and that which is performed by the 
		    TOE platform. <h:br/><h:br/>
              <!-- TODO: If the MDM invokes the platform to audit an event for FAU_GEN.1.1(1), then are they guarenteed that the platform will provide them 
		with the necessary information in the audit event? Need to make sure that this is in OS PP-->  
            </note>
            <aactivity>
              <TSS>The evaluator shall check the TSS and ensure that it provides a format for audit records. Each audit record format type must be covered, 
		      along with a brief description of each field.<h:br/><h:br/>
				</TSS>
              <Guidance>The evaluator shall check the administrative guide and ensure that it provides a format for audit records. Each audit record format
		      type must be covered, along with a brief description of each field. The evaluator shall check to make sure that the description of the
		      fields contains the information required in <xref to="fel-gen-tsf-info"/>.<h:br/><h:br/>
			</Guidance>
              <Tests> When verifying the test results from <xref to="fel-gen-func-tsf"/>, the evaluator shall ensure the audit records generated during 
		      testing match the format specified in the administrative guide, and that the fields in each audit record have the proper entries.<h:br/><h:br/> 
                Note that the testing here can be accomplished in conjunction with the testing of the security mechanisms directly. For example, testing
		      performed to ensure that the administrative guidance provided is correct verifies that AGD_OPE.1 is satisfied and should address the
		      invocation of the administrative actions that are needed to verify the audit records are generated as expected.<h:br/><h:br/> 
			</Tests>
            </aactivity>
          </f-element>
        <audit-event/>
		</f-component>
        
        <f-component cc-id="fau_gen.1" name="Audit Generation (MAS Server)" status="sel-based" iteration="MAS_SERVER">
          <depends on-sel="mas"/>
          <f-element id="fau-gen-1e1-mas">
            <title><h:b>Refinement:</h:b> The MAS Server shall be able to generate an audit record of the following auditable events: <h:ol type="a">
              <h:li>Failure to push a new application on a managed mobile device</h:li>
              <h:li>Failure to update an existing application on a managed mobile device.</h:li>
            </h:ol></title>
            <note role="application">The MDM Agent is required to report to the MAS Server on successful receipt of an application or update on a managed 
		    mobile device, and failures can be inferred from the absence of such alerts.</note>
            <aactivity>
              <TSS>The evaluator shall check the TSS and ensure that it provides a format for audit records.<h:br/><h:br/></TSS>
              <Guidance> The evaluator shall check the administrative guide and ensure that it provides a format for audit records. Each audit record format 
		      type must be covered, along with a brief description of each field.<h:br/><h:br/> </Guidance>
              <Tests>The evaluator shall verify that when an application or update push fails, that the audit records generated match the format specified 
		      in the guidance and that the fields in each audit record have the proper entries.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-gen-mas-server">
            <title><h:b>Refinement:</h:b> The <selectables><selectable>MAS Server</selectable><selectable>MAS Server platform</selectable></selectables> 
		    shall record within each TSF audit record at least the following information: <h:ul>
              <h:li>date and time of the event</h:li>
              <h:li>type of event</h:li>
              <h:li>mobile device identity</h:li>
              <h:li><assignable>other audit relevant information</assignable></h:li>
            </h:ul>
            </title>
            <note role="application">All audits must contain at least the information mentioned in <xref to="fel-gen-mas-server"/>, but may contain 
		    more information which can be assigned. The ST author must identify in the TSS which information of the audit record that is performed by
		    the TSF and that which is performed by the TOE platform.</note>
            <aactivity>
              <TSS>The evaluator shall check the TSS and ensure that it provides a format for audit records. Each audit record format type must be covered,
		      along with a brief description of each field.<h:br/><h:br/>
	      </TSS>
              <Guidance>The evaluator shall check the administrative guide and ensure that it provides a format for audit records. Each audit record format
		      type must be covered, along with a brief description of each field. The evaluator shall check to make sure that the description of the 
		      fields contains the information required in <xref to="fel-stg-ext-func"/>.<h:br/><h:br/>
	      </Guidance>
              <Tests>When verifying the test results from <xref to="fel-gen-mas"/>, the evaluator shall ensure the audit records generated during 
		      testing match the format specified in the administrative guide, and that the fields in each audit record have the proper entries.<h:br/><h:br/> 
              Note that the testing here can be accomplished in conjunction with the testing of the security mechanisms directly. For example, testing
		      performed to ensure that the administrative guidance provided is correct verifies that AGD_OPE.1 is satisfied and should address 
		      the invocation of the administrative actions that are needed to verify the audit records are generated as expected.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fau_net_ext.1" name="Network Reachability Review">
          <f-element id="fau-net-ext-1e1">
            <title>The TSF shall provide authorized administrators with the capability to read the network connectivity status of an enrolled agent.</title>
            <note role="application"> The MDM Server establishes the network connectivity status of enrolled agents using periodic reachability event alerts
		    from the agents according to FAU_ALT_EXT.2.1 in the MDM Agent PP-Module. This status may be determined by sending an update request from
		    the MDM Server which the Agent is required to respond to or by using scheduled periodic notifications of connectivity initiated by the 
		    MDM Agent. </note>
            <aactivity>
              <TSS> The evaluator ensures that the TSS describes how reachability events are implemented, for each supported mobile platform. The evaluator
		      verifies that this description clearly indicates who (MDM Agent or MDM Server) initiates reachability events.<h:br/><h:br/></TSS>
              <Guidance> The evaluator shall verify that the guidance instructs administrators on the method of determining the network connectivity status
		      of an enrolled agent.<h:br/><h:br/></Guidance>
              <Tests> For each MDM Agent/platform listed as supported in the ST:<h:br/><h:br/> 
              The evaluator shall configure the MDM Agent/platform to perform a network reachability test, both with and without such connectivity and shall 
		      ensure that by following the guidance, the evaluator can determine results that reflect both.
	      </Tests>
            </aactivity>
          </f-element>
			<audit-event/>
		</f-component> 
		
        <f-component cc-id="fau_sar.1" name="Audit Review" status="optional">
          <f-element id="fau-sar-1e1">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide [Authorized Administrators] with the capability to read [all audit data] from the audit records.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each 
		      supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented
		      by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
            </aactivity>
          </f-element>
          <f-element id="fau-sar-1e2">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide the audit records in a manner suitable for the Authorized Administrators to interpret the information.</title>
            <note role="application">The intent of this requirement is to ensure that the administrator can view and interpret the audit records and to
		    prevent unauthorized users from accessing the logs.</note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
		      platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the
		      MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check the AGD guidance and ensure that it describes how the administrator accesses the audit data and describes
		      the format of the audit record.<h:br/><h:br/>          </Guidance>
              <Tests>The evaluator shall attempt to view the audit record as the authorized administrator and verify that the action succeeds. The evaluator 
		      shall ensure the audit records generated during testing match the format specified in the administrative guide.
            </Tests>  
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fau_sel.1" name="Security Audit Event Selection" status="optional">
          <f-element id="fau-sel-1e1">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable></selectables>      
              to select the set of events to be audited from the set of all auditable events based on the following attributes:
              <h:ol type="a">
                <h:li>event type</h:li>
                <h:li>success of auditable security events</h:li>
                <h:li>failure of auditable security events</h:li>
                <h:li><assignable>other attributes</assignable></h:li>
              </h:ol>
            </title>
            <note role="application">The intent of this requirement is to identify all criteria that can be selected to trigger an audit event. The 
		    ST author must select whether the TSF or the platform maintains the audit record. For the ST author, the assignment is used to list
		    any additional criteria or "none".</note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported 
		      platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the 
		      MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall review the administrative guidance to ensure that the guidance itemizes all event types, as well as describes all 
		      attributes that are to be selectable in accordance with the requirement, to include those attributes listed in the assignment. The
		      administrative guidance shall also contain instructions on how to set the pre-selection as well as explain the syntax (if present) for 
		      multi-value pre-selection. The administrative guidance shall also identify those audit records that are always recorded, regardless of 
		      the selection criteria currently being enforced.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall also perform the following tests:<testlist>
                <test>For each attribute listed in the requirement, the evaluator shall devise a test to show that selecting the attribute causes only audit
			events with that attribute (or those that are always recorded, as identified in the administrative guidance) to be recorded.</test>
                <test>[conditional] If the TSF supports specification of more complex audit pre-selection criteria (e.g., multiple attributes, logical
			expressions using attributes) then the evaluator shall devise tests showing that this capability is correctly implemented. The 
			evaluator shall also, in the test plan, provide a short narrative justifying the set of tests as representative and sufficient to
			exercise the capability.</test>
              </testlist></Tests>
            </aactivity>
          </f-element>
			<audit-event>
				<audit-event-descr>All modifications to the audit configuration that occur while the audit collection functions
					are operating.</audit-event-descr>
			</audit-event>
		</f-component>      
		
        <f-component cc-id="fau_stg_ext.1" name="External Trail Storage">
          <f-element id="fel-stg-ext">
            <title>The TSF shall be able to use a trusted channel per FTP_ITC.1/INTER_XFER_IT to transmit audit data to an external IT entity and <selectables>
                <selectable>store audit data locally</selectable>
                <selectable>no other method</selectable>
                </selectables>.
            </title>
            <note role="application">The TOE must be capable of transmitting audit data to an external entity 
              using a trusted channel as specified in FTP_ITC.1/INTER_XFER_IT and optionally can store audit data locally. 
              If "store audit data locally" is selected, then <xref to="fel-stg-ext-func"/> must be included in the 
              ST.<h:br/><h:br/> 
              
              This requirement only applies to audit data maintained by the TSF, not audit data that is maintained 
              by the platform. Audit data may include the audit records received from the Agent, in addition to the audit records 
              generated by the MDM Server.<h:br/><h:br/>
              
              The TOE may rely on a non-TOE audit server for storage and review of audit records. 
              Although the TOE generates audit records and receives audit records from managed mobile devices, the 
              storage of these audit records and the ability to allow the administrator to review these audit records is provided by 
              the operational environment. The TSF may rely on the underlying operating system for this 
              functionality.<h:br/><h:br/> 
              
              Although the audit server is outside of the TOE, the MDM Server should still be able to support 
              mutual authentication. There are no requirements levied on the audit server, but the client (MDM Server) should be 
              able to support TLS client certificate authentication. This way if the non-TOE audit server does 
              support verifying client certs, the MDM Server is in a position to make use of that.<h:br/><h:br/>
              
              
              For distributed TOEs each component must be able to export audit data across a protected channel external (FTP_ITC.1) or intercomponent
		    (FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or FTP_ITC.1) as appropriate. At least one component of the TOE must be able to export 
		    audit records via FTP_ITC.1/INTER_XFER_IT such that all TOE audit records can be exported to an external IT entity. 
              </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to ensure it describes the means by which the audit data are transferred to the external audit server, 
		      and how the trusted channel is provided.<h:br/><h:br/></TSS>
              <Guidance> The evaluator shall also examine the operational guidance to determine that it describes the relationship between the local audit
		      data and the audit data that are sent to the audit log server. For example, when an audit event is generated, is it simultaneously sent
		      to the external server and the local store, or is the local store used as a buffer and "cleared" periodically by sending the data to the
		      audit server.<h:br/><h:br/> 
              The evaluator shall also examine the operational guidance to ensure it describes how to establish the trusted channel to the audit server, as
		      well as describe any requirements on the audit server (particular audit server protocol, version of the protocol required, etc.), as well
		      as configuration of the TOE needed to communicate with the audit server. <h:br/><h:br/></Guidance>
              <Tests> Testing of the trusted channel mechanism will be performed as specified in the associated evaluation activities for the particular 
		      trusted channel mechanism.<h:br/><h:br/> 
                The evaluator shall perform the following test for this requirement: <testlist>
                  <test>The evaluator shall establish a session between the TOE and the audit server according to the configuration guidance provided. The
			  evaluator shall then examine the traffic that passes between the audit server and the TOE during several activities of the evaluator's
			  choice designed to generate audit data to be transferred to the audit server. The evaluator shall observe that these data are not able
			  to be viewed in the clear during this transfer, and that they are successfully received by the audit server. The evaluator shall
			  record the particular software (name, version) used on the audit server during testing. </test>
                </testlist></Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
		
        <f-component cc-id="fau_stg_ext.2" name="Audit Event Storage" status="sel-based">
          <depends on-sel="FAU_STG.1_stored"/>
          <f-element id="fel-stg-ext-func">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to protect the stored audit records in the audit trail from unauthorized modification.</title>
            <note role="application">If "store audit data locally" is selected in <xref to="fel-stg-ext"/>, this SFR shall be included in the ST.<h:br/><h:br/> 
			The purpose of this requirement is to ensure that audit records are stored securely. The ST author is responsible for selecting whether audit records 
			are maintained when audit storage or failure occurs. The ST author must choose a means by which audit records are saved and select the events during which
			the records will be saved. The TSF may rely on the underlying operating system for this functionality, and the first selection should be made
			appropriately.</note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
		      platform) how the audit record protection functionality is invoked (it should be noted that this may be through a mechanism that is not 
		      implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
              If "implement functionality" is selected, the evaluator shall ensure that the TSS describes how the audit records are protected from unauthorized 
		      modification or deletion. The evaluator shall ensure that the TOE uses audit trail specific protection mechanisms.<h:br/><h:br/>
	      </TSS>
              <Tests>The evaluator shall perform the following tests: <testlist>
                  <test>The evaluator shall access the audit trail as an unauthorized user and attempt to modify and delete the audit records. The evaluator
			  shall verify that these attempts fail.</test>
                  <test>The evaluator shall access the audit trail as an authorized user and attempt to modify and delete the audit records. The evaluator
			  shall verify that these attempts succeed. The evaluator shall verify that only the records intended for modification and deletion
			  are modified and deleted.</test>
                </testlist>
		</Tests>
              </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
      </section>
      

      <section id="fco" title="Communication (FCO)">
        <f-component cc-id="fco_cpc_ext.1" name="Component Registration Channel Definition" status="objective">
          <f-element id="fel-cpc">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to require an Administrator to enable communications between any pair of TOE components before such communication can take place.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each
		      supported platform) how the audit record protection functionality is invoked (it should be noted that this may be through a mechanism
		      that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation
		      activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-cpc-func">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to implement a registration process in which components establish and use a communications channel that uses
              <selectables>
                <selectable>A channel that meets the secure channel requirements in 
                  <selectables>
                    <selectable>FTP_ITC.1</selectable> 
                    <selectable>FPT_ITT.1/INTER_XFER</selectable>
                    <selectable>FPT_ITT.1/INTER_XFER_AGENT</selectable>
                </selectables>
                </selectable>
                <selectable>A channel that meets the secure registration channel requirements in FTP_TRP.1/TRUSTPATH_JOIN</selectable>
                <selectable>No channel</selectable>
              </selectables>
              for at least TSF data.
            </title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each 
		      supported platform) how the audit record protection functionality is invoked (it should be noted that this may be through a mechanism
		      that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation 
		      activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-cpc-disablecomms">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to enable an administrator to disable communications between any pair of TOE components.</title>
            <note role="application">
              This SFR is only applicable if the TOE is distributed and therefore has multiple components that need to communicate via an internal 
		    TSF channel. When creating the TSF from the initial pair of components, either of these components may be identified as the 
		    TSF for the purposes of satisfying the meaning of "TSF" in this SFR. <h:br/><h:br/>
              
              The intention of this requirement is to ensure that there is a registration process that includes a positive enablement step by an administrator 
		    before components joining a distributed TOE can communicate with the other components of the TOE and before the new component can act as
		    part of the TSF. The registration process may itself involve communication with the joining component: many implementations use a bespoke
		    process for this, and the security requirements for the "registration communication" are then defined in <xref to="fel-cpc-func"/>.
		    Use of this "registration communication" channel is not deemed inconsistent with the requirement of <xref to="fel-cpc"/> 
		    (i.e. the registration channel can be used before the enablement step, but only in order to complete the registration process).<h:br/><h:br/>
              
              The channel selection (for the registration channel) in <xref to="fel-cpc-func"/> is essentially a choice between the use of a normal 
		    secure channel that is equivalent to a channel used to communicate with external IT entities (FTP_ITC.1) or existing TOE components
		    (FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT), or else a separate type of channel that is specific to registration 
		    (FTP_TRP.1/TRUSTPATH_JOIN). If the TOE does not require a communications channel for registration (e.g. because the registration is
		    achieved entirely by configuration actions by an administrator at each of the components) then the main selection in
		    <xref to="fel-cpc-func"/> is completed with the "No channel" option.<h:br/><h:br/>
              
              If the ST author selects the FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT channel type in the main selection in 
		    <xref to="fel-cpc-func"/> then the TSS identifies the relevant SFR iteration that specifies the channel used. If the ST author
		    selects the FTP_TRP.1/TRUSTPATH_JOIN channel type, then the TSS (possibly with support from the operational guidance) describes details
		    of the channel and the mechanisms that it uses (and describes how the registration process ensures that the channel can only be used by 
		    the intended joiner and gatekeeper). Note that the FTP_TRP.1/TRUSTPATH_JOIN channel type may require support from security measures in the 
		    operational environment (see the definition of FTP_TRP.1/TRUSTPATH_JOIN for details).<h:br/><h:br/>
              
              If the ST author selects the FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT channel type in the main selection in 
		    <xref to="fel-cpc-func"/> then the ST identifies the registration channel as a separate iteration of FTP_ITC.1 or
		    FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT and gives the iteration identifier (e.g. "FPT_ITT.1/Join") in an ST Application Note for
		    FCO_CPC_EXT.1.<h:br/><h:br/>
              
              Note that the channel that is set up and used for registration may be adopted as a continuing internal communication channel (i.e. between
		    different TOE components) provided that the channel meets the requirements of FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT.
		    Otherwise the registration channel is closed after use and a separate channel is used for the internal communications.<h:br/><h:br/>
              
              Specific requirements for Preparative Procedures relating to FCO_CPC_EXT.1 are defined in the Evaluation Activities.
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
		      platform) how the audit record protection functionality is invoked (it should be noted that this may be through a mechanism that is not
		      implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall examine the guidance documentation to confirm that it contains instructions for enabling and disabling
		      communications with any individual component of a distributed TOE. The evaluator shall confirm that the method of disabling is such that
		      all other components can be prevented from communicating with the component that is being removed from the TOE (preventing the remaining 
		      components from either attempting to initiate communications to the disabled component, or from responding to communications from the
		      disabled component).<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall confirm that an IT entity that is not currently a member of the distributed TOE cannot communicate with any
			  component of the TOE until the non-member entity is enabled by an administrator for each of the non-equivalent TOE components that
			  it is required to communicate with (non-equivalent TOE components are as defined in the minimum configuration for the distributed 
			  TOE)</test>
                  <test>The evaluator shall confirm that after enablement, an IT entity can communicate only with the components that it has been enabled for. 
			  This includes testing that the enabled communication is successful for the enabled component pair, and that communication remains
			  unsuccessful with any other component for which communication has not been explicitly enabled. <h:br/><h:br/> 
                  Some TOEs may set up the registration channel before the enablement step is carried out, but in such a case the channel must not allow
			  communications until after the enablement step has been completed.</test>
                  <test>The evaluator shall separately disable each TOE component in turn and ensure that the other TOE components cannot then communicate 
			  with the disabled component, whether by attempting to initiate communications with the disabled component or by responding to 
			  communication attempts from the disabled component.</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Enabling or disabling communications between a pair of components.</audit-event-descr>
				<audit-event-info>Identities of the endpoints pairs enabled or disabled.</audit-event-info>
			</audit-event>
		</f-component>        
      </section>
	    
      <section id="fcs" title="Cryptographic Support (FCS)"> 
	  
        <f-component cc-id="fcs_ckm.1" name="Cryptographic Key Generation">
          <f-element id="fel-ckm-tsf-func">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to generate <h:b>asymmetric</h:b> cryptographic keys in accordance with a specified cryptographic key generation algorithm
			<selectables linebreak="yes">
                <selectable>RSA schemes using cryptographic key sizes of 2048-bit or greater that
                  meets FIPS PUB 186-4, "Digital Signature Standard (DSS)", Appendix
                  B.3</selectable>
                <selectable>ECC schemes using "NIST curves" P-384 and <selectables>
                      <selectable>P-256</selectable>
                      <selectable>P-521</selectable>
                      <selectable>no other curves</selectable>
                    </selectables> that meet the following: FIPS PUB 186-4, "Digital Signature Standard (DSS)", Appendix B.4
                </selectable>
                <selectable>FFC schemes using cryptographic key sizes of 2048-bit or greater that meet the following: FIPS PUB 186-4, 
				"Digital Signature Standard (DSS)", Appendix B.1 </selectable>
                <selectable>FFC schemes using Diffie-Hellman group 14 that meet the following: RFC3526, Section 3</selectable>
                <selectable>FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3, 
				"Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and <selectables>
                  <selectable>RFC 3526</selectable>
                  <selectable>RFC 7919</selectable>
                </selectables></selectable>
              </selectables>.
            </title>
            <note role="application">The ST author must select all key generation
              schemes used for key establishment and MDM authentication. When key
              generation is used for key establishment, the schemes in <xref to="fel-ckm"/> and selected
              cryptographic protocols must match the selection. When key generation is used for
                MDM authentication, the public key is expected to be associated
              with an X.509v3 certificate.<h:br/><h:br/> If the TOE only acts as a
              receiver in the RSA key establishment scheme, the TOE does not need
              to implement RSA key generation. <h:br/><h:br/>
              In a distributed TOE, if the TOE component acts as a receiver in the key establishment scheme,
              the TOE does not need to implement key generation.
            </note>
            <aactivity>
              <TSS><h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
	      The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the key generation functionality is invoked (it 
		  should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the 
		  TSS as part of this evaluation activity).<h:br/><h:br/>
              <h:h4>If "implement functionality" is selected</h:h4>:
                The evaluator shall ensure that the TSS identifies the key
                sizes supported by the TOE. If the ST specifies
                more than one scheme, the evaluator shall examine the TSS to
              verify that it identifies the usage for each scheme.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall verify that the AGD guidance instructs the administrator
                how to configure the TOE to use the selected key generation
		schemes and key sizes for all uses defined in this PP.<h:br/><h:br/>
		</Guidance>
              <Tests>
                <h:h4>Key Generation for FIPS PUB 186-4 RSA Schemes</h:h4> The evaluator shall
                verify the implementation of RSA Key Generation by the TOE using
                the Key Generation test. This test verifies the ability of the TSF
                to correctly produce values for the key components including the public verification
                exponent e, the private prime factors p and q, the public modulus n and the
                calculation of the private signature exponent d.<h:br/><h:br/> Key Pair generation
                specifies 5 ways (or methods) to generate the primes p and q. These include: <h:ol>
                  <h:li>Random Primes:</h:li>
                  <h:ol type="a">
                    <h:li>Provable primes</h:li>
                    <h:li>Probable primes</h:li>
                  </h:ol>
                  <h:li>Primes with Conditions:</h:li>
                  <h:ol type="a">
                    <h:li>Primes p1, p2, q1,q2, p and q shall all be provable primes</h:li>
                    <h:li>Primes p1, p2, q1, and q2 shall be provable primes and p and q shall be
                      probable primes</h:li>
                    <h:li>Primes p1, p2, q1,q2, p and q shall all be probable primes</h:li>
                  </h:ol>
                </h:ol> To test the key generation method for the Random Provable primes method
                and for all the Primes with Conditions methods, the evaluator must seed the 
                TSF key generation routine with sufficient data to deterministically
                generate the RSA key pair. This includes the random seed(s), the public exponent of
                the RSA key, and the desired key length. For each key length supported, the
                evaluator shall have the TSF generate 25 key pairs. The evaluator
                shall verify the correctness of the TSF's implementation by
                comparing values generated by the TSF with those generated from a
                known good implementation.<h:br/><h:br/> If possible, the Random Probable primes method
                should also be verified against a known good implementation as described above.
                Otherwise, the evaluator shall have the TSF generate 10 keys pairs
                for each supported key length nlen and verify: <h:ul>
                  <h:li>n = p*q,</h:li>
                  <h:li>p and q are probably prime according to Miller-Rabin tests,</h:li>
                  <h:li>GCD(p-1,e) = 1,</h:li>
                  <h:li>GCD(q-1,e) = 1,</h:li>
                  <h:li>2^16 &lt;= e &lt;= 2^256 and e is an odd integer, </h:li>
                  <h:li>|p-q| &gt; 2^(nlen/2 - 100),</h:li>
                  <h:li>p &gt;= squareroot(2)*( 2^(nlen/2 -1) ),</h:li>
                  <h:li>q &gt;= squareroot(2)*( 2^(nlen/2 -1) ),</h:li>
                  <h:li>2^(nlen/2) &lt; d &lt; LCM(p-1,q-1),</h:li>
                  <h:li>e*d = 1 mod LCM(p-1,q-1).</h:li>
                </h:ul>
                <h:h4>Key Generation for Elliptic Curve Cryptography (ECC)</h:h4>
                <h:h4>FIPS 186-4 ECC Key Generation Test</h:h4> For each supported NIST curve,
                i.e., P-256, P-384 and P-521, the evaluator shall require the implementation under
                test (IUT) to generate 10 private/public key pairs. The private key shall be
                generated using an approved random bit generator (RBG). To determine correctness,
                the evaluator shall submit the generated key pairs to the public key verification
                (PKV) function of a known good implementation.<h:br/><h:br/>
                <h:h4>FIPS 186-4 Public Key Verification (PKV) Test</h:h4> For each supported
                NIST curve, i.e., P-256, P-384 and P-521, the evaluator shall generate 10
                private/public key pairs using the key generation function of a known good
                implementation and modify five of the public key values so that they are incorrect,
                leaving five values unchanged (i.e., correct). The evaluator shall obtain in
                response a set of 10 PASS/FAIL values.<h:br/><h:br/>
                <h:h4>Key Generation for Finite-Field Cryptography (FFC)</h:h4> The evaluator
                shall verify the implementation of the Parameters Generation and the Key Generation
                for FFC by the TOE using the Parameter Generation and Key
                Generation test. This test verifies the ability of the TSF to
                correctly produce values for the field prime p, the cryptographic prime q (dividing
                p-1), the cryptographic group generator g, and the calculation of the private key x
                and public key y.<h:br/><h:br/> The Parameter generation specifies two ways (or methods) to
                generate the cryptographic prime q and the field prime p:<h:br/><h:br/> Cryptographic and
                Field Primes: <h:br/><h:br/>
                <h:ul>
                  <h:li>Primes q and p shall both be provable primes</h:li>
                  <h:li>Primes q and field prime p shall both be probable primes and two ways to
                    generate the cryptographic group generator g:</h:li>
                </h:ul> Cryptographic Group Generator: <h:br/><h:br/>
                <h:ul>
                  <h:li>Generator g constructed through a verifiable process</h:li>
                  <h:li>Generator g constructed through an unverifiable process.</h:li>
                </h:ul> The Key generation specifies two ways to generate the private key
                x:<h:br/><h:br/> Private Key: <h:ul>
                  <h:li>len(q) bit output of RBG where 1 &lt;=x &lt;= q-1</h:li>
                  <h:li>len(q) + 64 bit output of RBG, followed by a mod q-1 operation where
                    1&lt;= x&lt;=q-1.</h:li>
                </h:ul> The security strength of the RBG must be at least that of the security
                offered by the FFC parameter set.<h:br/><h:br/> To test the cryptographic and field prime
                generation method for the provable primes method and/or the group generator g for a
                verifiable process, the evaluator must seed the TSF parameter
                generation routine with sufficient data to deterministically generate the parameter
                set.<h:br/><h:br/> For each key length supported, the evaluator shall have the 
                TSF generate 25 parameter sets and key pairs. The evaluator shall
                verify the correctness of the TSF's implementation by comparing
                values generated by the TSF with those generated from a known good
                implementation. Verification must also confirm<h:br/><h:br/>
                <h:ul>
                  <h:li>g != 0,1</h:li>
                  <h:li>q divides p-1</h:li>
                  <h:li>g^q mod p = 1</h:li>
                  <h:li>g^x mod p = y</h:li>
                </h:ul> for each FFC parameter set and key pair.<h:br/><h:br/>
              <h:h4>Diffie-Hellman Group 14 and FFC Schemes using "safe-prime" groups</h:h4>
              Testing for FFC Schemes using Diffie-Hellman group 14 and/or "safe-prime" groups is done as part of testing in <xref to="fel-ckm"/>.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event type="optional">
				<audit-event-descr>Failure of key generation activity for authentication keys</audit-event-descr>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fcs_ckm.2" name="Cryptographic Key Establishment">
          <f-element id="fel-ckm">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> <h:b>to perform</h:b> cryptographic <h:b>key establishment</h:b> in accordance with a specified cryptographic key <h:b>establishment</h:b>
			method: <selectables linebreak="yes">
                <selectable>RSA-based key establishment schemes that meet the following: RSAES-PKCS1-v1_5 as specified in Section 7.2 of RFC 8017,
				"Public-Key Cryptography Standards (PKCS) #1:RSA Cryptography Specifications Version 2.1"</selectable>
                <selectable>Elliptic curve-based key establishment schemes that meets the following:
                  NIST Special Publication 800-56A, "Recommendation for Pair-Wise Key Establishment
                  Schemes Using Discrete Logarithm Cryptography"</selectable>
                <selectable>Finite field-based key establishment schemes that meets the following:
                  NIST Special Publication 800-56A, "Recommendation for Pair-Wise Key Establishment
                  Schemes Using Discrete Logarithm Cryptography"</selectable>
                <selectable>Key establishment schemes using Diffie-Hellman group 14 that meets the following: RFC 3526, Section 3</selectable>
              <selectable>FFC schemes using "safe-prime" groups that meet the following: 'NIST Special Publication 800-56A Revision 3,
			  "Recommendation for Pair-Wise Key Establishment Schemes Using Discrete Logarithm Cryptography"', and <selectables>
                <selectable>RFC 3526</selectable>
                <selectable>RFC 7919</selectable>
              </selectables></selectable>
              </selectables>.
            </title>
            <note role="application">The ST author must select all key
              establishment schemes used for the selected cryptographic protocols.<h:br/><h:br/> 
              The elliptic curves used for the key establishment scheme must correlate with the curves specified in <xref to="fel-ckm-tsf-func"/>.<h:br/><h:br/> 
              The domain parameters used for the finite field-based key establishment scheme are specified by the key generation according to 
			  <xref to="fel-ckm-tsf-func"/>.
            </note>
            <aactivity>
              <h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
              <TSS>The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the key establishment functionality is
			  invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will
			  be identified in the TSS as part of this evaluation activity).
              <h:h4>If "implement functionality" is selected:</h:h4>
              The evaluator shall ensure that the supported key establishment schemes correspond to the key generation schemes identified in 
			  <xref to="fel-ckm-tsf-func"/>. If the ST specifies more than one scheme, the evaluator shall examine the TSS to verify that it identifies the
			  usage for each scheme.<h:br/><h:br/> 
              The evaluator shall ensure that the TSS describes how the TOE handles decryption errors. In accordance with NIST Special Publication 800-56B,
			  the TOE must not reveal the particular error that occurred, either through the contents of any outputted or logged error message or through
			  timing variations. If KTS-OAEP is supported, the evaluator shall create separate contrived ciphertext values that trigger each of the three
			  decryption error checks described in NIST Special Publication 800-56B section 7.2.2.3, ensure that each decryption attempt results in an error,
			  and ensure that any outputted or logged error message is identical for each. If KTS-KEM-KWS is supported, the evaluator shall create separate
			  contrived ciphertext values that trigger each of the three decryption error checks described in NIST Special Publication 800-56B section 7.2.3.3, 
			  ensure that each decryption attempt results in an error, and ensure that any outputted or logged error message is identical for each.<h:br/><h:br/>
              If Diffie-Hellman group 14 is selected from FCS_CKM.2.1, the TSS shall describe how the implementation meets RFC 3526 Section 3.<h:br/><h:br/>
	      </TSS>
              <Guidance>The evaluator shall verify that the AGD guidance instructs the administrator
                how to configure the TOE to use the selected key establishment
		scheme(s).<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator shall verify the implementation of the key establishment schemes
                supported by the TOE using the applicable tests below.
                  <h:h4>SP800-56A Key Establishment Schemes</h:h4> The evaluator shall verify a
                  TOEs implementation of SP800-56A key agreement schemes using
                the following Function and Validity tests. These validation tests for each key
                agreement scheme verify that a TOE has implemented the components
                of the key agreement scheme according to the specifications in the recommendation.
                These components include the calculation of the primitives (the shared secret value
                Z) and the calculation of the derived keying material (DKM) via the Key Derivation
                Function (KDF). If key confirmation is supported, the evaluator shall also verify
                that the components of key confirmation have been implemented correctly, using the
                test procedures described below. This includes the parsing of the DKM, the
                generation of MACdata and the calculation of MACtag.<h:br/><h:br/>
                <h:u>Function Test</h:u><h:br/><h:br/> The Function test verifies the ability of the
                  TOE to implement the key agreement schemes correctly. To conduct
                this test the evaluator shall generate or obtain test vectors from a known good
                implementation of the TOE supported schemes. For each supported
                key agreement scheme-key agreement role combination, KDF type, and, if supported,
                key confirmation role- key confirmation type combination, the tester shall generate
                10 sets of test vectors. The data set consists of one set of domain parameter values
                (FFC) or the NIST approved curve (ECC) per 10 sets of public keys. These keys are
                static, ephemeral or both depending on the scheme being tested.<h:br/><h:br/> The
                evaluator shall obtain the DKM, the corresponding TOEs public
                keys (static and/or ephemeral), the MAC tag(s), and any inputs used in the KDF, such
                as the Other Information field OI and TOE ID fields.<h:br/><h:br/> If
                the TOE does not use a KDF defined in SP 800-56A, the evaluator
                shall obtain only the public keys and the hashed value of the shared
                secret.<h:br/><h:br/> The evaluator shall verify the correctness of the 
                TSF's implementation of a given scheme by using a known good
                implementation to calculate the shared secret value, derive the keying material DKM,
                and compare hashes or MAC tags generated from these values.<h:br/><h:br/> If key
                confirmation is supported, the TSF shall perform the above for
                each implemented approved MAC algorithm. <h:br/><h:br/>
                <h:u>Validity Test</h:u><h:br/><h:br/> The Validity test verifies the ability of the
                  TOE to recognize another party's valid and invalid key agreement
                results with or without key confirmation. To conduct this test, the evaluator shall
                obtain a list of the supporting cryptographic functions included in the SP800-56A
                key agreement implementation to determine which errors the TOE
                should be able to recognize. The evaluator generates a set of 24 (FFC) or 30 (ECC)
                test vectors consisting of data sets including domain parameter values or NIST
                approved curves, the evaluator's public keys, the TOEs
                public/private key pairs, MACTag, and any inputs used in the KDF, such as the other
                info and TOE ID fields.<h:br/><h:br/> The evaluator shall inject an
                error in some of the test vectors to test that the TOE recognizes
                invalid key agreement results caused by the following fields being incorrect: the
                shared secret value Z, the DKM, the other information field OI, the data to be
                MACed, or the generated MACTag. If the TOE contains the full or
                partial (only ECC) public key validation, the evaluator will also individually
                inject errors in both parties' static public keys, both parties' ephemeral public
                keys and the TOEs static private key to assure the 
                TOE detects errors in the public key validation function and/or the
                partial key validation function (in ECC only). At least two of the test vectors
                shall remain unmodified and therefore should result in valid key agreement results
                (they should pass).<h:br/><h:br/> The TOE shall use these modified test
                vectors to emulate the key agreement scheme using the corresponding parameters. The
                evaluator shall compare the TOEs results with the results using a
                known good implementation verifying that the TOE detects these errors.<h:br/><h:br/>
                <h:h4>RSA-based key establishment</h:h4>
              The evaluator shall verify the correctness of the TSF's implementation of RSAES-PKCS1-v1_5 by using a known good implementation for each protocol
			  selected in FTP_TRP.1/TRUSTPATH_REM_ADMIN, FTP_TRP.1/TRUSTPATH_ENROLL, FTP_TRP.1/TRUSTPATH_JOIN, FTP_ITC.1/INTER_XFER_IT, FTP_ITC.1/INTER_TSF_XFER_AGENT,
			  FPT_ITT.1/INTER_XFER, and FPT_ITT.1/INTER_XFER_AGENT that uses RSAES-PKCS1-v1_5.
              <h:h4>Diffie-Hellman Group 14</h:h4>
              The evaluator shall verify the correctness of the TSF's implementation of Diffie-Hellman group 14 by using a known good implementation for each 
			  protocol selected in FTP_TRP.1/TRUSTPATH_REM_ADMIN, FTP_TRP.1/TRUSTPATH_ENROLL, FTP_TRP.1/TRUSTPATH_JOIN, FTP_ITC.1/INTER_XFER_IT, 
			  FTP_ITC.1/INTER_TSF_XFER_AGENT, FPT_ITT.1/INTER_XFER, and FPT_ITT.1/INTER_XFER_AGENT that uses Diffie-Hellman Group 14.
              <h:h4>FFC Schemes using "safe-prime" groups</h:h4>
              The evaluator shall verify the correctness of the TSF's implementation of "safe-prime" groups by using a known good implementation for each protocol 
			  selected in FTP_TRP.1/TRUSTPATH_REM_ADMIN, FTP_TRP.1/TRUSTPATH_ENROLL, FTP_TRP.1/TRUSTPATH_JOIN, FTP_ITC.1/INTER_XFER_IT, FTP_ITC.1/INTER_TSF_XFER_AGENT,
			  FPT_ITT.1/INTER_XFER, and FPT_ITT.1/INTER_XFER_AGENT that uses "safe-prime" groups. This test must be performed for each "safe-prime" group that each 
			  protocol uses.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_ckm_ext.4" name="Cryptographic Key Destruction">
          <f-element id="fel-ckm-ext-func">
            <!-- TODO: Will need to modify this SFR more b/c if invoke platform-provided key destruction is chosen then will likely not be able to specify 
			how the platform destroys it. Joe McDaniels has many different version of this SFR that we can try to use.
            AA has not been updated.-->
            <title> The TSF shall destroy plaintext keying material and critical security parameters by <selectables>
              <selectable>invoking platform-provided functionality with the following rules: <h:ul>
                <h:li>For volatile memory, the destruction shall be executed by <selectables>
                  <selectable>a single direct overwrite consisting of <selectables>
                    <selectable>a pseudo-random pattern using the TSF/Platform RBG (as specified in FCS_RBG_EXT.1)</selectable>
                    <selectable>zeroes</selectable>
                    <selectable>ones</selectable>
                    <selectable>a new value of a key</selectable>
                    <selectable><assignable>some value that does not contain any CSP</assignable></selectable>
                  </selectables> </selectable>
                  <selectable>removal of power to the memory</selectable>
                  <selectable>destruction of reference to the key directly followed by a request for garbage collection</selectable>
                </selectables></h:li>
                <h:li>For non-volatile memory that consists of the invocation of an interface provided by the underlying platform that <selectables>
                  <selectable>logically addresses the storage location of the key and performs a <selectables>
                    <selectable>single</selectable>
                    <selectable> <assignable>ST author defined multi-pass</assignable> </selectable>
                  </selectables> direct overwrite consisting of <selectables>
                      <selectable>a pseudo-random pattern using the TSF/Platform RBG (as specified in FCS_RBG_EXT.1)</selectable>
                      <selectable>zeroes</selectable>
                      <selectable>ones</selectable>
                      <selectable>a new value of a key</selectable>
                      <selectable><assignable>some value that does not contain any CSP</assignable></selectable>
                    </selectables> </selectable>
                  <selectable>instructs the underlying platform to destroy the abstraction that represents the key</selectable>
                </selectables>
                </h:li>
              </h:ul></selectable>
              <selectable>implementing key destruction in accordance with the following rules: <h:ul>
                <h:li>For volatile memory, the destruction shall be executed by a single direct overwrite <selectables>
                  <selectable>consisting of a pseudo-random pattern using the TSF/Platform RBG (as specified in FCS_RBG_EXT.1)</selectable>
                    <selectable>consisting of zeroes</selectable>
                  </selectables></h:li>
                <h:li>For non-volatile EEPROM, the destruction shall be executed by a single direct overwrite consisting of a pseudo-random pattern using the 
				TSF/Platform RBG (as specified in FCS_RBG_EXT.1), followed by a read-verify.</h:li>
                <h:li>For non-volatile flash memory, that is not wear-leveled, the destruction shall be executed <selectables>
                    <selectable>by a single direct overwrite consisting of zeros followed by a read-verify</selectable>
                    <selectable>by a block erase that erases the reference to memory that stores data as well as the data itself</selectable>
                  </selectables>
                </h:li>
                <h:li>For non-volatile flash memory, that is wear-leveled, the destruction shall be executed <selectables>
                    <selectable>by a single direct overwrite consisting of zeros</selectable>
                    <selectable>by a block erase</selectable>
                  </selectables></h:li>
                <h:li>For non-volatile memory other than EEPROM and flash, the destruction shall be executed by a single direct overwrite with a random pattern that 
				is changed before each write</h:li></h:ul></selectable></selectables>.
            </title>
            <note role="application">The ST author should select "invoking platform-provided functionality" if the MDM Server performs no operations using plaintext 
			secret, private cryptographic keys, and CSPs. <h:br/><h:br/>
              Any security related information (such as keys, authentication data, and passwords) must be zeroized when no longer in use to prevent the disclosure 
			  or modification of security critical data.<h:br/><h:br/>
              The zeroization indicated above applies to each intermediate storage area for plaintext key and Cryptographic Service Provider (CSP) (i.e., any storage, 
			  such as memory buffers, that is included in the path of such data) upon the transfer of the key/CSP to another location.<h:br/><h:br/>
              Since the TOE does not include the host IT environment, the extent of this capability is necessarily somewhat limited. For the purposes of this
			  requirement, it is sufficient for the TOE to invoke the correct underlying functions of the host to perform the zeroization--it does not imply that 
			  the TOE has to include a kernel-mode memory driver to ensure the data are zeroized. It is  assumed that the host platform appropriately performs 
			  zeroization of key material in its internal processes.<h:br/><h:br/>
              Several selections allow assignment of a 'value that does not contain any CSP'. This means that the TOE uses some other specified data not drawn 
			  from a source that may contain key material or reveal information about key material, and not being any of the particular values listed as other
			  selection options. The point of the phrase "does not contain any CSP" is to ensure that the overwritten data is carefully selected, and not taken
			  from a general 'pool' that might contain current or residual data that itself requires confidentiality protection.            
            </note>
            <aactivity>
              <TSS>If "invoking platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported 
			  platform) how the key destruction functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the 
			  MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).</TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-ckm-ext-notneeded"> <!--will have to edit this one to remove platform requirements-->
            <title>The TSF shall destroy all plaintext keying material and critical security parameters (CSPs) when no longer needed.</title>
            <note role="application">Key destruction procedures are performed in accordance with <xref to="fel-ckm-ext-func"/>. Even if "invoking
			platform-provided functionality" is selected in <xref to="fel-ckm-ext-func"/>, the TSF must determine when the plaintext keying material and
			CSP are no longer needed and thus should be destroyed. The TSF must "release" the key material and CSP when no longer needed, regardless if the TSF
			or TOE platform destroys the key material and CSPs.<h:br/><h:br/> 
              For the purposes of this requirement, plaintext keying material refers to authentication data, authorization data, secret/private symmetric keys, 
			  data used to derive keys, etc.</note>
            <aactivity> 
              Evaluation Activity Note:<h:br/><h:br/> The evaluation activity used is dependent on the selection made in <xref to="fel-ckm-ext-func"/>. <h:br/><h:br/>
              <TSS> The evaluator shall check to ensure the TSS lists each type of plaintext key material and CSP (authentication data, authorization data,
			  secret/private symmetric keys, data used to derive keys, etc.) and its origin and storage location.<h:br/><h:br/> The evaluator shall verify that the
			  TSS describes when each type of key material and CSP is no longer needed.<h:br/><h:br/> <!-- ToDo: this might be asking too much. If they implement
			  platform functionality they might not have access to the keys?-->              
              <h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
              <!--><TSS> For each platform listed in the ST, the evaluator shall
                examine the TSS of the ST of the platform to
                ensure that each of the secret keys, private keys, and CSPs used
                to generate key listed above are covered.<-->
              The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the key releasing functionality is invoked (it 
			  should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the 
			  TSS as part of this evaluation activity).
              <h:h4>If "implement functionality" is selected:</h:h4>
              The evaluator shall also verify that, for each type, the type of clearing procedure that is performed is listed. If different types of memory are used
			  to store the materials to be protected, the evaluator shall check to ensure that the TSS describes the clearing procedure in terms of the memory in
			  which the data are stored (for example, "secret keys stored on flash are cleared by overwriting once with zeros, while secret keys stored on the 
			  internal persistent storage device are cleared by overwriting one time with a random pattern that is    changed before each write"). For block erases,
			  the evaluator shall also ensure that the block erase command used is listed and shall verify that the command used also addresses any copies of the
			  plaintext key material that may be created in order to optimize the use of flash memory.<h:br/><h:br/> </TSS>
              <Tests>For each software and firmware key clearing situation the evaluator shall repeat the following tests. Note that at this time hardware-bound keys 
			  are explicitly excluded from testing. <testlist>
                  <test>The evaluator shall utilize appropriate combinations of specialized operational environment and development tools (debuggers, simulators,
				  etc.) for the TOE and instrumented TOE builds to test that keys are cleared correctly, including all intermediate copies of the key that may have 
				  been created internally by the TOE during normal cryptographic processing with that key. <h:br/><h:br/> Cryptographic TOE implementations in
				  software shall be loaded and exercised under a debugger to perform such tests. The evaluator shall perform the following test for each key subject 
				  to clearing, including intermediate copies of keys that are persisted encrypted by the TOE: <h:ol>
                      <h:li>Load the instrumented TOE build in a debugger.</h:li>
                      <h:li>Record the value of the key in the TOE subject to clearing.</h:li>
                      <h:li>Cause the TOE to perform a normal cryptographic processing with the key from #1.</h:li>
                      <h:li>Cause the TOE to clear the key.</h:li>
                      <h:li>Cause the TOE to stop the execution but not exit.</h:li>
                      <h:li>Cause the TOE to dump the entire memory footprint of the TOE into a binary file.</h:li>
                      <h:li>Search the content of the binary file created in #4 for instances of the known key value from #1.</h:li>
                    </h:ol> The test succeeds if no copies of the key from #1 are found in step #7 above and fails otherwise. The evaluator shall perform this 
					test on all keys, including those persisted in encrypted form, to ensure intermediate copies are cleared. </test>
                  <test>In cases where the TOE is implemented in firmware and operates in a limited operating environment that does not allow the use of debuggers, 
				  the evaluator shall utilize a simulator for the TOE on a general purpose operating system. The evaluator shall provide a rationale explaining the
				  instrumentation of the simulated test  environment and justifying the obtained test results. </test>
                </testlist>
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_cop.1" name="Cryptographic Operation (Confidentiality Algorithms)" iteration="CONF_ALG">
          <f-element id="fel-conf-alg">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable></selectables> 
              to perform encryption/decryption in accordance with a specified cryptographic algorithm:
              <selectables linebreak="yes">
                <selectable>AES-CBC (as defined in FIPS PUB 197, and NIST SP 800-38A) mode</selectable>
                <selectable>AES-GCM (as defined in NIST SP 800-38D)</selectable>
                <selectable>AES Key Wrap (KW) (as defined in NIST SP 800-38F)</selectable>
                <selectable>AES Key Wrap with Padding (KWP) (as defined in NIST SP 800-38F)</selectable>
                <selectable>AES-CCM (as defined in NIST SP 800-38C)</selectable>
              </selectables> and cryptographic key sizes 
              <selectables>
                <selectable>128-bit</selectable>
                <selectable>256-bit</selectable>
              </selectables>
            </title>
            <note role="application">For the second selection of <xref to="fel-conf-alg"/> , the ST author should choose the mode or modes in which AES operates
			in the trusted channel protocols. For the third selection, the ST author should choose the key sizes that are supported by this functionality.</note>
            <aactivity>
              <TSS>
		<h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
		The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the encryption/decryption functionality is invoked for 
		each mode and key size selected in the MDM Server's ST (it should be noted that this may be through a mechanism that is not implemented by the MDM Server;
		nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>	      
              <Tests>
		<h:h4>If "implement functionality" is selected:</h:h4>		
              <testlist><h:b><h:u>AES-CBC Tests</h:u></h:b>
                <test>AES-CBC Known Answer Tests<h:br/><h:br/> 
                  There are four Known Answer Tests (KATs), described below. In all KATs, the plaintext, ciphertext, and IV values shall be 128-bit blocks. The
				  results from each test may either be obtained by the evaluator directly or by supplying the inputs to the implementer and receiving the results
				  in response. To determine correctness, the evaluator shall compare the resulting values to those obtained by submitting the same inputs to a
				  known good implementation.<h:br/><h:br/> 
                  <testlist>                   
                    <test> KAT-1. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 plaintext values and obtain the ciphertext 
					value that results from AES-CBC encryption of the given plaintext using a key value of all zeros and an IV of all zeros. Five plaintext values
					shall be encrypted with a 128-bit all-zeros key, and the other five shall be encrypted with a 256-bit all-zeros key.<h:br/><h:br/> 
					To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using 10 ciphertext values as input
					and AES-CBC decryption.</test><h:br/><h:br/> 
                    <test>KAT-2. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 key values and obtain the ciphertext value 
					that results from AES-CBC encryption of an all-zeros plaintext using the given key value and an IV of all zeros. Five of the keys shall be
					128-bit keys, and the other five shall be 256-bit keys.<h:br/><h:br/> 
                      To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using an all-zero ciphertext value as
					  input and AES-CBC decryption.</test><h:br/><h:br/> 
                    <test>KAT-3. To test the encrypt functionality of AES-CBC, the evaluator shall supply the two sets of key values described below and obtain the
					ciphertext value that results from AES encryption of an all-zeros plaintext using the given key value and an IV of all zeros. The first set of
					keys shall have 128 128-bit keys, and the second set shall have 256 256-bit keys. Key i in each set shall have the leftmost i bits be ones and
					the rightmost N-i bits be zeros, for i in [1,N].<h:br/><h:br/> 
                      To test the decrypt functionality of AES-CBC, the evaluator shall supply the two sets of key and
                ciphertext value pairs described below and obtain the plaintext value that results
                from AES-CBC decryption of the given ciphertext using the given key and an IV of all
                zeros. The first set of key/ciphertext pairs shall have 128 128-bit key/ciphertext
                pairs, and the second set of key/ciphertext pairs shall have 256 256-bit
                key/ciphertext pairs. Key i in each set shall have the leftmost i bits be ones and
                the rightmost N-i bits be zeros, for i in [1,N]. The ciphertext value in each pair
                shall be the value that results in an all-zeros plaintext when decrypted with its
                corresponding key.</test><h:br/><h:br/> 
                    <test>KAT-4. To test the encrypt functionality of AES-CBC, the
                evaluator shall supply the set of 128 plaintext values described below and obtain
                the two ciphertext values that result from AES-CBC encryption of the given plaintext
                using a 128-bit key value of all zeros with an IV of all zeros and using a 256-bit
                key value of all zeros with an IV of all zeros, respectively. Plaintext value i in
                each set shall have the leftmost i bits be ones and the rightmost 128-i bits be
                zeros, for i in [1,128].<h:br/><h:br/> To test the decrypt functionality of AES-CBC, the
                evaluator shall perform the same test as for encrypt, using ciphertext values of the
                same form as the plaintext in the encrypt test as input and AES-CBC decryption.</test><h:br/><h:br/>
                  </testlist>
                </test>
                <test>AES-CBC Multi-Block Message Test<h:br/><h:br/> 
                The evaluator shall test the encrypt functionality by encrypting an
                i-block message where 1 &lt; i &lt;=10. The evaluator shall choose a key, an IV and
                plaintext message of length i blocks and encrypt the message, using the mode to be
                tested, with the chosen key and IV. The ciphertext shall be compared to the result
                of encrypting the same plaintext message with the same key and IV using a known good
                implementation. <h:br/><h:br/>
                The evaluator shall also test the decrypt functionality for each
                mode by decrypting an i-block message where 1 &lt; i &lt;=10. The evaluator shall
                choose a key, an IV and a ciphertext message of length i blocks and decrypt the
                message, using the mode to be tested, with the chosen key and IV. The plaintext
                shall be compared to the result of decrypting the same ciphertext message with the
                same key and IV using a known good implementation.</test> <h:br/><h:br/>
                
                <test>AES-CBC Monte Carlo Tests<h:br/><h:br/> 
                  The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and
				  100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as 
				  follows:<h:br/><h:br/>
              <h:pre>
                # Input: PT, IV, Key
                for i = 1 to 1000:
                    if i == 1:
                        CT[1] = AES-CBC-Encrypt(Key, IV, PT)
                        PT = IV
                    else:
                        CT[i] = AES-CBC-Encrypt(Key, PT)
                        PT = CT[i-1]
              </h:pre>
              <h:br/>             
                The ciphertext computed in the 1000th iteration (i.e., CT[1000]) is the
                result for that trial. This result shall be compared to the result of running 1000
                iterations with the same values using a known good implementation.<h:br/><h:br/> The
                evaluator shall test the decrypt functionality using the same test as for encrypt,
                exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt.</test><h:br/><h:br/>
              </testlist>
              <testlist><h:b><h:u>AES-GCM Test</h:u></h:b> <h:br/>
                <test> The evaluator shall test the authenticated encrypt
                functionality of AES-GCM for each combination of the following input parameter lengths:<h:br/><h:br/>
                <h:ul>
                  <h:li>128 bit and 256 bit keys</h:li>
                  <h:li>Two plaintext lengths. One of the plaintext lengths shall be a non-zero
                    integer multiple of 128 bits, if supported. The other plaintext length shall not
                    be an integer multiple of 128 bits, if supported.</h:li>
                  <h:li>Three AAD lengths. One AAD length shall be 0, if supported. One AAD length
                    shall be a non-zero integer multiple of 128 bits, if supported. One AAD length
                    shall not be an integer multiple of 128 bits, if supported.</h:li>
                  <h:li>Two IV lengths. If 96 bit IV is supported, 96 bits shall be one of the two
                    IV lengths tested.</h:li>
                </h:ul> The evaluator shall test the encrypt functionality using a set of 10 key,
                plaintext, AAD, and IV tuples for each combination of parameter lengths above and
                obtain the ciphertext value and tag that results from AES-GCM authenticated encrypt.
                Each supported tag length shall be tested at least once per set of 10. The IV value
                may be supplied by the evaluator or the implementation being tested, as long as it
                is known. <h:br/><h:br/> The evaluator shall test the decrypt functionality using a set
                of 10 key, ciphertext, tag, AAD, and IV 5- tuples for each combination of parameter
                lengths above and obtain a Pass/Fail result on authentication and the decrypted
                plaintext if Pass. The set shall include five tuples that Pass and five that
                Fail.<h:br/><h:br/> The results from each test may either be obtained by the evaluator
                directly or by supplying the inputs to the implementer and receiving the results in
                response. To determine correctness, the evaluator shall compare the resulting values
                to those obtained by submitting the same inputs to a known good implementation.<h:br/><h:br/>
                </test>
              </testlist>
              <testlist><h:b><h:u>AES-CCM Tests</h:u></h:b><h:br/>
                <test>The evaluator shall test the generation-encryption
                and decryption-verification functionality of AES-CCM for the following input
                parameter and tag lengths:<h:br/><h:br/>
                <h:ul>
                  <h:li>128 bit and 256 bit keys</h:li>
                  <h:li>Two payload lengths. One payload length shall be the shortest supported
                    payload length, greater than or equal to zero bytes. The other payload length
                    shall be the longest supported payload length, less than or equal to 32 bytes
                    (256 bits).</h:li>
                  <h:li>Two or three associated data lengths. One associated data length shall be
                    0, if supported. One associated data length shall be the shortest supported
                    payload length, greater than or equal to zero bytes. One associated data length
                    shall be the longest supported payload length, less than or equal to 32 bytes
                    (256 bits). If the implementation supports an associated data length of 216
                    bytes, an associated data length of 216 bytes shall be tested.</h:li>
                  <h:li>Nonce lengths. All supported nonce lengths between 7 and 13 bytes,
                    inclusive, shall be tested.</h:li>
                  <h:li>Tag lengths. All supported tag lengths of 4, 6, 8, 10, 12, 14 and 16 bytes
                    shall be tested.</h:li>              
                </h:ul> To test the generation-encryption functionality of AES-CCM, the evaluator
                shall perform the following four tests: <testlist>
                  <test>For EACH supported key and associated data length and ANY supported payload,
                    nonce and tag length, the evaluator shall supply one key value, one nonce value
                    and 10 pairs of associated data and payload values and obtain the resulting
                    ciphertext.</test>
                  <test>For EACH supported key and payload length and ANY supported associated data,
                    nonce and tag length, the evaluator shall supply one key value, one nonce value
                    and 10 pairs of associated data and payload values and obtain the resulting
                    ciphertext.</test>
                  <test>For EACH supported key and nonce length and ANY supported associated data,
                    payload and tag length, the evaluator shall supply one key value and 10
                    associated data, payload and nonce value 3-tuples and obtain the resulting
                    ciphertext.</test>
                  <test>. For EACH supported key and tag length and ANY supported associated data,
                    payload and nonce length, the evaluator shall supply one key value, one nonce
                    value and 10 pairs of associated data and payload values and obtain the
                    resulting ciphertext.</test>
                </testlist> To determine correctness in each of the above tests, the evaluator shall
                compare the ciphertext with the result of generation-encryption of the same inputs
                with a known good implementation.<h:br/><h:br/> To test the decryption-verification
                functionality of AES-CCM, for EACH combination of supported associated data length,
                payload length, nonce length and tag length, the evaluator shall supply a key value
                and 15 nonce, associated data and ciphertext 3-tuples and obtain either a FAIL
                result or a PASS result with the decrypted payload. The evaluator shall supply 10
                tuples that should FAIL and 5 that should PASS per set of 15.<h:br/><h:br/>
                </test>
              </testlist>
              <testlist><h:b><h:u>AES Key Wrap (AES-KW) and Key Wrap with Padding (AES-KWP) Test</h:u></h:b>
                <test>
                The evaluator shall test the authenticated encryption functionality of AES-KW for EACH
                combination of the following input parameter lengths:<h:br/><h:br/>
                <h:ul>
                  <h:li>128 and 256 bit key encryption keys (KEKs)</h:li>
                  <h:li>Three plaintext lengths. One of the plaintext lengths shall be two
                    semi-blocks (128 bits). One of the plaintext lengths shall be three semi-blocks
                    (192 bits). The third data unit length shall be the longest supported plaintext
                    length less than or equal to 64 semi-blocks (4096 bits). </h:li>
                </h:ul> using a set of 100 key and plaintext pairs and obtain the ciphertext that
                results from AES-KW authenticated-encryption. To determine correctness, the
                evaluator shall use the AES-KW authenticated-encryption function of a known good
                implementation. <h:br/><h:br/> The evaluator shall test the authenticated-decryption
                functionality of AES-KW using the same test as for authenticated-encryption,
                replacing plaintext values with ciphertext values and AES-KW authenticated-encryption with AES-KW authenticated-decryption. <h:br/><h:br/>
				The evaluator shall test
                the authenticated-encryption functionality of AES-KWP using the same test as for
                AES-KW authenticated-encryption with the following change in the three plaintext
                lengths: <h:ul>
                  <h:li>One plaintext length shall be one octet.</h:li>
                  <h:li>One plaintext length shall be 20 octets (160-bits).</h:li>
                  <h:li>One plaintext length shall be the longest supported plaintext length less than or equal to 512 octets (4096-bits).</h:li>
                </h:ul> The evaluator shall test the authenticated-decryption functionality of
                AES-KWP using the same test as for AES-KWP authenticated-encryption, replacing
                plaintext values with ciphertext values and AES-KWP authenticated-encryption with
                AES-KWP authenticated-decryption.
                </test>
              </testlist>
              </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_cop.1" name="Cryptographic Operation (Hashing Algorithms)" iteration="HASH_ALG">
          <f-element id="fel-hash-alg">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
                <selectable>invoke platform-provided functionality</selectable>
                <selectable>implement functionality </selectable>
              </selectables> to perform cryptographic hashing in accordance with a specified cryptographic algorithm 
              <selectables>
                <selectable>SHA-256</selectable>
                <selectable>SHA-384</selectable>
                <selectable>SHA-512</selectable>
              </selectables> and message digest sizes 
              <selectables>
                <selectable>256</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
              </selectables> bits that meet the following: FIPS Pub 180-4.</title>
            <note role="application">The intent of this requirement is to specify the hashing
              function for trusted channel protocols. The hash selection must support the message
              digest size selection. The hash selection should be consistent with the overall
              strength of the algorithm used (for example, SHA-256 for 128-bit keys).</note>
            <aactivity>
              <h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
              <TSS>The evaluator shall examine the TSS to verify that it describes (for each 
			  supported platform) how the hash functionality is invoked for each digest size selected 
			  in the MDM Server's ST (it should be noted that this may be through a mechanism that is not
			  implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as
			  part of this evaluation activity).<h:br/><h:br/>
              <h:h4>If "implement functionality" is selected:</h:h4>
              The evaluator shall check that the association of the hash function with other
                  TSF cryptographic functions (for example, the digital signature
                verification function) is documented in the TSS. The evaluator
                checks the AGD documents to determine that any configuration that is required to be
                done to configure the functionality for the required hash sizes is present. The
                  TSF hashing functions can be implemented in one of two modes.
                The first mode is the byte-oriented mode. In this mode the TSF
                only hashes messages that are an integral number of bytes in length; i.e., the
                length (in bits) of the message to be hashed is divisible by 8. The second mode is
                the bit-oriented mode. In this mode the TSF hashes messages of
                arbitrary length. As there are different tests for each mode, an indication is given
                in the following sections for the bit-oriented vs. the byte-oriented testmacs.</TSS>
              
              <Tests>The evaluator shall perform all of the following tests for each hash algorithm
                implemented by the TSF and used to satisfy the requirements of
                this PP.<h:br/><h:br/> 
              <testlist><h:b><h:u>Short Messages Test Bit-oriented Mode</h:u></h:b><h:br/><h:br/>
                <test>The evaluators devise an input set consisting of m+1 messages, where m is the block
                length of the hash algorithm. The length of the messages range sequentially from 0
                to m bits. The message text shall be pseudorandomly generated. The evaluators
                compute the message digest for each of the messages and ensure that the correct
                result is produced when the messages are provided to the TSF.</test><h:br/> 
              </testlist>
              <testlist>
                  <h:b><h:u>Short Messages Test Byte-oriented Mode</h:u></h:b><h:br/><h:br/> 
                <test>The evaluators devise
                an input set consisting of m/8+1 messages, where m is the block length of the hash
                algorithm. The length of the messages range sequentially from 0 to m/8 bytes, with
                each message being an integral number of bytes. The message text shall be
                pseudorandomly generated. The evaluators compute the message digest for each of the
                messages and ensure that the correct result is produced when the messages are
                provided to the TSF.</test><h:br/></testlist>
              <testlist>
                  <h:b><h:u>Selected Long Messages Test Bit-oriented Mode</h:u></h:b><h:br/><h:br/> 
                <test>The evaluators devise an input set consisting of m
                messages, where m is the block length of the hash algorithm. The length of the ith
                message is 512 + 99*i, where 1 ≤ i ≤ m. The message text shall be pseudorandomly
                generated. The evaluators compute the message digest for each of the messages and
                ensure that the correct result is produced when the messages are provided to the
                  TSF.</test><h:br/></testlist>
              <testlist>
                  <h:b><h:u>Selected Long Messages Test Byte-oriented Mode</h:u></h:b><h:br/><h:br/> 
                <test>The evaluators devise an input set consisting of m/8 messages, where m
                is the block length of the hash algorithm. The length of the ith message is 512 +
                8*99*i, where 1 ≤ i ≤ m/8. The message text shall be pseudorandomly generated. The
                evaluators compute the message digest for each of the messages and ensure that the
                correct result is produced when the messages are provided to the TSF.</test><h:br/>
              </testlist>
              <testlist>
                  <h:b><h:u>Pseudorandomly Generated Messages Test</h:u></h:b><h:br/><h:br/> 
                <test>This test is for
                byte-oriented implementations only. The evaluators randomly generate a seed that is
                n bits long, where n is the length of the message digest produced by the hash
                function to be tested. The evaluators then formulate a set of 100 messages and
                associated digests by following the algorithm provided in Figure 1 of [SHAVS]. The
                evaluators then ensure that the correct result is produced when the messages are
              provided to the TSF.</test></testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_cop.1" name="Cryptographic Operation (Signature Algorithms)" iteration="SIGN_ALG">
          <f-element id="fel-sign-alg">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality </selectable>
              </selectables> to perform cryptographic signature services (generation and
              verification) in accordance with a specified cryptographic algorithm <selectables
                linebreak="yes">
                <selectable>RSA schemes using cryptographic key sizes of 2048-bit or greater that
                  meet the following: FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section
                  4</selectable>
                <selectable>ECDSA schemes using "NIST curves" P-384 and <selectables>
                    <selectable>P-256</selectable>
                    <selectable>P-521</selectable>
                    <selectable>no other curves</selectable>
                  </selectables> that meet the following: FIPS PUB 186-4, "Digital Signature
                  Standard (DSS)", Section 5</selectable>
              </selectables>
            </title>
            <note role="application">The ST Author should choose the algorithm implemented to perform digital signatures. The MDM Server must perform digital
			signatures in accordance with the trusted channel protocols. The MDM Server is required to validate any signed policies and policy updates sent 
			by the MDM Server. </note>  
            <aactivity> 
              <h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
              <TSS>The evaluator shall examine the TSS to verify that it describes (for each supported
                platform) how the digital signature functionality is invoked for each operation they
                are used for in the MDM Server (it should be noted that this may
                be through a mechanism that is not implemented by the MDM Server;
                nonetheless, that mechanism will be identified in the TSS as part
                of this evaluation activity).<h:br/><h:br/>
	      </TSS>	      
              <Tests>
		<h:h4>If "implement functionality" is selected:</h:h4>		
                <testlist><h:b><h:u>ECDSA Algorithm Tests</h:u></h:b><h:br/><h:br/>
                <test>ECDSA FIPS 186-4 Signature Generation Test<h:br/><h:br/> For each
                supported NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the
                evaluator shall generate 10 1024-bit long messages and obtain for each message a
                public key and the resulting signature values R and S. To determine correctness, the
                evaluator shall use the signature verification function of a known good
                implementation. </test><h:br/><h:br/>
                <test>ECDSA FIPS 186-4 Signature Verification Test<h:br/><h:br/> For each
                supported NIST curve (i.e., P-256, P-384 and P-521) and SHA function pair, the
                evaluator shall generate a set of 10 1024-bit message, public key and signature
                tuples and modify one of the values (message, public key or signature) in five of
                the 10 tuples. The evaluator shall obtain in response a set of 10 PASS/FAIL
                values.</test><h:br/><h:br/> 
                </testlist>
              <testlist><h:b><h:u>RSA Signature Algorithm Tests</h:u></h:b><h:br/><h:br/>
                <test>Signature Generation Test<h:br/><h:br/> The evaluator shall verify the
                implementation of RSA Signature Generation by the TOE using the
                Signature Generation Test. To conduct this test the evaluator must generate or
                obtain 10 messages from a trusted reference implementation for each modulus size/SHA
                combination supported by the TSF. The evaluator shall have the
                  TOE use their private key and modulus value to sign these
                messages.<h:br/><h:br/> The evaluator shall verify the correctness of the 
                TSF's signature using a known good implementation and the associated
                public keys to verify the signatures.</test> <h:br/><h:br/>
                <test>Signature Verification Test<h:br/><h:br/> The evaluator shall perform the
                Signature Verification test to verify the ability of the TOE to
                recognize another party's valid and invalid signatures. The evaluator shall inject
                errors into the test vectors produced during the Signature Verification Test by
                introducing errors in some of the public keys e, messages, IR format, and/or
                signatures. The TOE attempts to verify the signatures and returns
                success or failure.<h:br/><h:br/> The evaluator shall use these test vectors to emulate
                the signature verification test using the corresponding parameters and verify that
                the TOE detects these errors. </test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_cop.1" name="Cryptographic Operation (Keyed-Hash Message Authentication)" iteration="KEY_HASH">
          <f-element id="fcs-cop-1-keyedhash">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality </selectable>
              </selectables> to perform keyed-hash message authentication in accordance with a
              specified cryptographic algorithm HMAC -<selectables>
                <selectable>SHA-256</selectable>
                <selectable>SHA-384</selectable>
                <selectable>SHA-512</selectable>
              </selectables>, key sizes <assignable>key size (in bits) used in HMAC</assignable>,
              and message digest sizes <selectables>
                <selectable>256</selectable>
                <selectable>384</selectable>
                <selectable>512</selectable>
              </selectables> bits that meet the following: FIPS Pub 198-1, "The Keyed-Hash Message
              Authentication Code, and FIPS Pub 180-4, "Secure Hash Standard."</title>
            <note role="application">The intent of this requirement is to specify the keyed-hash
              message authentication function used when used for key establishment purposes for the
              various cryptographic protocols used by the TOE (e.g., trusted
              channel). The hash selection must support the message digest size selection. The hash
              selection should be consistent with the overall strength of the algorithm used for
              FCS_COP.1/SIGN_ALG.</note>
            <aactivity> 
              <TSS>
		<h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
		The evaluator shall examine the TSS to verify that it describes (for each supported
                platform) how the keyed-hash functionality is invoked for each mode and key size
                selected in the MDM Server's ST (it should be
                noted that this may be through a mechanism that is not implemented by the 
                MDM Server; nonetheless, that mechanism will be identified in the
                TSS as part of this evaluation activity).
		<h:br/><h:br/>
              <h:h4>If "implement functionality" is selected:</h:h4>		  
              The evaluator shall examine the TSS to ensure that it specifies
                the following values used by the HMAC function: key length, hash function used,
                block size, and output MAC length used.</TSS>
		
              <Tests>For each of the supported parameter sets, the evaluator shall compose 15 sets
                of test data. Each set shall consist of a key and message data. The evaluator shall
                have the TSF generate HMAC tags for these sets of test data. The
                resulting MAC tags shall be compared to the result of generating HMAC tags with the
                same key and IV using a known good implementation.
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_https_ext.1" name="HTTPS Protocol" status="sel-based">
          <depends on-sel="TRP1_HTTPS_INVOKE" on-sel2="TRP1_HTTPS_IMPLEMENT"/>
          <depends on-sel="TRP2_HTTPS_INVOKE" on-sel2="TRP2_HTTPS_IMPLEMENT"/>
          <depends on-sel="ITC1_HTTPS_INVOKE" on-sel2="ITC1_HTTPS_IMPLEMENT"/>
          <depends on-sel="ITC2_HTTPS_INVOKE" on-sel2="ITC2_HTTPS_IMPLEMENT"/>
          <depends on-sel="ITT1_HTTPS_INVOKE" on-sel2="ITT1_HTTPS_IMPLEMENT"/>
          <depends on-sel="ITT2_HTTPS_INVOKE" on-sel2="ITT2_HTTPS_IMPLEMENT"/>
          <f-element id="fcs-https-ext-1e1">
            <title>The TSF shall implement the HTTPS protocol that complies with RFC 2818.</title>
          </f-element>
          <f-element id="fcs-https-ext-1e2">
            <title>The TSF shall implement HTTPS using TLS in accordance with the Package for Transport Layer Security . 
            </title>
            <note role="application">The TLS Functional Package must be included in the ST, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>TLS must be selected</h:li>
                    <h:li>either client or server is selected as appropriate</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSC_EXT.1.1 or FCS_TLSS_EXT.1.1 (as appropriate):
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                  </h:ul>
                </h:li>
              </h:ul>         
              Validity is determined by the certificate path, the expiration date, and the revocation status in accordance with RFC 5280.</note>
            <aactivity>
              <Tests>
                <testlist>
                  <test>The evaluator shall attempt to establish an HTTPS connection with a web server, observe the traffic with a packet analyzer, and verify 
				  that the connection succeeds and that the traffic is identified as TLS or HTTPS.</test><h:br/>
                  Other tests are performed in conjunction with the TLS evaluation activities.<h:br/><h:br/> 
                </testlist>
	      </Tests>
            </aactivity>
          </f-element> 
        	<audit-event>
				<audit-event-descr>Failure of the certificate validity check</audit-event-descr>
				<audit-event-info>Issuer Name and Subject Name of certificate</audit-event-info>
				<audit-event-info type="optional">User's authorization decision</audit-event-info>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fcs_iv_ext.1" name="Initialization Vector Generation" status="sel-based">
          <depends on-sel="fcs_stg_enc"/>
          <!--<selection-depends req="FCS_STG_EXT.2.1" ids="fcs_stg_enc"/>-->
          <f-element id="fcs-iv-est-1e1">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to generate IVs in accordance with <xref to="iv"/>.</title>
            <note role="application">This requirement must be included in the ST
              if the selection in FCS_STG_EXT.1 indicates that the TSF is protecting private keys
              and persistent secrets with encryption rather than the platform-provided key
              storage.<h:br/><h:br/> <xref to="iv"/> lists the requirements for composition of IVs according to
              the corresponding NIST Special Publications for each cipher mode. The composition of
              IVs generated for encryption according to a cryptographic protocol is addressed by the
              protocol. Thus, this requirement addresses only IVs generated for key storage encryption.<h:br/><h:br/>
              <h:b><ctr ctr-type='Table' pre="Table " id="iv">: References and IV Requirements for NIST-approved Cipher Modes</ctr></h:b>             
              <h:table>
                <h:TR>
                  <h:TD><h:b>Cipher Mode</h:b></h:TD>
                  <h:TD><h:b>Reference</h:b></h:TD>
                  <h:TD><h:b>IV Requirement</h:b></h:TD>
                </h:TR>
                <h:tr>
                  <h:td>Electronic Codebook (ECB)</h:td>
                  <h:td>SP800-38A</h:td>
                  <h:td>No IV</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Counter (CTR)</h:td>
                  <h:td>SP800-38A</h:td>
                  <h:td>"Initial Counter" shall be non-repeating. No counter value shall be
                    repeated across multiple messages with the same secret key.</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Cipher Block Chaining (CBC)</h:td>
                  <h:td>SP800-38A</h:td>
                  <h:td>IVs shall be unpredictable. Repeating IVs leak information about whether
                    the first one or more blocks are shared between two messages, so IVs should be
                    non-repeating in such situations.</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Output Feedback (OFB)</h:td>
                  <h:td>SP800-38A</h:td>
                  <h:td>IVs shall be non-repeating and shall not be generated by invoking the
                    cipher on another IV.</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Cipher Feedback (CFB)</h:td>
                  <h:td>SP800-38A</h:td>
                  <h:td>IVs should be non-repeating as repeating IVs leak information about the
                    first plaintext block and about common shared prefixes in messages.</h:td>
                </h:tr>
				<!-- QQQQ: Below looks like an error. But maybe not -->
                <h:tr>
                  <h:td>XEX (XOR Encrypt XOR)<h:br/><h:br/> Tweakable Block Cipher with Ciphertext
                    Stealing (XTS) </h:td>
                  <h:td>SP800-38E</h:td>
                  <h:td>No IV. Tweak values shall be non-negative integers, assigned
                    consecutively, and starting at an arbitrary non-negative integer.</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Cipher-based Message Authentication Code (CMAC)</h:td>
                  <h:td>SP800-38B</h:td>
                  <h:td>No IV</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Key Wrap and Key Wrap with Padding</h:td>
                  <h:td>SP800-38F</h:td>
                  <h:td>No IV</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Counter with CBC-Message Authentication Code (CCM)</h:td>
                  <h:td>SP800-38C</h:td>
                  <h:td>No IV. Nonces shall be non-repeating.</h:td>
                </h:tr>
                <h:tr>
                  <h:td>Galois Counter Mode (GCM)</h:td>
                  <h:td>SP800-38D</h:td>
                  <h:td>IV shall be non-repeating. The number of invocations of GCM shall not
                    exceed 2^32 for a given secret key unless an implementation only uses 96-bit IVs
                    (default length).</h:td>
                </h:tr>
              </h:table>
            </note>
            <aactivity>
              <h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
              <TSS>The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the IV generation is invoked for each mode
			  selected in the MDM Server's ST (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that
			  mechanism will be identified in the TSS as part of this evaluation activity).
              <h:h4>If "implement functionality" is selected:</h:h4>
              The evaluator shall examine the TSS to ensure that it details the encryption of user credentials, persistent secrets, and private keys and the 
			  generation of the IVs used for that encryption.<h:br/><h:br/></TSS>
              <Tests>The evaluator shall ensure that the generation of IVs for each key encrypted by the same KEK meets <xref to="iv"/>.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
		
        <f-component cc-id="fcs_rbg_ext.1" name="Extended: Random Bit Generation">
          <f-element id="fcs-rbg-ext-1e1">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality </selectable>
              </selectables> to perform all deterministic random bit generation services in accordance with NIST Special Publication 800-90A using 
              <selectables>
                <selectable>Hash_DRBG (any)</selectable>
                <selectable>HMAC_DRBG (any)</selectable>
                <selectable>CTR_DRBG (AES)</selectable>
              </selectables>.</title>
            <note role="application">The ST author should select whether the server provides its own DRBG or uses the platforms. SP 800-90A contains three different
			methods of generating random numbers; each of these, in turn, depends on underlying cryptographic primitives (hash functions/ciphers). The ST author will
			select the function used, and include the specific underlying cryptographic primitives used in the requirement or in the TSS. While any of the identified 
			hash functions (SHA-224, SHA-256, SHA-384, SHA-512) are allowed for Hash_DRBG or HMAC_DRBG, only AES-based implementations for CTR_DRBG are allowed.</note>
            <aactivity> 
              <TSS>
		<h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
		The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the RBG functionality is invoked for each operation they
		are used for in the MDM Server (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism
		will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>
              <Tests>
		<h:h4>If "implement functionality" is selected:</h:h4>		
		The evaluator shall perform the following tests.<h:br/><h:br/> The evaluator shall perform 15 trials for the RNG implementation. If the RNG is configurable,
		the evaluator shall perform 15 trials for each configuration. The evaluator shall also confirm that the operational guidance contains appropriate instructions
		for configuring the RNG  functionality.<h:br/><h:br/> 
              If the RNG has prediction resistance enabled, each trial consists of (1) instantiate DRBG, (2) generate the first block of random bits, (3) generate a
			  second block of random bits, and (4) uninstantiate. The evaluator verifies that the second block of random bits is the expected value. The evaluator 
			  shall generate eight input values for each trial. The first is a count (0 - 14). The next three are entropy input, nonce, and personalization string 
			  for the instantiate operation. The next two are additional input and entropy input for the first call to generate. The final two are additional input
			  and entropy input for the second call to generate. These values are randomly generated. "generate one block of random bits" means to generate random
			  bits with number of returned bits equal to the Output Block Length (as defined in NIST SP 800-90A).<h:br/><h:br/> 
              If the RNG does not have prediction resistance, each trial consists of (1) instantiate DRBG, (2) generate the first block of random bits (3) reseed,
			  (4) generate a second block of random bits, and (5) uninstantiate. The evaluator verifies that the second block of random bits is the expected value. 
			  The evaluator shall generate eight input values for each trial. The first is a count (0 - 14). The next three are entropy input, nonce, and 
			  personalization string for the instantiate operation. The fifth value is additional input to the first call to generate. The sixth and seventh are 
			  additional input and entropy input to the call to reseed. The final value is additional input to the second generate call.<h:br/><h:br/> 
              The following paragraphs contain more information on some of the input values to be generated/selected by the evaluator.<h:br/><h:br/> 
              Entropy input: the length of the entropy input value must equal the seed length.<h:br/><h:br/> 
              Nonce: If a nonce is supported (CTR_DRBG with no Derivation Function does not use a nonce), the nonce bit length is one-half the seed length.<h:br/><h:br/> 
              Personalization string: The length of the personalization string must be less than or equal to seed length. If the implementation only supports one
			  personalization string length, then the same length can be used for both values. If more than one string length is support, the evaluator shall use
			  personalization strings of two different lengths. If the implementation does not use a personalization string, no value needs to be supplied.<h:br/><h:br/>
              Additional input: the additional input bit lengths have the same defaults and restrictions as the personalization string lengths.<h:br/><h:br/>
	      </Tests>
              </aactivity>
          </f-element>
          <f-element id="fcs-rbg-ext-1e2">
            <title> The deterministic RBG shall be seeded by an entropy source that accumulates
              entropy from <selectables>
                <selectable>a software-based noise source</selectable>
                <selectable>a platform-based RBG</selectable>
                <selectable>a hardware-based noise source</selectable>
                <selectable>no other sources</selectable>
              </selectables> with a minimum of <selectables>
                <selectable>128 bits</selectable>
                <selectable>256 bits</selectable>
              </selectables> of entropy at least equal to the greatest security strength (according
              to NIST SP 800-57) of the keys and hashes that it will generate.</title>
            <note role="application">For the first selection in this requirement, the 
              ST author selects 'software-based noise source' if any additional noise
              sources are used as input to the application's DRBG. Note that the application must
              use the platform's DRBG to seed its DRBG. <h:br/><h:br/> In the second selection in this
              requirement, the ST author selects the appropriate number of bits of
              entropy that corresponds to the greatest security strength of the algorithms included
              in the ST. Security strength is defined in Tables 2 and 3 of NIST SP
              800-57A. For example, if the implementation includes 2048-bit RSA (security strength
              of 112 bits), AES 128 (security strength 128 bits), and HMAC-SHA-256 (security
              strength 256 bits), then the ST author would select 256 bits. </note>
            <aactivity>
              <TSS>         
              Documentation shall be produced-and the evaluator shall perform the
              activities-in accordance with Appendix D: Entropy Documentation and Assessment and the
              "Clarification to the Entropy Documentation and Assessment Annex."<h:br/><h:br/> In the
              future, specific statistical testing (in line with NIST SP 800-90B) will be required
              to verify the entropy estimates.
	      </TSS>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Failure of the randomization process</audit-event-descr>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fcs_stg_ext.1" name="Cryptographic Key Storage">
          <f-element id="fel-crypto-key-store">
            <title>The TSF shall utilize <selectables>
              <selectable> platform-provided key storage</selectable>
              <selectable id="fcs_stg_enc"> encryption as specified in FCS_STG_EXT.2</selectable>
              </selectables> for all persistent secrets and private keys.</title>
            <!--TODO: check this note and aa-->
            <note role="application">This requirement ensures that persistent secrets (credentials, secret keys) and private keys are stored securely when not in 
			use. If some secrets/keys are manipulated by the TOE and others are manipulated by the platform, then both of the selections can be specified by the ST 
			author and the ST author must identify in the TSS those keys which are manipulated by the TOE and those by the platform. <h:br/><h:br/> 
              If "encryption as specified in FCS_STG_EXT.2" is selected then FCS_STG_EXT.2 and FCS_IV_EXT.1 must be included in the ST.<h:br/><h:br/>
              If the TSF is an application, and not a dedicated server, then it should store its private keys in the platform-provided key storage.<h:br/><h:br/> 
              The ST author is responsible for selecting the manner in which the keys are stored and where they are stored in the selections above. </note>
            <aactivity>
              <TSS>Regardless of whether this requirement is met by the TSF or the TOE platform, the evaluator will check the TSS to ensure that it lists each 
			  persistent secret (credential, secret key) and private key needed to meet the requirements in the ST. For each of these items, the evaluator will 
			  confirm that the TSS lists for what purpose it is used, and how it is stored. The evaluator then performs the following actions. <h:br/><h:br/>
              Persistent secrets and private keys manipulated by the TOE platform:<h:br/><h:br/> 
              <!-- TODO: -Do we still need this?? Old activity>For each platform listed in the ST, the evaluator shall examine the ST of the platform to ensure
			  that the persistent secrets and private keys listed as being stored by the platform in the MDM Server ST are identified as being protected in that
			  platform's ST.<h:br/><h:br/><-->
              The evaluator shall examine the TSS to verify that it describes (for each supported platform) how the key storage functionality is invoked for each 
			  persistent secret and private key described in the TSS (it should be noted that this may be through a mechanism that is not implemented by the MDM 
			  Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/> 
              Persistent secrets and private keys manipulated by the TSF:<h:br/><h:br/> 
              The evaluator reviews the TSS to determine that it makes a case that, for each item listed as being manipulated by the TOE, it is not written
			  unencrypted to persistent memory, and that the item is stored by the platform.<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fcs_stg_ext.2" name="Encrypted Cryptographic Key Storage" status="sel-based">
          <depends on-sel="fcs_stg_enc"/>
          <f-element id="fcs-stg-ext-2e1">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to encrypt all keys using AES in the <selectables>
                <selectable>Key Wrap (KW) mode</selectable>
                <selectable>Key Wrap with Padding (KWP) mode</selectable>
                <selectable>GCM</selectable>
                <selectable>CCM</selectable>
                <selectable>CBC mode</selectable>
              </selectables> .</title>
            <note role="application">This requirement states that keys used by the TSF shall not be kept in plaintext. The intent of this requirement is to ensure 
			that the private keys, credentials, and persistent secrets cannot be accessed in the TOE in an unencrypted state, allowing an attacker to access keys 
			without having to exhaust the AES key space. <h:br/><h:br/> 
              This requirement must be including in the ST if the selection in FCS_STG_EXT.1 indicates that the TSF is protecting private keys and persistent secrets
			  with encryption rather than the platform-provided key storage.<h:br/><h:br/> 
              <!--If this requirement is included in the ST, <xref to="FCS_IV_EXT.1"/> must also be included.--></note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to ensure it describes in detail how user credentials, persistent secret and private keys are stored and
			  encrypted. The evaluator shall review the TSS to determine that it makes a case that key material is not written unencrypted to persistent memory 
			  and that it identifies the mode of encryption.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform)
			  how the key encryption functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; 
			  nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
      </section>
	  
      <section id="fia" title="Identification and Authentication (FIA)">
	  
        <f-component cc-id="fia_enr_ext.1" name="Enrollment of Mobile Device into Management">
          <f-element id="fel-enr-tsf">
            <title>The TSF shall authenticate the remote users over a trusted channel during the enrollment of a mobile device.</title>
            <note role="application">The MDM Server may use its own directory or a directory server to perform the authentication decision for users performing
			the remote enrollment of a mobile device.</note>
            <aactivity> 
              <TSS>The evaluator shall examine the TSS and verify that it describes the process of enrollment for each MDM Agent/platform listed as supported 
			  in the ST. This description shall include the trusted path used for enrollment (FTP_TRP.1/TRUSTPATH_ENROLL), the method of user authentication
			  (username/password, token, etc.), the method of authentication decision (local or remote authentication services), and the actions performed on
			  the MDM Server upon successful authentication. <h:br/><h:br/></TSS>
              <Tests>
                <testlist>
                <test>The evaluator shall attempt to enroll a device without providing correct credentials. The evaluator shall verify that the device is not 
				enrolled and that the described enrollment actions are not taken.</test>
                <test>The evaluator shall attempt to enroll the device providing correct credentials. The evaluator shall verify that the device is enrolled 
				and that the described enrollment actions are taken.</test>
		</testlist>
	      </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-enr-limit">
            <title>The TSF shall limit the user's enrollment of devices to devices specified by <selectables> <selectable>IMEI</selectable><selectable>
			<assignable>a unique device ID</assignable></selectable></selectables> and <selectables>
              <selectable>specific device models</selectable>
                <selectable>a number of devices</selectable>
                <selectable>specific time period</selectable>         
                <selectable><assignable>other features</assignable></selectable>
                <selectable>no other features</selectable>
              </selectables>. </title>
            <note role="application"> This requirement is designed to permit the enterprise to restrict users' enrollment of devices. A unique device ID is required
			to limit the user's enrollment. The unique device ID can be the IMEI or an ID specific to a particular platform. </note>         
            <aactivity>
              <TSS>The evaluator shall examine the TSS and verify that it implements a policy to limit the user's enrollment of devices.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall ensure that the administrative guidance describes the method(s) of restricting user enrollment and that it instructs 
			  the administrator how to configure the restrictions.<h:br/><h:br/>
	      </Guidance>
              <Tests>For each type of policy selected, the evaluator shall perform the following: <testlist>
                  <test>The evaluator shall attempt to configure the MDM Server according to the administrative guidance in order to prevent enrollment. The
				  evaluator shall verify that the user cannot enroll a device outside of the configured limitation. (For example, the evaluator may try to enroll
				  a disallowed device, or may try to enroll additional devices beyond the number allowed.)</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Failure of MD user authentication</audit-event-descr>
				<audit-event-info>Presented username</audit-event-info>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fia_uau.1" name="Timing of Authentication">
          <f-element id="fia-uau-1e1">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality </selectable>
              </selectables> to allow <assignable>list of TSF mediated actions</assignable> on behalf of the user to be performed before the user is authenticated 
			  with the Server.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
			  platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; 
			  nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-uau-func">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality </selectable>
              </selectables> that requires each user to be successfully authenticated with the Server before allowing any other TSF-mediated actions on behalf of 
			  that user.</title>
            <note role="application">This requirement ensures that any user attempting to access the TSF must be authenticated. These users may be administrators
			attempting to administer the TOE or ordinary users attempting to enroll for management by the MDM system. The ST author is responsible for assigning 
			the list of actions that can take place before this authentication. The TSF or TOE platform may utilize enterprise authentication to meet this 
			requirement.<h:br/><h:br/>
              For distributed TOEs at least one TOE component has to support the authentication of administrators but not necessarily all TOE components. In case not 
			  all TOE components support authentication for administrators the TSS must describe how administrators are authenticated and identified.
            </note>
            <aactivity>              
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Tests>
              <testlist>The evaluator shall perform the following tests: <test>The evaluator shall attempt to perform the prohibited actions before authentication. The evaluator shall verify the actions cannot be performed.</test>
                <test>The evaluator shall attempt to perform the prohibited actions after authentication. The evaluator shall verify the actions can be performed.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fia_uau_ext.4" iteration="REUSE" name="User Authentication (Re-Use Prevention)" status="objective">
          <f-element id="fia-uau-ext-4e1-reuse">
            <title>The TSF shall prevent reuse of enrollment authentication data
              related to <assignable>identified authentication mechanism(s)</assignable>. </title>
            <note role="application">This requirement references the authentication mechanism(s)
              used to authenticate the user for enrollment in <xref to="fel-enr-tsf"/>. If a username and
              password is used to authenticate the user for enrollment, the password must not be
              reused. Thus if the user has two devices enrolled in management or needs to re-enroll
              the same device (i.e., after a device wipe), the password must be different for each
              enrollment. Additionally, if two different users are enrolling the password must be
              different for each user. </note>
            <aactivity>
              <TSS>The evaluator shall verify that the TSS contains a description
                of the process of enrollment for each MDM Agent/platform listed as
                supported in the ST. This description shall include the method of
                user authentication (username/password, token, etc.) and how reuse of the
                authentication data is prevented.<h:br/><h:br/>
	      </TSS>
	      <Tests>
              <testlist>
                <test>The evaluator shall enroll a device providing correct credentials. The
                  evaluator shall attempt to enroll a second device using the same credentials used
                  to enroll the first device. The evaluator shall verify that the second device
                  could not enroll. </test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Attempt to reuse enrollment data</audit-event-descr>
				<audit-event-info>Enrollment data</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fia_uau_ext.4" iteration="REUSE_ENROLL" name="User Authentication (Re-Use Prevention for Device Enrollment)" status="objective">
          <f-element id="fel-uau-reuse">
            <title> The TSF shall prevent reuse of <selectables>
                <selectable>IMEI</selectable>
                <selectable><assignable>a unique device ID</assignable></selectable>
              </selectables> related to limiting the user's enrollment of devices. </title>
              <note role="application">
		The MDM server must not allow two devices to be enrolled using the same unique identifier.
	    The unique identifier is specified in
              <xref to="fel-enr-limit"/>.<h:br/><h:br/>
	      <xref to="fel-uau-reuse"/>  can only be included in the 
                ST if "devices specified by IMEI" or "device specified by <assignable>a
                unique device ID</assignable> is selected in <xref to="fel-enr-limit"/>. The same selection
              must be completed for this requirement. </note>
            <aactivity>
              <TSS>The evaluator shall verify that the TSS contains a description of the policy to limit the user's enrollment of devices.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall ensure that the administrative guidance describes the
                method(s) of restricting user enrollment and that it instructs the administrator how
                to configure the restrictions.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall configure the MDM Server to restrict
                    user's enrollment to a specific unique device ID and enroll a device with that
                    device ID. The evaluator shall attempt to enroll a second device with the same
                    unique device ID. (The evaluator may need to wipe the device without network
                    connectivity, so the device is un-enrolled but the MDM server
                    considers the device still enrolled.) The evaluator shall verify that the second
                    enrollment using the same unique device ID fails.</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Attempt to reuse enrollment data.</audit-event-descr>
				<audit-event-info>Enrollment data</audit-event-info>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fia_x509_ext.1" iteration="CERTVAL_MAN" name="X.509 Certificate Validation">
          <f-element id="fel-x509-man">
            <title>The TSF shall 
		    <selectables>  
			    <selectable>invoke platform-provided functionality </selectable> 
			    <selectable>implement functionality </selectable> 
		    </selectables> to validate certificates in accordance with the following rules: 
		    <h:ul> 
			    <h:li>RFC 5280 certificate validation and certificate path validation.  </h:li>
			    <h:li>The certificate path must terminate with a trusted CA certificate.  </h:li>
			    <h:li>The TSF shall validate a certificate path by ensuring the presence of the basicConstraints extension, that the CA flag is
				    set to TRUE for all CA certificates, and that any path constraints are met. </h:li>
			    <h:li>The <abbr linkend="TSF">  </abbr> shall validate that any CA certificate includes caSigning purpose in the 
				    key usage field. </h:li>
			    <h:li>The TSF shall validate the revocation status of the certificate using 
				    <selectables>  
					    <selectable> OCSP as specified in RFC 6960  </selectable> 
					    <selectable>  CRL as specified in RFC 5280 Section 6.3  </selectable> 
					    <selectable>  a CRL as specified in RFC 5759 Section 5  </selectable> 
					    <selectable>  an OCSP TLS Status Request Extension (i.e., OCSP stapling) as specified in RFC 6066  </selectable> 
					    <selectable>  OCSP TLS Multi-Certificate Status Request Extension (i.e., OCSP Multi-Stapling) as specified in
						    RFC 6961  </selectable> 
				    </selectables>.</h:li>
			    <h:li>The TSF shall validate the extendedKeyUsage field according to the following rules: <h:br>  </h:br><h:br>  </h:br>
				    <h:ul> 
					    <h:li>  Certificates used for trusted updates and executable code integrity verification shall have
						the Code Signing purpose (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.  </h:li>
					    <h:li>  Server certificates presented for TLS shall have the Server Authentication purpose (id-kp 1
						with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage field.  </h:li>
					    <h:li>  Client certificates presented for TLS shall have the Client Authentication purpose (id-kp 2
						with OID 1.3.6.1.5.5.7.3.2) in the EKU field.  </h:li><h:li> OCSP certificates presented for OCSP responses 
					    	shall have the OCSP Signing purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the EKU field.  </h:li>
					    <h:li>  Server certificates presented for EST shall have the CMC Registration Authority (RA) purpose 
						    (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the EKU field.  </h:li> 
				    </h:ul>  
			    </h:li> 
		    	</h:ul> 
            </title>
            <note role="application">
	      <xref to="fel-x509-man"/> lists the rules for validating certificates. The ST author shall select whether revocation status is verified using
		    OCSP or CRLs. FIA_X509_EXT.2 requires that certificates are used for trusted channels; this use requires that the
			extendedKeyUsage rules are verified. Certificates may optionally be used for code signing
			and policy signing and, if implemented, must be validated to contain the corresponding
			extendedKeyUsage. <h:br>  </h:br><h:br>  </h:br> 
		    OCSP stapling and OCSP multi-stapling only support TLS server certificate validation. If other certificate types are validated, either
		    OCSP or CRL should be claimed. If OCSP is not supported the EKU provision for checking the OCSP Signing purpose is met by 
		    default.<h:br>  </h:br><h:br>  </h:br> Regardless of the selection of  <h:i> implement functionality </h:i>or<h:i> invoke platform-provided
			functionality </h:i>, the validation is expected to end in a trusted root CA certificate in a root
			store managed by the platform. 
		  </note>
            <aactivity>
              <TSS>
		<h:h4>  If "invoke platform-provided functionality" is selected:  </h:h4> 
		      The evaluator shall examine the TSS to verify that it describes (for each supported platform) how this
			functionality is invoked (it should be noted that this may be through a mechanism that is not
			implemented by the MDM server; nonetheless, that mechanism will be identified in the
			TSS as part of this evaluation activity). <h:br>  </h:br><h:br>  </h:br> 
		      The TSS must describe when revocation checking is performed. It is expected that
 			revocation checking is performed when a certificate is used in an authentication step. It is not sufficient
			to verify the status of an X.509 certificate only when it is loaded onto the device. 
		      <h:h4>  If "implement functionality" is selected:  </h:h4> 
		      The evaluator shall ensure the TSS describes where the check of validity of the certificates takes place. The evaluator ensures
			the TSS also provides a description of the certificate path validation algorithm. <h:br>  </h:br><h:br>  </h:br> 
		      The TSS must describe when revocation checking is performed. It is
			 expected that revocation checking is performed when a certificate is used in an authentication step. It is not
 			sufficient to verify the status of an X.509 certificate only when it is loaded onto the device.<h:br>  </h:br><h:br>  </h:br>
	      </TSS>
              <Tests>
		      <h:h4> If "implement functionality" is selected: </h:h4> 
		      The tests described must be performed in conjunction with the other certificate services
			evaluation activities, including each of the functions in FIA_X509_EXT.2.1. The 
			tests for the extendedKeyUsage rules are performed in conjunction with the uses that
			require those rules. The evaluator shall create a chain of at least three certificates: the
			node certificate to be tested, an Intermediate CA, and the self-signed Root CA. 
		      <testlist> 
			      <test> The evaluator shall demonstrate that validating a certificate without a valid certification path results in the
				      function failing, for each of the following reasons, in turn:
				      <h:ul> 
					      <h:li> by establishing a certificate path in which one of the issuing certificates is not a CA certificate, </h:li>
					      <h:li> by omitting the basicConstraints field in one of the issuing certificates, </h:li>
					      <h:li> by setting the basicConstraints field in an issuing certificate to have CA=False, </h:li>
					      <h:li> by omitting the CA signing bit of the key usage field in an issuing certificate, and </h:li>
					      <h:li> by setting the path length field of a valid CA field to a value strictly less than the certificate path. </h:li>
					</h:ul>
				      The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and 
					 demonstrate that the function succeeds. The evaluator shall then remove trust in one of the CA certificates, 
					 and show that the function fails. </test>
			      <test>  The evaluator shall demonstrate that validating an expired certificate results in the function failing.  </test>
			      <test>  The evaluator shall test that the TOE can properly handle revoked certificates--conditional on whether CRL, OCSP 
				      or OCSP stapling is selected; if multiple methods are selected, then a test shall be performed for each method.
					The evaluator shall test revocation of the node certificate and revocation of the
					intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the
					root CA). If OCSP stapling per RFC 6066 is the only supported revocation method, testing revocation of the 
					intermediate CA certificate is omitted.
					The evaluator shall ensure that a valid certificate is used, and that the validation
					function succeeds. The evaluator then attempts the test with a certificate that has been
					revoked (for each method chosen in the selection) to ensure when the certificate is no longer
					valid that the validation function fails.  </test>
			      <test>  If OCSP option is selected, the evaluator shall send the 
				TOE an OCSP response signed by a certificate that does not have the OCSP signing purpose and verify that validation 
				of the OCSP response fails. If CRL is selected, the evaluator shall cause a CA to sign a CRL with a certificate that
 				has a key usage extension but does not have the cRLsign key usage bit set, and verify that validation of the CRL
 				fails. </test>
			      <test>  The evaluator shall modify any byte in the first eight bytes of the certificate and demonstrate
				that the certificate fails to validate. (The certificate will fail to parse correctly.)  </test>
			      <test>  The evaluator shall modify any byte in the last byte of the certificate and demonstrate that the
				certificate fails to validate. (The signature on the certificate will not validate.)  </test>
			      <test>  The evaluator shall modify any byte in the public key of the certificate and demonstrate that
				the certificate fails to validate. (The signature on the certificate will not validate.)  </test>
			      <test> <h:br>  </h:br>Test 8a: (Conditional on support for EC certificates as indicated in FCS_COP.1/SIGN_ALG). 
				      The evaluator shall establish a valid, trusted certificate chain consisting of an EC leaf 
					 certificate, an EC Intermediate CA certificate not designated as a trust anchor, and an EC certificate 
					 designated as a trusted anchor, where the elliptic curve parameters are specified as a named curve. The 
 					evaluator shall confirm that the TOE validates the certificate chain.<h:br>  </h:br><h:br> </h:br>
				      Test 8b: (Conditional on support for EC certificates as indicated in FCS_COP.1/SIGN_ALG). 
				      The evaluator shall replace the intermediate certificate in the certificate chain for Test 8a 
					 with a modified certificate, where the modified intermediate CA has a public key information field where the
					 EC parameters uses an explicit format version of the Elliptic Curve parameters in the public key information 
					 field of the intermediate CA certificate from Test 8a, and the modified Intermediate CA certificate is signed 
					 by the trusted EC root CA, but having no other changes. The evaluator shall confirm the TOE treats the certificate 
					 as invalid. </test> 
		      </testlist> 
	      </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-x509-constr">
            <title>The TSF shall <selectables>
                <selectable>invoke platform-provided functionality</selectable>
                <selectable>implement functionality</selectable> 
              </selectables> to treat a certificate as a CA certificate only if the basicConstraints extension is present and the CA flag is set to TRUE.</title>
            <note role="application">This requirement applies to certificates that are used and processed by the TOE or platform and restricts the certificates 
			that may be added as trusted CA certificates.</note>
            <aactivity>
              <TSS>
		<h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
		The evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that
		this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this
		evaluation activity).</TSS>
                <Tests>
		  <h:h4>If "implement functionality" is selected:</h:h4>
		  The tests described must be performed in conjunction with the other certificate services evaluation activities, including the functions 
		  in <xref to="fel-x509-tsf"/>. The evaluator shall create a chain of at least four certificates: the node certificate to be tested, two Intermediate CAs, 
		  and the self-signed Root CA.
              <testlist>
                  <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate does not contain the
				  basicConstraints extension. The validation of the certificate path fails.</test>
                  <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate has the cA flag in the
				  basicConstraints extension not set. The validation of the certificate path fails.</test>
                  <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate has the cA flag in the
				  basicConstraints extension set to TRUE. The validation of the certificate path succeeds.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>          
        	<audit-event>
				<audit-event-descr>Failure to validate X.509 certificate</audit-event-descr>
				<audit-event-info>Reason for failure</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fia_x509_ext.1" iteration="CERTVAL_SEL" name="X.509 Certificate Validation" status="sel-based" >
          <depends on-sel="ITT1_IPSEC_IMPLEMENT" on-sel2="ITT1_HTTPS_IMPLEMENT" on-sel3="ITT1_HTTPS_INVOKE"
			on-sel4="ITT1_TLS_IMPLEMENT" on-sel5="ITT1_DTLS_IMPLEMENT"/>
          <f-element id="fel-x509-sel">
            <title>The TSF shall 
		    <selectables>  
			    <selectable> invoke platform-provided functionality </selectable> 
				<selectable> implement functionality </selectable> 
		    </selectables> to validate certificates in accordance with the 
		following rules: 
		    <h:ul> 
			    <h:li>  RFC 5280 certificate validation and certificate path validation.  </h:li>
			    <h:li>  The certificate path must terminate with a trusted CA certificate.  </h:li>
			    <h:li>  The TSF shall validate a certificate path by ensuring the presence of the basicConstraints extension, that 
				    the CA flag is set to TRUE for all CA certificates, and that any path constraints are met. </h:li>
			    <h:li>  The TSF shall validate that any CA certificate includes caSigning purpose in the key usage field. </h:li>
			    <h:li>  The TSF shall validate the revocation status of the certificate using 
				    <selectables>  
					 <selectable> OCSP as specified in RFC 6960  </selectable> 
					    <selectable>  CRL as specified in RFC 5280 Section 6.3  </selectable> 
					    <selectable>  a CRL as specified in RFC 5759 Section 5  </selectable> 
					    <selectable>  an OCSP TLS Status Request Extension (i.e., OCSP stapling) as specified in RFC 6066  </selectable> 
					    <selectable>  OCSP TLS Multi-Certificate Status Request Extension (i.e., OCSP Multi-Stapling) as specified in RFC 6961  </selectable> 
					    <selectable> no revocation method </selectable>
				</selectables>.  
			    </h:li>
			    <h:li>  The TSF shall validate the extendedKeyUsage field according to the following rules: <h:br>  </h:br><h:br>  </h:br>
				    <h:ul> 
					    <h:li>  Certificates used for trusted updates and executable code integrity verification shall have
						the Code Signing purpose (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.  </h:li>
					    <h:li>  Server certificates presented for TLS shall have the Server Authentication purpose (id-kp 1
						with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage field.  </h:li>
					    <h:li>  Client certificates presented for TLS shall have the Client Authentication purpose (id-kp 2
						with OID 1.3.6.1.5.5.7.3.2) in the EKU field.  </h:li>
					    <h:li> OCSP certificates presented for OCSP responses shall have the OCSP Signing purpose (id-kp 9
						with OID 1.3.6.1.5.5.7.3.9) in the EKU field.  </h:li>
					    <h:li>  Server certificates presented for EST shall have the CMC Registration Authority (RA) purpose (id-kp-cmcRA with OID
						1.3.6.1.5.5.7.3.28) in the EKU field.  </h:li> 
				    </h:ul>  
			    </h:li> 
		    </h:ul> 
            </title>
            <note role="application"> 
              <xref to="fel-x509-sel"/> should be chosen if the TOE is distributed and the protocol(s) selected in FPT_ITT.1/INTER_XFER utilize X.509 certificates
		    for peer authentication. In this case, the use of revocation list checking is optional as there are additional requirements surrounding the
		    enabling and disabling of the ITT channel as defined in FCO_CPC_EXT.1. If revocation checking is not supported, the ST author should select 
		    'no revocation method.' However, if certificate revocation checking is supported, the ST author selects whether this is performed using OCSP 
		    or CRLs.<h:br>  </h:br><h:br>  </h:br>
		This SFR lists the rules for validating certificates. The ST author shall select whether revocation status is verified using OCSP or CRLs. 
		    FIA_X509_EXT.2 requires that certificates are used for trusted channels; this use requires that the extendedKeyUsage rules are verified.
		    Certificates may optionally be used for code signing and policy signing and, if implemented, must be validated to contain the corresponding
		    extendedKeyUsage. <h:br>  </h:br><h:br>  </h:br> 
		OCSP stapling and OCSP multi-stapling only support TLS server certificate validation. If other certificate types are validated, either OCSP or
		    CRL should be claimed. If OCSP is not supported the EKU provision for checking the OCSP Signing purpose is met by default.<h:br>  </h:br><h:br>  </h:br> 
		Regardless of the selection of  <h:i> implement functionality </h:i>or<h:i> invoke platform-provided functionality </h:i>, the validation is 
		    expected to end in a trusted root CA certificate in a root store managed by the platform.  
		</note>
            <aactivity>
            	<TSS> 
			<h:h4>  If "invoke platform-provided functionality" is selected:  </h:h4> 
			The evaluator shall examine the TSS to verify that it describes (for each supported platform) how this
			functionality is invoked (it should be noted that this may be through a mechanism that is not
			implemented by the MDM server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity). <h:br>  </h:br><h:br>  </h:br>
			The TSS must describe when revocation checking is performed. It is expected that revocation checking is performed when a certificate is 
			used in an authentication step. It is not sufficient to verify the status of an X.509 certificate only when it is loaded onto the 
			device. 
			<h:h4>  If "implement functionality" is selected:  </h:h4> 
			The evaluator shall ensure the TSS describes where the check of validity of the certificates takes place. The evaluator ensures
			the TSS also provides a description of the certificate path validation algorithm. <h:br>  </h:br><h:br>  </h:br> 
			The TSS must describe when revocation checking is performed. It is expected that revocation checking is performed when a certificate is 
			used in an authentication step. It is not sufficient to verify the status of an X.509 certificate only when it is loaded onto the 
			device.<h:br>  </h:br><h:br>  </h:br> 
		    </TSS> 
		    <Tests> 
			<h:h4> If "implement functionality" is selected: </h:h4> 
			The tests described must be performed in conjunction with the other certificate services
			evaluation activities, including each of the functions in FIA_X509_EXT.2.1. The tests for the extendedKeyUsage rules are performed in
			    conjunction with the uses that require those rules. The evaluator shall create a chain of at least three certificates: the
			node certificate to be tested, an Intermediate CA, and the self-signed Root CA. 
			    <testlist> 
				    <test> The evaluator shall demonstrate that validating a certificate without a valid certification path results in the function 
					    failing, for each of the following reasons, in turn:
					    <h:ul> 
						    <h:li> by establishing a certificate path in which one of the issuing certificates is not a CA certificate, </h:li>
						    <h:li> by omitting the basicConstraints field in one of the issuing certificates, </h:li>
						    <h:li> by setting the basicConstraints field in an issuing certificate to have CA=False, </h:li>
						    <h:li> by omitting the CA signing bit of the key usage field in an issuing certificate, and </h:li>
						    <h:li> by setting the path length field of a valid CA field to a value strictly less than the certificate path. </h:li> 
					    </h:ul>
					    The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and demonstrate that the 
					    function succeeds. The evaluator shall then remove trust in one of the CA certificates, and show that the function fails. </test>
				    <test>  The evaluator shall demonstrate that validating an expired certificate results in the function failing.  </test>
				    <test>  The evaluator shall test that the TOE can properly handle revoked certificates--conditional on whether CRL, OCSP or 
					    OCSP stapling is selected; if multiple methods are selected, then a test shall be performed for each method.
						The evaluator shall test revocation of the node certificate and revocation of the
						intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the
						root CA). If OCSP stapling per RFC 6066 is the only supported revocation method, testing revocation of the
					    intermediate CA certificate is omitted.
						The evaluator shall ensure that a valid certificate is used, and that the validation
						function succeeds. The evaluator then attempts the test with a certificate that has been
						revoked (for each method chosen in the selection) to ensure when the certificate is no longer
						valid that the validation function fails.  </test>
				    <test>  If OCSP option is selected, the evaluator shall send the TOE an OCSP response signed by a certificate that does not
					    have the OCSP signing purpose and verify that validation of the OCSP response fails. If CRL is selected, the evaluator 
					    shall cause a CA to sign a CRL with a certificate that has a key usage extension but does not have the cRLsign key
					    usage bit set, and verify that validation of the CRL fails. </test>
				    <test>  The evaluator shall modify any byte in the first eight bytes of the certificate and demonstrate
					that the certificate fails to validate. (The certificate will fail to parse correctly.)  </test>
				    <test>  The evaluator shall modify any byte in the last byte of the certificate and demonstrate that the
					certificate fails to validate. (The signature on the certificate will not validate.)  </test>
				    <test>  The evaluator shall modify any byte in the public key of the certificate and demonstrate that
					the certificate fails to validate. (The signature on the certificate will not validate.)  </test>
				    <test> <h:br>  </h:br>
					Test 8a: (Conditional on support for EC certificates as indicated in FCS_COP.1/SIGN_ALG). 
					The evaluator shall establish a valid, trusted certificate chain consisting of an EC leaf certificate, an EC 
					Intermediate CA certificate not designated as a trust anchor, and an EC certificate designated as a trusted anchor, 
					where the elliptic curve parameters are specified as a named curve. The evaluator shall confirm that the TOE validates 
					the certificate chain.<h:br>  </h:br><h:br>  </h:br>
					    Test 8b: (Conditional on support for EC certificates as indicated
						 in FCS_COP.1/SIGN_ALG). The evaluator shall replace the intermediate certificate in the 
						 certificate chain for Test 8a with a modified certificate, where the modified intermediate CA has a public key 
						 information field where the EC parameters uses an explicit format version of the Elliptic Curve parameters in the 
						 public key information field of the intermediate CA certificate from Test 8a, and the modified Intermediate CA 
 						 certificate is signed by the trusted EC root CA, but having no other changes. The evaluator shall confirm the TOE
						 treats the certificate as invalid. </test> 
			    </testlist>  
		    </Tests>
            </aactivity>
          </f-element>
          <f-element id="fel-x509-treat">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable> 
            </selectables> to treat a certificate as a CA certificate only if the basicConstraints extension is present and the CA flag is set to TRUE.</title>
            <note role="application">This requirement applies to certificates that are used and processed by the TOE or platform and restricts the certificates that may be added as trusted CA certificates.</note>
            <aactivity>
              <TSS>
		<h:h4>If "invoke platform-provided functionality" is selected:</h:h4>
		The evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>
              <Tests>
		<h:h4>If "implement functionality" is selected:</h:h4>		
              The tests described must be performed in conjunction with the other certificate services evaluation activities, including the functions in <xref to="fel-x509-tsf"/>. The evaluator shall create a chain of at least four certificates: the node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
              <testlist>
                <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate does not contain the basicConstraints extension. The validation of the certificate path fails.</test>
                <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate has the cA flag in the basicConstraints extension not set. The validation of the certificate path fails.</test>
                <test>The evaluator shall construct a certificate path, such that the certificate of the CA issuing the TOEs certificate has the cA flag in the basicConstraints extension set to TRUE. The validation of the certificate path succeeds.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Failure to validate X.509 certificate</audit-event-descr>
				<audit-event-info>Reason for failure</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fia_x509_ext.2" name="X.509 Certificate Authentication">
          <f-element id="fel-x509-tsf">
            <title>The TSF shall <selectables> 
              <selectable>invoke platform-provided functionality to use X.509v3 certificates as defined by RFC 5280 to support authentication for <selectables>
                <selectable>IPsec</selectable>
                <selectable>HTTPS</selectable>
                <selectable>TLS</selectable>
                <selectable>DTLS</selectable>
                <selectable>SSH</selectable>
                <selectable>no protocols</selectable>
              </selectables>, and <selectables linebreak="yes">
                <selectable>code signing for system software updates</selectable>
                <selectable>code signing for integrity verification</selectable>
                <selectable>policy signing</selectable>
                <selectable><assignable>other uses</assignable></selectable>
                <selectable>no additional uses</selectable>
              </selectables></selectable>                
              <selectable>implement functionality to use X.509v3 certificates as defined by RFC 5280 to support authentication for <selectables linebreak="yes">
                <selectable>IPsec as defined in the PP-Module for VPN Client</selectable>
                <selectable>HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
                <selectable>TLS as defined in the Package for Transport Layer Security</selectable>
                <selectable>DTLS as defined in the Package for Transport Layer Security</selectable>
                <selectable>SSH as defined in the Extended Package for Secure Shell</selectable>
                <selectable>no protocols</selectable>
              </selectables>, and <selectables linebreak="yes">
                <selectable>code signing for system software updates</selectable>
                <selectable>code signing for integrity verification</selectable>
                <selectable>policy signing</selectable>
                <selectable><assignable>other uses</assignable></selectable>
                <selectable>no additional uses</selectable>
              </selectables>.</selectable>
              </selectables> 
              </title>
            <note role="application"> The ST author's selection(s) must match the selection 
              of FTP_TRP.1/TRUSTPATH_ENROLL, FTP_ITC.1/INTER_XFER_IT, FTP_ITC.1/INTER_TSF_XFER_AGENT, FPT_ITT.1/INTER_XFER, and FPT_ITT.1/INTER_XFER_AGENT. 
              Certificates may optionally be used for trusted updates of system software (<xref to="fel-tud-func"/>) 
              and software integrity verification (<xref to="fel-tst-ext-impl"/>). If some authentication services are 
              provided by the TOE and others by the platform, the ST author must clearly 
              identify which services are provided by the TOE and which by the platform.<h:br/><h:br/> If code 
              signing for integrity verification is selected, the MDM vendor is not expected to digitally sign 
              DLL's from other vendors that have been incorporated into their product.<h:br/><h:br/>
              <!--
              If "IPsec" is selected the Module for IPsec VPN Clients must be included in the ST.<h:br/><h:br/>
              If "SSH" is selected the Extended Package for Secure Shell must be included in the ST. It should be noted 
              that due to constraints imposed by this PP that sha1 cannot be used.<h:br/><h:br/> 
              If "HTTPS" is selected the appropriate selection-based SFRs from Appendix B must be included in 
              the ST. <h:br/><h:br/>
              If "TLS" or "DTLS" is selected the TLS Functional Package must be included in the ST. The ciphersuites selected from the TLS package must correspond 
			  with the algorithms and hash functions allowed in FCS_COP.1.
              -->
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
			  platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server;
			  nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-x509-fail">
            <title> When the 
              <selectables>
                <selectable>TSF</selectable>
                <selectable>TOE platform</selectable>
              </selectables> cannot establish a connection to determine the validity of a certificate, the TSF shall 
              <selectables>
                <selectable>invoke platform-provided functionality</selectable>
                <selectable>implement functionality</selectable>
              </selectables> to 
              <selectables>
                <selectable>allow the administrator to choose whether to accept the certificate in these cases</selectable>
                <selectable>accept the certificate</selectable>
                <selectable>not accept the certificate</selectable>
              </selectables>.</title>
            <note role="application">If a valid OCSP response is not provided by the server during a TLS handshake, to include when the TOE does not support OCSP 
		    stapling, a connection may need to be established to perform a verification of the revocation status of a certificate - either to download a 
		    current, valid CRL or to perform OCSP. The selection is used to describe the behavior in the event that such a connection cannot be established
		    (for example, due to a network error). If the TOE has determined the certificate is valid according to all other rules in FIA_X509_EXT.1/CERTVAL_MAN,
		    the behavior indicated in the second selection must determine the validity. The TOE must not accept the certificate if it fails any of the other 
		    validation rules in FIA_X509_EXT.1/CERTVAL_MAN or if valid revocation information (a cached CRL, or recent or stapled OCSP response) indicates the 
		    certificate has been revoked. If the administrator-configured option is selected by the ST Author, the ST Author must also select function d in 
		    FMT_SMF.1/SERVER_CONF_SERVER.<h:br/><h:br/>
              	If the TOE is distributed and FIA_X509_EXT.1/CERTVAL_SEL is selected, then certificate revocation checking is optional. This is due to additional
		    authorization actions being performed in the enabling and disabling of the intra-TOE trusted channel as defined in FCO_CPC_EXT.1. In this case, 
		    a connection is not required to determine certificate validity and this SFR is trivially satisfied.            
             </note>
            <aactivity>
            	<TSS>
			The evaluator shall check the TSS to ensure that it describes how the TOE chooses which certificates to use, and any necessary instructions
			in the administrative guidance for configuring the operating environment so that the TOE can use the certificates.<h:br/><h:br/>
              		If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
			platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the 
			MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
              		If "implement functionality" is selected, the evaluator shall examine the TSS to confirm that it describes the behavior of the 
			TOE when a connection cannot be established during the validity check of a certificate used in establishing a trusted channel. The
			evaluator shall verify that any distinctions between trusted channels are described.<h:br/><h:br/> 
		    </TSS>
              <Guidance>
		      If the requirement that the administrator is able to specify the default action is selected, then the evaluator shall ensure that the 
		      operational guidance contains instructions on how this configuration action is performed.<h:br/><h:br/>
		    </Guidance>
              <Tests>
		      The evaluator shall perform the following test for each trusted channel: 
		      <testlist>
                  	<test>The evaluator shall demonstrate use of a valid certificate requiring certificate validation checking to be performed in at least some
				part by communicating with a non-TOE IT entity. The evaluator shall then manipulate the environment so that the 
				TOE is unable to verify the validity of the certificate, and observe that the action selected in FIA_X509_EXT.2.2 is performed. 
				If the selected action is administrator-configurable, then the evaluator shall follow the operational guidance to determine that all 
				supported administrator-configurable options behave in their documented manner.
			 </test>
                </testlist>
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Failure to establish connection to determine revocation status.</audit-event-descr>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fia_x509_ext.3" name="X.509 Enrollment" status="objective">
          <f-element id="fia-x509-ext-3e1">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to generate a Certificate Request Message as specified by RFC 2986 and be able to provide the following information in the
			  request: public key and <selectables>
                <selectable>device-specific information</selectable>
                <selectable>Common Name</selectable>
                <selectable>Organization</selectable>
                <selectable>Organizational Unit</selectable>
                <selectable>Country</selectable>
              </selectables>.</title>
            <note role="application"> The public key is the public key portion of the public-private key pair generated by the TOE as specified in 
			<xref to="fel-ckm-tsf-func"/>.<h:br/><h:br/>
              As Enrollment over Secure Transport (EST) is a new standard that has not yet been widely adopted, this requirement is included as an interim
			  objective requirement in order to allow developers to distinguish those products which have to have the ability to generate Certificate Request 
			  Messages but do not yet implement EST.</note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported 
			  platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server;
			  nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
            </aactivity>
          </f-element>
          <f-element id="fia-x509-ext-3e2"> <!--free--><!--check-->
            <title>The TSF shall<selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to validate the chain of certificates from the Root CA upon receiving the CA Certificate Response.</title>
            <aactivity>
              <TSS>If the ST author selects "device-specific information", the evaluator shall verify that the TSS contains a description of the device-specific
			  fields used in certificate requests.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) 
			  how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that 
			  mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check to ensure that the operational guidance contains instructions on requesting certificates from a CA, including
			  generation of a Certificate Request Message. If the ST author selects "Common Name", "Organization", "Organizational Unit", or "Country", the evaluator
			  shall ensure that this guidance includes instructions for establishing these fields before creating the certificate request message.<h:br/><h:br/>
			  </Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall use the operational guidance to cause the TOE to generate a certificate request message. The evaluator shall capture the
				  generated message and ensure that it conforms to the format specified. The evaluator shall confirm that the certificate request provides the public 
				  key and other required information, including any necessary user-input information.</test>
                  <test>The evaluator shall demonstrate that validating a certificate response message without a valid certification path results in the function
				  failing. The evaluator shall then load a certificate or certificates as trusted CAs needed to validate the certificate response message, and 
				  demonstrate that the function succeeds. The evaluator shall then delete one of the certificates, and show that the function fails.</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Generation of Certificate Request Message</audit-event-descr>
				<audit-event-info>Content of Certificate Request Message</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Success or failure of verification</audit-event-descr>
				<audit-event-info>Issuer and Subject name of added certificate or reason for failure</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fia_x509_ext.4" name="Alternate X.509 Enrollment" status="objective">
          <f-element id="fia-x509-ext-4e1">
            <title>The TSF shall use the Enrollment over Secure Transport (EST) protocol as specified in RFC 7030 to request certificate enrollment using the 
			simple enrollment method described in RFC 7030 Section 4.2.</title>
          </f-element>
          <f-element id="fia-x509-ext-4e2">
            <title>The TSF shall be capable of authenticating EST requests using an existing certificate and corresponding private key as specified by RFC 7030
			Section 3.3.2.</title>
          </f-element>
          <f-element id="fia-x509-ext-4e3">
            <title>The TSF shall be capable of authenticating EST requests using HTTP Basic Authentication with a username and password as specified by RFC 7030 
			Section 3.2.3.</title>
          </f-element>
          <f-element id="fia-x509-ext-4e4">
            <title>The TSF shall perform authentication of the EST server using an Explicit Trust Anchor following the rules described in RFC 7030, section 3.6.1.</title>
            <note role="application">EST also uses HTTPS as specified in FCS_HTTPS_EXT.1 to establish a secure connection to an EST server, and thus, the ST 
			author must also include FCS_HTTPS_EXT.1 in the main body of the ST. The separate Trust Anchor Database dedicated to EST operations is described
			as Explicit Trust Anchors in RFC 7030.</note>
          </f-element>
          <f-element id="fia-x509-ext-4e5">
            <title>The TSF shall be capable of requesting server-provided private keys as specified in RFC 7030 Section 4.4.</title>
          </f-element>
          <f-element id="fia-x509-ext-4e6">
            <title>The TSF shall be capable of updating its EST-specific Trust Anchor Database using the "Root CA Key Update" process described in RFC 7030 
			Section 4.1.3.</title>
          </f-element>
          <f-element id="fel-x509-crm">
            <title>The TSF shall generate a Certificate Request Message for EST as specified in RFC 2986 and be able to provide the following information in the
			request: public key and <selectables linebreak="yes">
                <selectable>device-specific information</selectable>
                <selectable>Common Name, Organization, Organizational Unit, and Country</selectable>
              </selectables>.</title>
          </f-element>
          <f-element id="fia-x509-ext-4e8">
            <title>The TSF shall validate the chain of certificates from the Root CA certificate in the Trust Anchor Database to the EST Server CA certificate upon
			receiving a CA Certificates Response. </title>
            <note role="application">The public key referenced in <xref to="fel-x509-crm"/> is the public key portion of the public-private key pair generated by
			the TOE as specified in FCS_CKM.1.</note>
            <aactivity>
              <Guidance>The evaluator shall check to ensure that the operational guidance contains instructions on requesting certificates from an EST server,
			  including generating a Certificate Request Message.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall also perform the following tests. Other tests are performed in conjunction with the TLS evaluation activities.<testlist>
                  <test>The evaluator shall use the operational guidance to cause the TOE to request certificate enrollment from an EST server using the simple 
				  enrollment method described in RFC 7030 Section 4.2, authenticating the certificate request to the server using an existing certificate and 
				  private key as described by RFC 7030 Section 3.3.2. The evaluator shall confirm that the resulting certificate is successfully obtained and 
				  installed in the TOE key store.</test>
                  <test>The evaluator shall use the operational guidance to cause the TOE to request certificate enrollment from an EST server using the simple 
				  enrollment method described in RFC 7030 Section 4.2, authenticating the certificate request to the server using a username and password as 
				  described by RFC 7030 Section 3.2.3. The evaluator shall confirm that the resulting certificate is successfully obtained and installed in the 
				  TOE key store.</test>
                  <test>The evaluator shall modify the EST server to return a certificate containing a different public key than the key included in the TOEs
				  certificate request. The evaluator shall use the operational guidance to cause the TOE to request certificate enrollment from an EST server.
				  The evaluator shall confirm that the TOE does not accept the resulting certificate since the public key in the issued certificate does not
				  match the public key in the certificate request.</test>
                  <test>The evaluator shall configure the EST server or use a man-in-the-middle tool to present a server certificate to the TOE that is present
				  in the TOE general Trust Anchor Database but not its EST-specific Trust Anchor Database. The evaluator shall cause the TOE to request certificate 
				  enrollment from the EST server. The evaluator shall verify that the request is not successful.</test>
                  <test>The evaluator shall configure the EST server or use a man-in-the-middle tool to present an invalid certificate. The evaluator shall
				  cause the TOE to request certificate enrollment from the EST server. The evaluator shall verify that the request is not successful. The evaluator 
				  shall configure the EST server or use a man-in-the-middle tool to present a certificate that does not have the CMC
					RA purpose and verify that requests to the EST server fail. The tester shall repeat the test using a valid certificate and a certificate that contains the CMC RA 
					purpose and verify that the certificate enrollment requests succeed.</test>
                  <test>The evaluator shall use a packet sniffing tool between the 
                    TOE and an EST server. The evaluator shall turn
                    on the sniffing tool and cause the TOE to request certificate
                    enrollment from an EST server. The evaluator shall verify that
                    the EST protocol interaction occurs over a Transport Layer
                    Security (TLS) protected connection. The evaluator is not expected to decrypt
                    the connection but rather observe that the packets conform to the TLS protocol
                    format.</test>
                  <test>The evaluator shall use the operational guidance to cause the 
                    TOE to request a server-provided private key and certificate from
                    an EST server. The evaluator shall confirm that the resulting
                    private key and certificate are successfully obtained and installed in the 
                    TOE key store.</test>
                  <test>The evaluator shall modify the EST server to, in response
                    to a server-provided private key and certificate request, return a private key
                    that does not correspond with the public key in the returned certificate. The
                    evaluator shall use the operational guidance to cause the TOE
                    to request a server-provided private key and certificate. The evaluator shall
                    confirm that the TOE does not accept the resulting private key
                    and certificate since the private key and public key do not correspond.</test>
                  <test>The evaluator shall configure the EST server to provide a
                    "Root CA Key Update" as described in RFC 7030 Section 4.1.3. The evaluator shall
                    cause the TOE to request CA certificates from the 
                    EST server and shall confirm that the EST-specific Trust Anchor Database is updated with the new trust anchor.</test>
                  <test>The evaluator shall configure the EST server to provide a
                    "Root CA Key Update" as described in RFC 7030 Section 4.1.3, but shall modify
                    part of the NewWithOld certificate's generated signature. The evaluator shall
                    cause the TOE to request CA certificates from the 
                    EST server and shall confirm that the EST-specific Trust Anchor Database is not updated with the new trust anchor since
                    the signature did not verify.</test>
                  <test>The evaluator shall use the operational guidance to cause the TOE to generate a certificate request message. The evaluator shall
                    capture the generated message and ensure that it conforms with the format
                    specified by RFC 2986. The evaluator shall confirm that the certificate request
                    provides the public key and other required information, including any necessary
                    user-input information.</test>
                  </testlist>
		  </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Generation of Certificate Enrollment Request</audit-event-descr>
				<audit-event-info>Issuer and Subject name of EST Server</audit-event-info>
				<audit-event-info>Method of authentication</audit-event-info>
				<audit-event-info>Issuer and Subject name of certificate used to authenticate</audit-event-info>				
				<audit-event-info>Content of Certificate Request Message</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Success or failure of enrollment</audit-event-descr>
				<audit-event-info>Issuer and Subject name of added certificate or reason for failure</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Update of EST Trust Anchor Database</audit-event-descr>
				<audit-event-info>Subject name of added Root CA</audit-event-info>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fia_x509_ext.5" name="X.509 Unique Certificate">
          <f-element id="fia-x509-ext-5e1">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to require a unique certificate for each client device.</title>
            <note role="application">Each client device will have a unique X.509v3 certificate for use by the MDM Agent; the certificate is not to be reused among
			clients. This requirement is to ensure that the MDM Server either provides a unique certificate or verifies that each client certificate is unique.</note>
            <aactivity>              
              <TSS> If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported
			  platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server;
			  nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
                If "implement functionality" is selected then the evaluator shall examine the TSS to verify that it describes the methods to ensure that each 
				client utilizes a unique certificate. <h:br/><h:br/>            </TSS>
              <Tests>For each MDM Agent/platform listed as supported in the ST:<h:br/><h:br/>
                The evaluator shall utilize appropriate combinations of specialized operational environment and development tools (debuggers, simulators, etc.) 
				for the TOE and instrumented TOE builds as needed to perform this test.<h:br/><h:br/> 
                One of the following tests must be performed depending on whether the MDM agent allows for the loading of certificates.
                <testlist>              
                  <test>[conditional] If the MDM agent allows for the loading of certificates:<h:br/>
                    The evaluator shall initiate communications between the MDM Server and a client device over a trusted channel established using the device's
					unique certificate, verifying that a successful communication channel was established. The evaluator shall then attempt to initiate 
					communications between the MDM Server and a second client device over a trusted channel established using the unique certificate from the 
					first device, verifying that the MDM Server rejects this attempt at communication.
                  </test>
                  <test>[conditional] If the MDM agent does not allow for the loading of certificates:<h:br/>
                    The evaluator shall concurrently enroll 10 devices and ensure that the client certificate for each is unique, per the methods described in 
					the TSS. 
                  </test>            
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
      </section>
	  
      <section id="fmt" title="Security Management (FMT)">
	  
        <f-component cc-id="fmt_mof.1" name="Management of Functions Behavior" iteration="FUNCBE">
          <f-element id="fel-gen-mas">
            <title><h:b>Refinement:</h:b> The TSF shall restrict the ability to perform the functions <h:ul>
                <h:li>listed in FMT_SMF.1/SERVER_CONF_AGENT</h:li>
                <h:li>enable, disable, and modify policies listed in FMT_SMF.1/SERVER_CONF_AGENT</h:li>
                <h:li>listed in FMT_SMF.1/SERVER_CONF_SERVER</h:li>
              <h:li><selectables>
                <selectable id="mas">enable, disable and modify policies listed in FMT_SMF.1/MAS</selectable> <!-- NOTE: This is the hook to bring in MAS -->
                <selectable>no other functions</selectable>
              </selectables></h:li>
              </h:ul> to [authorized administrators].</title>
            <note role="application">This requirement outlines the functions that administrators will have the power to enable, disable, modify, and monitor 
			functions and policies listed in FMT_SMF.1/SERVER_CONF_AGENT. It also includes functions necessary to maintain and configure the MDM Server itself.<h:br/><h:br/>
              "Enable, disable and modify policies listed in FMT_SMF.1/MAS" must be selected if the TOE includes MAS functionality and FMT_SMF.1/MAS, 
			  FAU_GEN.1/MAS_SERVER, FMT_MOF.1/MANAGEMENT_MAS, FMT_SMR.1/SECMAN_ROLES_MAS must be included in the ST.          
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS and user documents to ensure that they describe what security management functions are restricted to the
			  administrator and what actions can be taken for each management function. The evaluator shall verify that the security management functions are 
			  restricted to authorized administrators and the administrator is only able to take the actions as described in the user documents.<h:br/><h:br/></TSS>
              <Tests>
              <testlist>
                <test>The evaluator shall attempt to access the functions and policies in FMT_SMF.1/SERVER_CONF_AGENT as an unauthorized user and verify that the 
				attempt fails.</test> 
                <test>[conditional] The evaluator shall attempt to access the functions and policies in FMT_SMF.1/MAS as an unauthorized user and verify that the
				attempt fails.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Issuance of command to perform function</audit-event-descr>
				<audit-event-info>Command sent and identity of MDM Agent recipient(s)</audit-event-info>
			</audit-event>
			<audit-event>
				<audit-event-descr>Change of policy settings</audit-event-descr>
				<audit-event-info>Policy changed and value or full policy</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fmt_mof.1" iteration="MANAGEMENT_ENROLL" name="Management of Functions Behavior (Enrollment)">
          <f-element id="fmt-mof-1e1">
            <title><h:b>Refinement:</h:b> The <h:b>MDM Server</h:b> shall restrict the ability to <h:i>[initiate the enrollment process]</h:i> to <h:i>[authorized 
			administrators and MD users]</h:i>.</title>
            <note role="application">
	      This requirement outlines the enrollment functions that both administrators and MD users may perform.
	      The enrollment actions are identified in the TSS as a part of FIA_ENR_EXT.1.
	    <h:br/><h:br/> The authorized administrator does not remotely initiate enrollment of the mobile devices that are in the possession of users but may enroll
		mobile devices when they are in the possession of the administrator, for example, before distributing the mobile devices to the users. </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS and verify that it describes how unauthorized users are prevented from enrolling in the MDM services.<h:br/><h:br/></TSS>
              <Tests>The test of this function is performed in conjunction with FIA_ENR_EXT.1.</Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Enrollment by a user</audit-event-descr>
				<audit-event-info>Identity of user</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fmt_mof.1" iteration="MANAGEMENT_MAS" name="Management of Functions in (MAS Server Downloads)" status="sel-based">
          <depends on-sel="mas"/>
          <f-element id="fmt-mof-1e1-mas">
            <title><h:b>Refinement:</h:b> The MAS Server shall restrict the ability to download applications, allowing only enrolled mobile devices that are compliant with MDM policies and assigned to a user in the application access group to perform this function.</title>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that all methods of initiating an application download or update push are specified.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains how to initiate an application download or update push.<h:br/><h:br/>
	      </Guidance>
              <Tests>The evaluator shall ensure that the MAS Server verifies that the mobile device is enrolled in the MDM Server and is in a compliant state. The evaluator shall verify that an application cannot be downloaded from the MAS Server prior to enrolling the device with the MDM. The evaluator shall partially enroll the mobile device, so the device is connected to the MDM Server, but is not compliant and verify that applications cannot be downloaded.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fmt_pol_ext.1" name="Trusted Policy Update">
          <f-element id="fmt-pol-ext-1e1">
            <title>The TSF shall provide digitally signed policies and policy updates to the MDM Agent.</title>
            <note role="application">The intent of this requirement is to cryptographically tie the policies to the enterprise that mandated the policy, not to
              protect the policies in transit (as they are already protected by FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT or FTP_ITC.1/INTER_TSF_XFER_AGENT). This is especially critical for users who connect to multiple enterprises.</note>
            <aactivity>
              <TSS>Policies must be digitally signed by the enterprise using the algorithms in FCS_COP.1/SIGN_ALG. The evaluator shall ensure that the TSS describes how policies are digitally signed by the TSF.<h:br/><h:br/></TSS>
              <Guidance>If applicable, the evaluator shall verify that the AGD guidance instructs administrators on configuring the Enterprise certificate to be used for signing policies or signing the policies before applying them.<h:br/><h:br/> </Guidance>
              <Tests>The evaluator shall perform a policy update in accordance with FMT_SMF.1/SERVER_CONF_AGENT. The evaluator shall examine the policy either at the MDM Server, in transmission, or at the MDM agent, and verify the TSF signs the update and provides it to the MDM Agent.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fmt_sae_ext.1" name="Security Attribute Expiration" status="objective">
          <f-element id="fmt-sae-ext-1e1">
            <title>The TSF shall be capable to specify a configurable expiration time for enrollment authentication data. </title>
          </f-element>
          <f-element>
            <title>The TSF shall be able to deny enrollment after the expiration time for the enrollment authentication data has passed.</title>
            <note role="application"> This requirement references the user authenticator used for device enrollment in management in <xref to="fel-enr-tsf"/>. The user authenticator must only be valid for a configurable time limit. If the authenticator is expired, even if entered correctly, enrollment must not occur. <h:br/><h:br/> The length of the time the authenticator is valid for is configured per function c.5 in FMT_SMF.1/SERVER_CONF_SERVER. If FMT_SAE_EXT.1 is included in the ST, then function g must be selected in FMT_SMF.1/SERVER_CONF_SERVER. </note>
            <aactivity>
              <TSS>The evaluator shall verify that the TSS contains a description of the process of enrollment for each MDM Agent/platform listed as supported in the ST. This description shall the method of user authentication (username/password, token, etc.).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall check to ensure that the operational guidance contains instructions to configure the expiration time for each method of user authentication listed in the TSS.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall configure the MDM Server according to the administrative guidance to set an expiration time for the enrollment authentication data. For each method of user authentication listed in the TSS, the evaluator shall attempt to enroll using authentication data that has expired. The evaluator shall verify that enrollment was unsuccessful.</test>
                </testlist>
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Enrollment attempted after expiration of authentication data</audit-event-descr>
				<audit-event-info>Identity of user</audit-event-info>
			</audit-event>
		</f-component>  
        
        <f-component cc-id="fmt_smf.1" iteration="SERVER_CONF_AGENT"
		     name="Specification of Management Functions (Server configuration of Agent)">
          <f-element id="fel-smf-man-agnt">
            <title><h:b>Refinement:</h:b> The <h:b>MDM Server</h:b> shall be capable of <h:b>communicating the following commands to the MDM Agent: </h:b>
              <h:ul style="list-style-type:none">
                <h:li><ctr id="smf1" ctr-type="mgmt" pre=""></ctr>. transition to the locked state (MDF Function 6)</h:li>
                <h:li><ctr id="smf2" ctr-type="mgmt" pre=""></ctr>. full wipe of protected data (MDF Function 7)</h:li>
                <h:li><ctr id="smf3" ctr-type="mgmt" pre=""></ctr>. unenroll from management</h:li>
                <h:li><ctr id="smf4" ctr-type="mgmt" pre=""></ctr>. install policies</h:li>
                <h:li><ctr id="smf5" ctr-type="mgmt" pre=""></ctr>. query connectivity status</h:li>
                <h:li><ctr id="smf6" ctr-type="mgmt" pre=""></ctr>. query the current version of the MD firmware/software</h:li>
                <h:li><ctr id="smf7" ctr-type="mgmt" pre=""></ctr>. query the current version of the hardware model of the device</h:li>
                <h:li><ctr id="smf8" ctr-type="mgmt" pre=""></ctr>. query the current version of installed mobile applications</h:li>
                <h:li><ctr id="smf9" ctr-type="mgmt" pre=""></ctr>. import X.509v3 certificates into the Trust Anchor Database (MDF Function 11)</h:li>
                <h:li><ctr id="smf10" ctr-type="mgmt" pre=""></ctr>. install applications (MDF Function 16)</h:li>
                <h:li><ctr id="smf11" ctr-type="mgmt" pre=""></ctr>. update system software (MDF Function 15)</h:li>
                <h:li><ctr id="smf12" ctr-type="mgmt" pre=""></ctr>. remove applications (MDF Function 14)</h:li>
              </h:ul> 
              <h:b>and the following commands to the MDM Agent:</h:b><h:br/>
                <selectables>
                <selectable><ctr id="smf13" ctr-type="mgmt" pre=""></ctr>. remove Enterprise applications (MDF Function 17)</selectable>
                <selectable><ctr id="smf14" ctr-type="mgmt" pre=""></ctr>. wipe Enterprise data (MDF Function 28)</selectable>
                <selectable><ctr id="smf15" ctr-type="mgmt" pre=""></ctr>. remove imported X.509v3 certificates and 
                  <selectables linebreak="yes">
                    <selectable>no other X.509v3 certificates</selectable>
                    <selectable><assignable>list of other categories of X.509v3 certificates</assignable></selectable>
                  </selectables> in the Trust Anchor Database (MDF Function 12)</selectable>
                <selectable>
                  <ctr id="smf16" ctr-type="mgmt" pre=""></ctr>. alert the user</selectable>
                <selectable>
                  <ctr id="smf17" ctr-type="mgmt" pre=""></ctr>. import keys/secrets into the secure key storage (MDF Function 9)</selectable>
                <selectable>
                  <ctr id="smf18" ctr-type="mgmt" pre=""></ctr>. destroy imported keys/secrets and <selectables linebreak="yes">
                    <selectable>no other keys/secrets</selectable>
                    <selectable><assignable>list of other categories of keys/secrets</assignable></selectable>
                  </selectables> in the secure key storage (MDF Function 10)</selectable>
                <selectable>
                  <ctr id="smf19" ctr-type="mgmt" pre=""></ctr>. read audit logs kept by the MD (MDF Function 32)</selectable>
                <selectable>
                  <ctr id="smf20" ctr-type="mgmt" pre=""></ctr>. retrieve MD-software integrity verification values (MDF Function 38)</selectable>
                <selectable>
                  <ctr id="smf21" ctr-type="mgmt" pre=""></ctr>. approve exceptions for sharing data between <selectables linebreak="yes">
                    <selectable>application processes</selectable>
                    <selectable>group of application processes</selectable>
                  </selectables> (MDF Function 42)</selectable>
                <selectable>
                  <ctr id="smf22" ctr-type="mgmt" pre=""></ctr>. place applications into application process groups based on
                    <assignable>application characteristics</assignable> (MDF Function 43)</selectable>
                <selectable>
                  <ctr id="smf23" ctr-type="mgmt" pre=""></ctr>. revoke Biometric template</selectable>
                <selectable>
                  <ctr id="smf24" ctr-type="mgmt" pre=""></ctr>. <assignable>list of other management functions to be provided by the MD</assignable>
                </selectable>
                <selectable>no other management functions</selectable>
              </selectables>
              <h:b>and the following MD configuration policies</h:b>:
              <h:br/><h:br/>
              <h:ul style="list-style-type:none">
                <h:li>
                  <ctr id="smf25" ctr-type="mgmt" pre=""></ctr>. password policy: <h:ol type="a">
                    <h:li>minimum password length</h:li>
                    <h:li>minimum password complexity</h:li>
                    <h:li>maximum password lifetime (MDF Function 1)</h:li>
                  </h:ol>
                </h:li> <h:li>
                  <ctr id="smf26" ctr-type="mgmt" pre=""></ctr>. session locking policy: <h:ol type="a">
                    <h:li>screen-lock enabled/disabled</h:li>
                    <h:li>screen lock timeout</h:li>
                    <h:li>number of authentication failures (MDF Function 2)</h:li>
                  </h:ol>
                </h:li> <h:li>
                  <ctr id="smf27" ctr-type="mgmt" pre=""></ctr>. wireless networks (SSIDs) to which the MD may connect (MDF Function 2)</h:li> <h:li>
                    <ctr id="smf28" ctr-type="mgmt" pre=""></ctr>. security policy for each wireless network: 
                    <h:ol type="a">
                      <h:li><selectables linebreak="yes">
                        <selectable>specify the CA(s) from which the MD will accept WLAN authentication server certificate(s)</selectable>
                        <selectable>specify the FQDN(s) of acceptable WLAN authentication server certificate(s)</selectable>
                      </selectables></h:li>
                    <h:li>ability to specify security type</h:li>
                    <h:li>ability to specify authentication protocol</h:li>
                    <h:li>specify the client credentials to be used for authentication</h:li>
                      <h:li><assignable>any additional WLAN management functions</assignable> (WLAN Client PP-Module Function 1)</h:li>
                  </h:ol>
                </h:li>
                <h:li>
                  <ctr id="smf29" ctr-type="mgmt" pre=""></ctr>. application installation policy by <selectables linebreak="yes">
                    <selectable>specifying authorized application repository(s)</selectable>
                    <selectable>specifying a set of allowed applications and versions (an application whitelist)</selectable>
                    <selectable>denying application installation</selectable>
                  </selectables>, (MDF Function 8)</h:li>
                <h:li>
                  <ctr id="smf30" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for <assignable>list of audio or visual collection devices</assignable> across device, <selectables linebreak="yes">
                    <selectable>on a per-app basis</selectable>
                    <selectable>on a per-group of applications processes basis</selectable>
                    <selectable>no other method</selectable>
                  </selectables>, (MDF Function 5)</h:li>
              </h:ul>
              <h:b>and the following MD configuration policies</h:b>:<h:br/><h:br/>
              <h:ul style="list-style-type:none"><selectables linebreak="yes">
                <selectable>
                  <ctr id="smf31" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for the VPN protection across MD, <selectables linebreak="yes">
                    <selectable>on a per-app basis</selectable>
                    <selectable>on a per-group of application processes basis</selectable>
                    <selectable>no other method</selectable>
                  </selectables> (MDF Function 3)</selectable>
                <selectable>
                  <ctr id="smf32" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for <assignable>list of radios</assignable>, (MDF Function 4)</selectable>
                <selectable>
                  <ctr id="smf33" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for data signaling over
                    <assignable>list of externally accessible hardware ports</assignable>, (MDF Function 24)</selectable>
                <selectable>
                  <ctr id="smf34" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for <assignable>list of protocols where the device acts as a server</assignable>, (MDF Function 25)</selectable>
                <selectable>
                  <ctr id="smf35" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for developer modes, (MDF Function 26)</selectable>
                <selectable>
                  <ctr id="smf36" ctr-type="mgmt" pre=""></ctr>. enable policy for data-at-rest protection, (MDF Function 20)</selectable>
                <selectable>
                  <ctr id="smf37" ctr-type="mgmt" pre=""></ctr>. enable policy for removable media's data-at-rest protection, (MDF Function 21)</selectable>
                <selectable>
                  <ctr id="smf38" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for local authentication bypass, (MDF Function 27)</selectable>
                <selectable>
                  <ctr id="smf39" ctr-type="mgmt" pre=""></ctr>. the Bluetooth trusted channel policy:<h:br/>
                  <h:ol type="a">
                    <h:li>enable/disable the Discoverable mode (for BR/EDR)</h:li>
                    <h:li>change the Bluetooth device name, 
                      <selectables linebreak="yes">
                        <selectable>allow/disallow additional wireless technologies to be used with Bluetooth </selectable>
                        <selectable>disable/enable Advertising (for LE)</selectable>
                        <selectable>disable/enable the Connection mode</selectable>
                        <selectable>disable/enable the Bluetooth services and/or profiles available on the device </selectable>
                        <selectable>specify minimum level of security for each pairing</selectable>
                        <selectable>configure allowable methods of Out of Band pairing</selectable>
                        <selectable>no other Bluetooth configuration</selectable>
                      </selectables>(MDF Function 18)
                    </h:li>
                  </h:ol>
                </selectable>
                <selectable>
                  <ctr id="smf40" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for display notification in the locked state of <h:br/>
                  <h:ol type="a">
                    <selectables linebreak="yes">
                      <selectable>email notifications</selectable>
                      <selectable>calendar appointments</selectable>
                      <selectable>contact associated with phone call notification</selectable>
                      <selectable>text message notification</selectable>
                      <selectable>other application-based notifications</selectable>
                      <selectable>none</selectable>
                    </selectables>(MDF Function 19)
                  </h:ol>
                </selectable>
                <selectable>
                  <ctr id="smf41" ctr-type="mgmt" pre=""></ctr>. policy for establishing a trusted channel or disallowing establishment if the MD cannot establish a connection to determine the validity of a certificate, (MDF Function 30)</selectable>
                <selectable>
                  <ctr id="smf42" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for the cellular protocols used to connect to cellular network base stations, (MDF Function 31)</selectable>
                <selectable>
                  <ctr id="smf43" ctr-type="mgmt" pre=""></ctr>. policy for import and removal by applications of X.509v3 certificates in the Trust Anchor Database, (MDF Function 29)</selectable>
                <selectable>
                  <ctr id="smf44" ctr-type="mgmt" pre=""></ctr>. 
                  <selectables linebreak="yes">
                    <selectable>certificate</selectable>
                    <selectable>public-key</selectable>
                  </selectables> used to validate digital signature on applications, (MDF Function 33)</selectable>
                <selectable>
                  <ctr id="smf45" ctr-type="mgmt" pre=""></ctr>. policy for exceptions for shared use of keys/secrets by multiple applications, (MDF Function 34)</selectable>
                <selectable>
                  <ctr id="smf46" ctr-type="mgmt" pre=""></ctr>. policy for exceptions for destruction of keys/secrets by applications that did not import the key/secret, (MDF Function 35)</selectable>
                <selectable>
                  <ctr id="smf47" ctr-type="mgmt" pre=""></ctr>. the unlock banner policy, (MDF Function 36)</selectable>
                <selectable>
                  <ctr id="smf48" ctr-type="mgmt" pre=""></ctr>. configure the auditable items (MDF Function 37)</selectable>
                <selectable>
                  <ctr id="smf49" ctr-type="mgmt" pre=""></ctr>. enable/disable <selectables linebreak="yes">
                    <selectable>USB mass storage mode</selectable>
                    <selectable>USB data transfer without user authentication</selectable>
                    <selectable>USB data transfer without authentication of the connection system</selectable>
                  </selectables> (MDF Function 39) </selectable>
                <selectable>
                  <ctr id="smf50" ctr-type="mgmt" pre=""></ctr>. enable/disable backup of <selectables linebreak="yes">
                    <selectable>all applications</selectable>
                    <selectable>selected applications</selectable>
                    <selectable>selected groups of applications</selectable>
                    <selectable>configuration data</selectable>
                  </selectables> to <selectables>
                    <selectable>locally connected system</selectable>
                    <selectable>remote system</selectable>
                  </selectables> (MDF Function 40)</selectable> <selectable>
                    <ctr id="smf51" ctr-type="mgmt" pre=""></ctr>. enable/disable <selectables linebreak="yes">
                    <selectable>Hotspot functionality authenticated by <selectables>
                        <selectable>pre-shared key</selectable>
                        <selectable>passcode</selectable>
                        <selectable>no authentication</selectable>
                      </selectables>
                    </selectable>
                    <selectable>USB tethering authenticated by <selectables>
                        <selectable>pre-shared key</selectable>
                        <selectable>passcode</selectable>
                        <selectable>no authentication</selectable>
                      </selectables>
                    </selectable>
                  </selectables>(MDF Function 41) </selectable> <selectable>
                    <ctr id="smf52" ctr-type="mgmt" pre=""></ctr>. enable/disable location services:<h:br/>
                  <selectables linebreak="yes">
                    <selectable>across device</selectable>
                    <selectable>on a per-app basis</selectable>
                    <selectable>on a per-group of application processes basis</selectable>
                    <selectable>no other method</selectable>
                  </selectables>(MDF Function 22) </selectable>
                <selectable>
                  <ctr id="smf53" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for user unenrollment</selectable>
                <selectable>
                  <ctr id="smf54" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for the Always-On VPN protection across device (MDF Function 45)</selectable>
                <selectable>
                  <ctr id="smf55" ctr-type="mgmt" pre=""></ctr>. enable/disable policy for use of Biometric Authentication Factor (MDF Function 23)</selectable>
                <selectable>
                  <ctr id="smf56" ctr-type="mgmt" pre=""></ctr>. Connectivity timeout policy: <selectables linebreak="yes">
                    <selectable>allowed <selectables>
                        <selectable>number of missed reachability events</selectable>
                        <selectable>length of time without server connectivity</selectable>
                      </selectables>
                    </selectable>
                    <selectable>when server connectivity timeout is exceeded agent shall <selectables>
                        <selectable>disable user password</selectable>
                        <selectable>wipe device</selectable>
                      </selectables> and <selectables>
                        <selectable><assignable>other action</assignable></selectable>
                        <selectable>none</selectable>
                      </selectables>
                    </selectable>
                  </selectables>
                </selectable>
                <selectable><ctr id="smf57" ctr-type="mgmt" pre=""></ctr>. enable/disable multi-user modes</selectable>
                <selectable><ctr id="smf58" ctr-type="mgmt" pre=""></ctr>. enable/disable automatic updates of system software</selectable>
                <selectable><ctr id="smf59" ctr-type="mgmt" pre=""></ctr>. enable/disable removable media</selectable>
                <selectable>
                  <ctr id="smf60" ctr-type="mgmt" pre=""></ctr>. <assignable>list of other policies to be provided by the MD</assignable>, no other policies]. </selectable>
              </selectables></h:ul>
            </title>
            <note role="application"> This requirement captures all the configuration functionality the TSF provides the administrator to configure the MDM
		    Agent. This requirement is broken into two configurable areas: MDM Agent commands and MDM Agent policies. The ST author can add more
		    commands and configuration policies by completing the appropriate assignment statements.<h:br/><h:br/> 
              Function-specific Application Notes:<h:br/><h:br/> 
              Function-specific application notes reference Mobile Device Fundamentals (MDF) PP v3.1.<h:br/><h:br/> 
              Function <xref to="smf12"/> may be satisfied for the BYOD use case by application blacklisting and/or disabling. In the case of BYOD, an enterprise may not want to remove "personal" applications, thus for that use case disabling the application rather than removing it would allow the user to not lose any information they might have in the application.<h:br/><h:br/>
              Function <xref to="smf16"/> provides the MDM server to display an alert to the user of the mobile device.<h:br/><h:br/> 
              The audit records read according to Function <xref to="smf19"/> are to be transmitted to an external audit server according to FAU_STG_EXT.1. The MDM Server is not expected to retain those logs.<h:br/><h:br/> 
              Function <xref to="smf34"/> provides the ability to enable/disable policy for the list of protocols where the device acts as a server, such as a mobile hotspot.<h:br/><h:br/>  
              Function <xref to="smf56"/> corresponds to FPT_NET_EXT.1.1 in Agent. If the MDM Agent has not had a successful reachability event with the MDM Server in the amount of time specified in 'a', then the agent must perform the action selected in 'b'. It is feasible, but not required, that if multiple actions are selected in 'b', each action could be associated with a different timeout in 'a'. If function <xref to="smf56"/> is included in the ST, than FPT_NET_EXT.1.1 must be included in the Agent ST. </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to ensure that it describes each management function claimed. The evaluator shall examine the TSS to
		      ensure that it identifies the management functions implemented for each supported MDM Agent/platform, which are likely to be subsets of 
		      all of the management functions available to the administrator on the MDM Server. The evaluator shall examine the TSS to verify that any
		      differences between management functions and policies for each supported MDM Agent/platform are clearly indicated.<h:br/><h:br/>
		      The evaluator shall determine if the Mobile Device has been evaluated. If so, the evaluator shall examine the TSS to verify that it 
		      clearly identifies which management functions match the selections and assignments of the evaluated Mobile Device and which management 
		      functions were not evaluated.<h:br/><h:br/></TSS>
              <Tests>For each MDM Agent/platform listed as supported in the ST:<testlist>
                  <test>The evaluator shall verify the ability to command each MDM Agent functional capability and configure each MDM Agent policy listed above.</test>
                </testlist>
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
		
        <f-component cc-id="fmt_smf.1" iteration="SERVER_CONF_SERVER" name="Specification of Management Functions (Server Configuration of Server)">
          <f-element id="fmt-smf-1e1">
            <title><h:b>Refinement:</h:b> The TSF shall be capable of performing the following management functions: <h:ol type="a">
                <h:li>choose X.509v3 certificates for MDM Server use</h:li>
                <h:li>configure the <selectables>
                    <selectable>devices specified by <selectables>
                        <selectable>IMEI</selectable>
                        <selectable><assignable>a unique device ID</assignable></selectable>
                      </selectables></selectable>
                    <selectable>specific device models</selectable>
                    <selectable>a number of devices</selectable>
                    <selectable>specific time period</selectable>
                  </selectables> and <selectables>
                    <selectable><assignable>other features</assignable></selectable>
                    <selectable>no other features</selectable>
                  </selectables> allowed for enrollment</h:li> 
                  <h:li><selectables> 
                      <selectable><h:br/>1. allow the administrator to choose whether to accept the certificate when connection cannot be made to establish validity</selectable>                 
					<selectable><h:br/>2. configure the TOE unlock banner</selectable>
                    <selectable><h:br/>3. configure periodicity of the following commands to the agent: <assignable>list of commands</assignable></selectable>
                    <selectable><h:br/>4. configure the privacy-sensitive information that will and will not be collected from particular mobile devices</selectable>
                    <selectable><h:br/>5. configure the length of time the enrollment authenticator is valid</selectable>
                    <selectable><h:br/>6. configure the interaction between TOE components</selectable>
                    <selectable><h:br/>7. configure the cryptographic functionality</selectable>
                    <selectable><h:br/>8. <assignable>other management functions</assignable></selectable>
                    <selectable><h:br/>9. no other management functions</selectable>                    
                  </selectables></h:li>               
              </h:ol>
            </title>
            <note role="application"> This requirement captures all the configuration functionality in the MDM Server to configure 
			the underlying MDM Server. The ST author can add more commands and configuration policies by completing the assignment
			statement.<h:br/><h:br/>
              Function a can be met by relying on the platform to configure the certificates used by the MDM server, however, the 
			  MDM Server must allow the administrator to choose which certificate is used for a specific functionality. The 
			  selection in b corresponds to the selection in <xref to="fel-enr-limit"/>. The selection in c.1 includes a function 
			  that corresponds to the selection in <xref to="fel-x509-fail"/>. Function c.3 allows the administrator to configure
			  periodicity of assigned commands, for example "read audit logs kept by the Mobile Device". In this way the 
			  administrator can configure the MDM system to retrieve audit logs from the Mobile Device on a periodic, such as
			  daily, basis in order to ensure freshness of log data and to minimize loss of audit logs. Function c.4 allows the
			  administrator to configure the privacy-sensitive information that will and will not be collected from particular
			  mobile devices to handle BYOD environments where some information may not be appropriate to collect. Privacy
			  sensitive information may include items such as device physical location and lists of installed personal
			  applications, and would vary depending on the particular capabilities of the TOE and MDM agent. The TOE should
			  provide the capability to group enrolled devices into categories such as enterprise-owned and personal-owned and 
			  define the information that will be collected from devices in each category. Function c.5 corresponds to 
			  configuring the length of time the user authenticator for enrollment is valid in FMT_SAE_EXT.1. This function
			  must be included in the ST if and only if FMT_SAE_EXT.1 is included in the ST.<h:br/><h:br/>            
              For distributed TOEs the interaction between TOE components will be configurable (see FCO_CPC_EXT.1). Therefore,
			  the ST author includes the selection "Ability to configure the interaction between TOE components" for distributed 
			  TOEs. A simple example would be the change of communication protocol according to FPT_ITT.1/INTER_XFER. Another
			  example would be changing the management of a TOE component from direct remote administration to remote
			  administration through another TOE component. A more complex use case would be if the realization of an SFR is 
			  achieved through two or more TOE components and the responsibilities between the two or more components could 
			  be modified.<h:br/><h:br/>             
              For distributed TOEs that implement a registration channel (as described in <xref to="fel-cpc-func"/>), the ST
			  author uses the selection "configure the cryptographic functionality" in this SFR, and its corresponding mapping 
			  in the TSS, to describe the configuration of any cryptographic aspects of the registration channel that can be
			  modified by the operational environment in order to improve the channel security.              
            </note>
            <aactivity>
              <TSS> The evaluator shall examine the TSS to ensure that it describes each management function listed. For function c.4, the evaluator shall examine the TSS to ensure that it describes the privacy-sensitive information that the TOE has the capability to collect from enrolled mobile devices.<h:br/><h:br/> </TSS>
              <Guidance> The evaluator shall verify the AGD guidance includes detailed instructions of what options are available and how to configure each management functional capability listed.<h:br/><h:br/> </Guidance>
              <Tests> The tests of functions b, c.1, c.2, and c.5 are performed in conjunction with the use of the function. Test 3 also covers function c.4. The evaluator shall perform the following test: <testlist>
                <test>The evaluator shall configure the TSF authentication certificate(s) and verify that the correct certificate is used in established trusted connections (FPT_ITT.1/INTER_XFER, FPT_ITT.1/INTER_XFER_AGENT, FTP_ITC.1/INTER_XFER_IT, and FTP_TRP.1/TRUSTPATH_ENROLL).</test>
                  <test>(conditional) The evaluator shall configure the periodicity for the assigned list of commands to the agent for several configured time periods and shall verify that the MDM Server performs the commands schedule.</test>
                  <test>(conditional) The evaluator shall design and perform tests to demonstrate that the assigned function may be configured and that the intended behavior of the function is enacted by the MDM Server.</test>
                </testlist>
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Success or failure of function</audit-event-descr>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fmt_smf.1" iteration="MAS" name="Specification of Management Functions (MAS Server)" status="sel-based">
          <depends on-sel="mas"/>
          <f-element id="fmt-smf-1e1-mas">
            <title><h:b>Refinement:</h:b> The MAS Server shall be capable of performing the following management functions:
              <h:ol type="a">
                <h:li>Configure application access groups</h:li>
                <h:li>Download applications</h:li>
                <h:li>
                  <selectables>
                    <selectable><assignable>other MAS management functions</assignable></selectable>
                    <selectable>no other functions</selectable>
                  </selectables></h:li>
              </h:ol>
            </title>
            <note role="application">This requirement captures all the configuration functionality in the MAS Server to configure the underlying MAS Server. The ST author can add more commands and configuration policies by completing the assignment statement. <h:br/><h:br/>
              The MAS Server must be able to create groups to configure which applications a user can access based on which group they are in. If the MAS Server uses the groups defined by the MDM, then it must communicate with the MDM Server (if separate server) to determine which applications the user can access.
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to ensure that it describes each management function listed.<h:br/><h:br/>The evaluator shall examine the TSS to determine if the MAS Server creates its own groups or relies on the groups specified by the MDM Server.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains how to create and define user groups and how to specify which applications are accessible by which group.<h:br/><h:br/>
              The evaluator shall verify the AGD guidance includes detailed instructions of what options are available and how to configure each management functional capability listed.<h:br/><h:br/> </Guidance>
              <Tests>The evaluator shall ensure that the MAS client can only access the applications specified for the group they are enrolled in. The evaluator shall create a user group, making sure that the MAS client user is excluded from the group. Verify that an application accessible to that group cannot be accessed. The evaluator shall include the MAS client user in the group and assure that the application can be accessed.</Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fmt_smr.1" iteration="SECMAN_ROLES" name="Security Management Roles">
          <f-element id="fmt-smr-1e1-sr">
            <title><h:b>Refinement:</h:b> The TSF shall maintain the roles administrator, MD user, and <selectables>
              <selectable><assignable>additional authorized identified roles</assignable></selectable>
              <selectable>no additional roles</selectable>
            </selectables>.</title>
          </f-element>
          <f-element id="fel-smr-users-roles">
            <title>The TSF shall be able to associate users with roles.</title>
            <note role="application">It is envisioned that the MDM Server will be configured and maintained by different user roles. The assignment is used by the ST author to list the roles that are supported. At a minimum, one administrative role must be supported. If no additional roles are supported, then "no additional roles" is selected. The MD user role is used for enrollment of mobile devices to the MDM according to FIA_ENR_EXT.1.<h:br/><h:br/>              
              For distributed TOEs, not every TOE component is required to implement its own user management to fulfill this SFR. At least one component has to support authentication and identification of users according to FIA_UAU.1. For the other TOE components authentication can be realized through the use of a trusted channel (either according to FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT) from a component that supports the authentication of users according to FIA_UAU.1. The identification of users according to <xref to="fel-uau-func"/> and the association of users with roles according to <xref to="fel-smr-users-roles"/> is done through the components that support the authentication of users according to FIA_UAU.1.   
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to verify that it describes the administrator role and the powers granted to and limitations of the role.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall review the operational guidance to ensure that it contains instructions for administering the TOE and which 
				interfaces are supported.<h:br/><h:br/></Guidance>
              <Tests>In the course of performing the testing activities for the evaluation, the evaluator shall use all supported interfaces, although it is 
				not necessary to repeat each test involving an administrative action with each interface. The evaluator shall ensure, however, that each supported 
				method of administering the TOE that conforms to the requirements of this PP be tested; for instance, if the TOE can be administered through a local
				hardware interface or HTTPS then both methods of administration must be exercised during the evaluation team's test activities. </Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>   
		
        <f-component cc-id="fmt_smr.1" iteration="SECMAN_ROLES_MAS" name="Security Management Roles (MAS Server)" status="sel-based">
          <depends on-sel="mas"/>
          <f-element id="fmt-smr-1e1-srm">
            <title><h:b>Refinement:</h:b> The TSF shall additionally maintain the roles enrolled mobile devices, application access groups, and <assignable>additional authorized identified roles</assignable>.</title>
          </f-element>
          <f-element id="fmt-smr-1e2-srm">
            <title><h:b>Refinement:</h:b> The MAS Server shall be able to associate users with roles.</title>
            <note role="application">It is envisioned that the MAS Server will be configured and maintained by different user roles. The assignment is used by the ST author to list the roles that are supported. At a minimum, one administrative role must be supported. If no additional roles are supported, then "no additional roles" is stated. The MD user role is used for enrollment of mobile devices to the MAS according to FIA_ENR_EXT.1.</note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to verify that it describes the administrator role and the powers granted to and limitations of the role.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall review the operational guidance to ensure that it contains instructions for administering the TOE and which interfaces are supported.</Guidance>
              <Tests>In the course of performing the testing activities for the evaluation, the evaluator shall use all supported interfaces, although it is not necessary to repeat each test involving an administrative action with each interface. The evaluator shall ensure, however, that each supported method of administering the TOE that conforms to the requirements of this PP be tested; for instance, if the TOE can be administered through a local hardware interface or HTTPS then both methods of administration must be exercised during the evaluation team's test activities.</Tests>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>      
      </section>    
	  
      <section id="fpt" title="Protection of the TSF (FPT)">
	  
        <f-component cc-id="fpt_api_ext.1" name="Use of Supported Services and APIs">
          <f-element id="fpt-api-ext-1e1">
            <title>The TSF shall use only documented platform APIs.</title>
            <note role="application">
              This requirement applies to the APIs used when "invoke platform provided functionality" is selected in an SFR. The definition of <h:i>documented</h:i>
			  may vary depending upon whether the MDM software is provided by a third party (who relies upon documented platform APIs) or by a platform vendor who 
			  may be able to guarantee support for platform APIs.
            </note>
            <aactivity>
              <TSS>The evaluator shall verify that the TSS lists the platform APIs used by the MDM software. The evaluator shall then compare the list with the 
			  supported APIs (available through e.g. developer accounts, platform developer groups) and ensure that all APIs listed in the TSS are supported.</TSS>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component> 
		
        <f-component cc-id="fpt_lib_ext.1" name="Use of Third Party Libraries">
          <f-element id="fpt-lib-ext-1e1">
            <title> The MDM software shall be packaged with only
              <assignable>list of third-party libraries</assignable>. 
            </title>
            <note role="application"> 
              This requirement applies to libraries used when "implement functionality" is selected in an SFR. The intention of this requirement is for the evaluator to document which software libraries the MDM software is including in case vulnerabilities are later discovered with those libraries.
            </note>
            <aactivity> 
              <TSS> The evaluator shall verify that the TSS lists the libraries used by the MDM software. The evaluator shall verify that libraries found to be packaged with or employed by the MDM software are limited to those in the assignment.</TSS>
            </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>   
		
        <f-component cc-id="fpt_itt.1" name="Internal TOE TSF Data Transfer" status="sel-based" iteration="INTER_XFER">
          <depends on-sel="ITC_DISTRIBUTED_TOE"/>
          <f-element id="fel-interxfer">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables linebreak="yes">
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="ITT1_IPSEC_INVOKE">IPsec</selectable>
                <selectable id="ITT1_TLS_INVOKE">mutually authenticated TLS</selectable>
                <selectable id="ITT1_DTLS_INVOKE">mutually authenticated DTLS</selectable>
                <selectable id="ITT1_HTTPS_INVOKE">HTTPS</selectable>
                <selectable id="ITT1_SSH_INVOKE">SSH</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="ITT1_IPSEC_IMPLEMENT">IPsec as defined in the PP-Module for VPN Client</selectable>
                <selectable id="ITT1_TLS_IMPLEMENT">mutually authenticated TLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITT1_DTLS_IMPLEMENT">mutually authenticated DTLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITT1_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
                <selectable id="ITT1_SSH_IMPLEMENT">SSH as defined in the Extended Package for Secure Shell</selectable>
              </selectables></selectable></selectables> to protect all data from [disclosure and modification] when it is transferred between separate parts of the TOE.</title>
            <note role="application">This requirement ensures all communications between components of a distributed TOE are protected through the use of an encrypted communications channel. The data passed in this trusted communication channel are encrypted as defined in the protocol chosen in the second selection.<h:br/><h:br/> 
              The trusted channel uses secure protocols that preserve the confidentiality and integrity of MDM communications. The ST author chooses the mechanism or mechanisms supported by the TOE. To support mutual authentication FIA_X509_EXT.1/CERTVAL_SEL should be included in the ST. This channel may also be used as the registration channel for the registration process, as described in section 3.1 and <xref to="fel-cpc-func"/>.<h:br/><h:br/>              
              If "IPsec as defined in the PP-Module for VPN Client" is selected, the TSF must claim conformance to a PP-Configuration that includes the VPN Client PP-Module.<h:br/><h:br/>
              If the ST author selects "SSH as defined in the Extended Package for Secure Shell", the TSF must be validated against the EP for Secure Shell with the MDM PP. It should be noted that due to constraints imposed by this PP that sha1 cannot be used.<h:br/><h:br/>
              If the ST author selects "mutually authenticated TLS as defined in the Package for Transport Layer Security" or "mutually authenticated DTLS as defined in the Package for Transport Layer Security", the TSF must be validated against requirements from the Package for Transport Layer Security, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>either TLS or DTLS is selected depending on the selection made in </h:li>
                    <h:li>either client or server is selected as appropriate</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSC_EXT.1.1 or FCS_TLSS_EXT.1.1 (as appropriate):
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                    <h:li>mutual authentication must be selected</h:li>
                  </h:ul>
                  </h:li>
              </h:ul>
             Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided services. </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the
                methods and protocols used to protect distributed TOE components
                are described. The evaluator shall also confirm that all protocols listed in the
                TSS in support of TOE administration are
                consistent with those specified in the requirement, and are included in the
                requirements in the ST.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains
                instructions for establishing the communication paths for each supported
                method.<h:br/><h:br/></Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall ensure that communications using each specified (in the
                    operational guidance) communication method is tested during the course of the
                    evaluation, setting up the connections as described in the operational guidance
                    and ensuring that communication is successful.</test>
                  <test>The evaluator shall ensure, for each method of communication, the channel
                    data is not sent in plaintext.</test>
                </testlist> Further evaluation activities are associated with the specific protocols.
	      </Tests>
              </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
				<audit-event-info>Identity of initiator and recipient</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fpt_itt.1" iteration="INTER_XFER_AGENT" name="Internal TOE TSF Data Transfer (MDM Agent)" status="sel-based">
          <depends on-sel="ITC_AgentInTOE"/>
          <f-element id="fel-interxfer-agent">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="ITT2_TLS_INVOKE">mutually authenticated TLS</selectable>                
                <selectable id="ITT2_DTLS_INVOKE">mutually authenticated DTLS</selectable>
                <selectable id="ITT2_HTTPS_INVOKE">HTTPS</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="ITT2_TLS_IMPLEMENT">mutually authenticated TLS as defined in the Package for Transport Layer Security</selectable>                
                <selectable id="ITT2_DTLS_IMPLEMENT">mutually authenticated DTLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITT2_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
              </selectables></selectable></selectables> to protect all data from [disclosure and modification] when it is transferred between the TSF and MDM Agent.</title>
            <note role="application">This requirement ensures all communications between the TSF and MDM Agent are protected through the use of an encrypted communications channel. The data passed in this trusted communication channel are encrypted as defined in the protocol chosen in the second selection.<h:br/><h:br/> 
              The trusted channel uses secure protocols that preserve the confidentiality and integrity of MDM communications. The ST author chooses the mechanism or mechanisms supported by the TOE. To support mutual authentication FIA_X509_EXT.1/CERTVAL_MAN should be included in the ST. This channel may also be used as the registration channel for the registration process, as described in section 3.1 and <xref to="fel-cpc-func"/>.<h:br/><h:br/>                           
              If the ST author selects "mutually authenticated TLS as defined in the Package for Transport Layer Security" or "mutually authenticated DTLS as defined in the Package for Transport Layer Security", the TSF must be validated against requirements from the Package for Transport Layer Security, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>either TLS or DTLS is selected depending on the selection made in FPT_ITT.1.1(2)</h:li>
                    <h:li>either client or server is selected as appropriate</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSC_EXT.1.1 or FCS_TLSS_EXT.1.1 (as appropriate):
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                    <h:li>mutual authentication must be selected</h:li>
                  </h:ul>
                </h:li>
              </h:ul>
              Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided services. </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the
              methods and protocols used to protect distributed TOE components
              are described. The evaluator shall also confirm that all protocols listed in the
              TSS in support of TOE administration are
              consistent with those specified in the requirement, and are included in the
              requirements in the ST.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains
              instructions for establishing the communication paths for each supported
              method.<h:br/><h:br/></Guidance>
              <Tests>
              <testlist>
                <test>The evaluator shall ensure that communications using each specified (in the
                  operational guidance) communication method is tested during the course of the
                  evaluation, setting up the connections as described in the operational guidance
                  and ensuring that communication is successful.</test>
                <test>The evaluator shall ensure, for each method of communication, the channel
                  data is not sent in plaintext.</test>
              </testlist> Further evaluation activities are associated with the specific protocols.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
				<audit-event-info>Identity of initiator and recipient</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="fpt_tst_ext.1" name="Functionality Testing">
          <f-element id="fpt-tst-ext-1e1">
            <title>The TSF shall run a suite of self tests during initial start-up (power on) to demonstrate correct operation of the TSF.</title>
          </f-element>
          <f-element id="fel-tst-ext-impl">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide the capability to verify the integrity of stored TSF executable code when it is loaded for execution through the use of the 
              <selectables>
                <selectable>TSF</selectable>
                <selectable>TOE platform</selectable>
              </selectables>-provided cryptographic services.</title>
            <note role="application">While the TOE is typically a software package running in the IT Environment, it is still capable of performing the
		    self-test activities required above. It should be understood, however, that there is a significant dependency on the host environment 
		    in assessing the assurance provided by the tests mentioned above (meaning that if the host environment is compromised, the self-tests will 
		    not be meaningful).<h:br/><h:br/>           
              For distributed TOEs, all TOE components (except the MDM Agent components) have to perform self-tests. This does not necessarily mean that each 
		    TOE component has to carry out the same self-tests: the ST describes the applicability of the selection (i.e. when self-tests are run) and
		    the final assignment (i.e. which self-tests are carried out) to each TOE component.
            </note>
            <aactivity>
              <TSS>
		      If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each 
		      supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented
		      by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>         
              If "implement functionality" is selected, the evaluator shall examine the TSS to ensure that it details the self-tests that are run by the TSF on
		      start-up; this description should include an outline of what the tests are actually doing (e.g., rather than saying "memory is tested", a 
		      description similar to "memory is tested by writing a value to each memory location and reading it back to ensure it is identical to what
		      was written" shall be used). The evaluator shall ensure that the TSS makes an argument that the tests are sufficient to demonstrate that
		      the TSF is operating correctly.<h:br/><h:br/> 
              The evaluator shall examine the TSS to ensure that it describes how to verify the integrity of stored TSF executable code when it is loaded for
		      execution. The evaluator shall ensure that the TSS makes an argument that the tests are sufficient to demonstrate that the integrity of 
		      stored TSF executable code has not been compromised. The evaluator also ensures that the TSS (or the operational guidance) describes the
		      actions that take place for successful (e.g. hash verified) and unsuccessful e.g., hash not verified) cases.<h:br/><h:br/>
		</TSS>
              <Tests>The evaluator shall perform the following tests:
              <testlist>
                <test>The evaluator performs the integrity check on a known good TSF executable and verifies that the check is successful.</test>
                <test>The evaluator modifies the TSF executable, performs the integrity check on the modified TSF executable and verifies that the check fails.</test>
              </testlist></Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation of self-test</audit-event-descr>
			</audit-event>
        	<audit-event>
				<audit-event-descr>Failure of self-test</audit-event-descr>
				<audit-event-info>Algorithm that caused failure</audit-event-info>
			</audit-event>
        	<audit-event>
				<audit-event-descr>Detected integrity violation</audit-event-descr>
				<audit-event-info>The TSF code file that caused the integrity violation</audit-event-info>
			</audit-event>
		</f-component> 
		
        <f-component cc-id="fpt_tud_ext.1" name="Trusted Update">
          <f-element id="fpt-tud-ext-1e1">
            <title>The TSF shall provide Authorized Administrators the ability to query the current version of the software.</title>
            <note role="application">
              For a distributed TOE, the method of determining the installed versions on each component of the TOE is described in the operational guidance.
		    In the requirement, "software" refers to the component of the distributed TOE to which the requirement is being applied. 
            </note>
            <aactivity>
              <Guidance>The evaluator shall ensure that the administrator guidance includes instructions for determining the current version of the TOE.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall query the TSF for the current version of the software according to the AGD guidance and shall verify that the current version matches that of the documented and installed version.</Tests>
            </aactivity>
          </f-element>
          <f-element id="fpt-tud-ext-1e2">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide Authorized Administrators the ability to initiate updates to TSF software.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-tud-func">
            <title>The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide a means to verify software updates to the TSF using a digital signature mechanism prior to installing those updates.</title>
            <note role="application">The software on the TSF will occasionally need to be updated. This requirement is intended to ensure that the TSF only installs updates provided by the vendor, as updates provided by another source may contain malicious code. If the server is not an appliance, the update will be verified by the platform on which the server software runs. If the server is an appliance, the update must be verified by the TSF software or hardware.<h:br/><h:br/>           
              For distributed TOEs all TOE components must support Trusted Update. The verification of the signature or hash on the update must either be done by each TOE component itself (signature verification) or for each TOE component (hash verification).<h:br/><h:br/>             
              Updating a distributed TOE might lead to the situation where different TOE components are running different software versions. Depending on the differences between the different software versions the impact of a mixture of different software versions might be no problem at all or critical to the proper functioning of the TOE. The TSS must detail the mechanisms that support the continuous proper functioning of the TOE during trusted update of distributed TOEs.
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
              If "implement functionality" is selected, the evaluator shall examine the TSS and verify that it describes the standards by which the updates are digitally signed and how the signature verification process is implemented.<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall examine the AGD guidance to verify that it describes how to query the current version of the TSF software, how to initiate updates and how to check the integrity of updates prior to installation.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall perform the following tests: <testlist>
                <test>The evaluator shall attempt to initiate an update digitally signed by the vendor and verify that the update is successfully installed.</test>
                <test>The evaluator shall attempt to install an update not digitally signed by the vendor and verify that either the signature can be checked (allowing the update to be aborted) or the update is not installed.</test>
              </testlist>
	      </Tests>
            </aactivity>
          </f-element>       
        	<audit-event>
				<audit-event-descr>Success or failure of signature verification</audit-event-descr>
			</audit-event>
		</f-component>    
      </section>  
	  
      <section id="fta" title="TOE Access (FTA)">
	  
        <f-component cc-id="fta_tab.1" name="Default TOE Access Banners" status="optional">
          <f-element id="fta-tab-1e1">
            <title><h:b>Refinement:</h:b> Before establishing a user session, the TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to display an Administrator-specified advisory notice and consent warning message regarding use of the TOE.</title>
            <note role="application">
              This requirement is to ensure that an advisory notice and/or consent banner is presented to the user on start-up or unlock of the TSF.
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
              If "implement functionality" is selected, the TSS shall describe when the banner is displayed.<h:br/><h:br/></TSS>
              <Guidance>The evaluator follows the operational guidance to configure a notice and consent warning message.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall also perform the following test: The evaluator shall start up or unlock the TSF. The evaluator shall verify that the notice and consent warning message is displayed in each instance described in the TSS.</Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Change in banner setting</audit-event-descr>
			</audit-event>
		</f-component>	
      </section>  
	  
      <section id="ftp" title="Trusted Path/Channels (FTP)">
        <f-component cc-id="ftp_itc_ext.1" name="Trusted Channel" > <!-- SFR that will specify if Agent is in the TOE and/or if TOE is distributed-->
          <f-element id="fel-itc-ext">
            <title>The TSF shall provide a communication channel between itself and <selectables linebreak="yes">              
              <selectable id="ITC_AgentInTOE">an MDM Agent that is internal to the TOE</selectable>
              <selectable id="ITC_AgentOutTOE">an MDM Agent that is external to the TOE</selectable>
              <selectable id="ITC_DISTRIBUTED_TOE">other components comprising the distributed TOE</selectable>
            </selectables>
             that is logically distinct from other communication channels, as specified in <selectables>
              <selectable id="ITC_DISTRIBUTED_TOE_ITT1">FPT_ITT.1/INTER_XFER"/></selectable>
               <selectable id="ITC_AgentInTOE_ITT2">FPT_ITT.1/INTER_XFER_AGENT</selectable>
              <selectable id="ITC_AgentOutTOE_ITC">FTP_ITC.1/INTER_TSF_XFER_AGENT</selectable>
            </selectables>.</title>
            <note role="Application">
              This SFR describes the communication channels between the MDM Server and an Agent that may or may not be in the TOE, and optionally separate
			  components comprising a distributed TOE, to determine which selection-based SFRs will need to be included in the ST. <h:br/><h:br/>            
              If the TOE includes an MDM Agent, then the communication channel between the Agent and TSF is internal to the TOE and thus "an MDM Agent that is
			  internal to the TOE" must be selected in the first selection. Additionally FPT_ITT.1/INTER_XFER_AGENT must be selected in the second selection and
			  FPT_ITT.1/INTER_XFER_AGENT must be included in the ST. <h:br/><h:br/>         
              If the TOE interoperates with an evaluated MDM Agent built into a mobile device (i.e., the TOE does not include an MDM Agent), the communication channel 
			  between the Agent and TSF is external to the TOE and thus "an MDM Agent that is external to the TOE" must be selected in the first selection.
			  Additionally FTP_ITC.1/INTER_TSF_XFER_AGENT must be selected in the second selection and FTP_ITC.1/INTER_TSF_XFER_AGENT must be included in the ST. <h:br/><h:br/> 
              If "other components comprising the distributed TOE" is selected in the first selection then FPT_ITT.1/INTER_XFER must be selected in the second
			  selection. FPT_ITT.1/INTER_XFER must be included in the ST for all internal channels used to transfer TSF data between TOE components other than an 
			  MDM Agent.
            </note>
              <aactivity>
                <TSS>The evaluator shall ensure that the TSS contains whether the MDM Server communication channel is internal or external to the TOE. <h:br/><h:br/> </TSS>
                <Tests>
                This testing can be completed in conjunction with the testing for FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT, FTP_ITC.1/INTER_TSF_XFER_AGENT or FTP_ITC.1(3).               
		</Tests>
              </aactivity>
          </f-element>
        	<audit-event/>
		</f-component>
		
        <f-component cc-id="ftp_itc.1" iteration="INTER_XFER_IT" name="Inter-TSF Trusted Channel (Authorized IT Entities)"> 
          <f-element id="fel-inter-xfer-it"> 
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="ITC1_IPSEC_INVOKE">IPsec</selectable>
                <selectable id="ITC1_SSH_INVOKE">SSH</selectable>
                <selectable id="ITC1_TLS_INVOKE">mutually authenticated TLS</selectable>
                <selectable id="ITC1_DTLS_INVOKE">mutually authenticated DTLS</selectable>
                <selectable id="ITC1_HTTPS_INVOKE">HTTPS</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="ITC1_IPSEC_IMPLEMENT">IPsec as defined in the PP-Module for VPN Client</selectable>
                <selectable id="ITC1_SSH_IMPLEMENT">SSH as defined in the Extended Package for Secure Shell</selectable>
                <selectable id="ITC1_TLS_IMPLEMENT">mutually authenticated TLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITC1_DTLS_IMPLEMENT">mutually authenticated DTLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITC1_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
              </selectables></selectable></selectables> to provide a trusted communication channel between itself and authorized IT entities supporting the following capabilities: audit server,
              <selectables>
                <selectable>authentication server</selectable>
                <selectable><assignable>other capabilities</assignable></selectable>
              </selectables> that is logically distinct from other communication channels and provides assured identification of its end points and protection of the channel data from modification and disclosure.</title>
            <note role="application">The intent of the mandatory portion of the above requirement is to use the cryptographic 
              protocols identified in the requirement to establish and maintain a trusted channel with authorized IT entities 
              that the TOE interacts with to perform its functions.<h:br/><h:br/> 
              Protection (by one of the listed protocols) is required at least for communications with the server that collects 
              the audit information. If it communicates with an authentication server (e.g., RADIUS), then the ST 
              author chooses "authentication server" in FTP_ITC.1.1/INTER_XFER_IT and this connection must be protected 
              by one of the listed protocols. If other authorized IT entities (e.g., NTP server) are protected, the 
              ST author makes the appropriate assignments (for those entities) and selections (for the protocols 
              that are used to protect those connections).<h:br/><h:br/> 
              To summarize, the connection to an external audit collection server is required to be protected by one of the listed 
              protocols. If an external authentication server is supported, then it is required to protect that connection with one 
              of the listed protocols. For any other external server, external communications are not required to be protected, but 
              if protection is claimed, then it must be protected with one of the identified protocols.<h:br/><h:br/> 
              
              For communications with any authorized IT entities outside of the TOE, the MDM Server should still 
              be able to support mutual authentication. There are no requirements levied on the external entities, but the MDM Server 
              should be able to support mutual authentication. This way if the non-TOE authorized 
              entity does support mutual authentication, the MDM Server is in a position to make use of that.<h:br/><h:br/>
              
              The trusted channel uses IPsec, TLS, DTLS, or HTTPS as the protocol that preserves the confidentiality and integrity of MDM communications. The ST 
			  author chooses the mechanism or mechanisms supported by the TOE.<h:br/><h:br/>
              If "IPsec as defined in the PP-Module for VPN Client" is selected, the TSF must claim conformance to a PP-Configuration that includes the VPN Client 
			  PP-Module.<h:br/><h:br/>
              If the ST author selects "SSH as defined in the Extended Package for Secure Shell", the TSF must be validated against the EP for Secure Shell with 
			  the MDM PP. It should be noted that due to constraints imposed by this PP that sha1 cannot be used.<h:br/><h:br/>
              If the ST author selects "mutually authenticated TLS as defined in the Package for Transport Layer Security" or "mutually authenticated DTLS as 
			  defined in the Package for Transport Layer Security", the TSF must be validated against requirements from the Package for Transport Layer Security,
			  with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>either TLS or DTLS is selected depending on the selection made in FTP_ITC.1.1/INTER_XFER_IT</h:li>
                    <h:li>either client or server is selected as appropriate</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSC_EXT.1.1 or FCS_TLSS_EXT.1.1 (as appropriate):
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                    <h:li>mutual authentication must be selected</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_DTLSC_EXT.1.1 or FCS_DTLSS_EXT.1.1 (as appropriate):
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                    <h:li>mutual authentication must be selected</h:li>
                  </h:ul>
                </h:li>
              </h:ul> 
              Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided 
              services.<h:br/><h:br/> 
              The requirement implies that not only are communications protected when they are initially established, but 
              also on resumption after an outage. It may be the case that some part of the TOE setup involves 
              manually setting up tunnels to protect other communication, and if after an outage the TOE attempts 
              to re-establish the communication automatically with (the necessary) manual intervention, there may be a window created 
              where an attacker might be able to gain critical information or compromise a connection.<h:br/><h:br/>
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-itc-1e2-ixi">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to permit the MDM Server or other authorized IT entities to initiate communication via the trusted channel.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-itc-init">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to initiate communication via the trusted channel for <assignable>list of services for which the TSF is able to initiate communications</assignable>.</title>
            <note role="application">While there are no requirements on the party initiating the
              communication, the ST author lists in the assignment for <xref to="fel-itc-init"/>
              the services for which the TOE can initiate the communication with
              the authorized IT entity.</note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the
                methods of communication with authorized IT entities are indicated, along with how
                those communications are protected.<h:br/><h:br/> 
                If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
                to verify that it describes (for each supported platform) 
                how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
                the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
                of this evaluation activity).<h:br/><h:br/>
		</TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains
                instructions for configuring the communication channel between the MDM Server and authorized IT entities for each supported
		method.<h:br/><h:br/>
		</Guidance>
              <Tests>
                <testlist>
                  <test>The evaluators shall ensure that communications using each specified (in the
                    operational guidance) communication method is tested during the course of the
                    evaluation, setting up the connections as described in the operational guidance
                    and ensuring that communication is successful.</test>
                  <test>The evaluator shall ensure, for each method of communication, the channel
                    data is not sent in plaintext.</test>
                  <!--will the protocol analyzer be able to be used/see traffic. Will there be insight to platform communications?-->
                  <test>The evaluator shall ensure, for each communication channel with the MDM Server, that a protocol analyzer identifies the traffic as the
                    protocol under testing.</test>
                </testlist> Further evaluation activities are associated with the specific
                protocols.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
				<audit-event-info>Non-TOE endpoint of connection</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="ftp_itc.1" iteration="INTER_TSF_XFER_AGENT" name="Inter-TSF Trusted Channel (MDM Agent)" status="sel-based">
          <depends on-sel="AgentOutTOE_ftp"/>
          <f-element id="inter-tsf-xfer-agent">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="ITC2_TLS_INVOKE">mutually authenticated TLS</selectable> 
                <selectable id="ITC2_DTLS_INVOKE">mutually authenticated DTLS</selectable>
                <selectable id="ITC2_HTTPS_INVOKE">HTTPS</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="ITC2_TLS_IMPLEMENT">mutually authenticated TLS as defined in the Package for Transport Layer Security</selectable> 
                <selectable id="ITC2_DTLS_IMPLEMENT">mutually authenticated DTLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="ITC2_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
              </selectables></selectable></selectables> to provide a trusted communication channel between itself (as a server) and the MDM Agent that is logically distinct from other communication channels, provides assured identification of its end points, protects channel data from disclosure, and detects modification of the channel data.</title>
            <note role="application"> The intent of the mandatory portion of the above requirement is to use the cryptographic protocols identified in the requirement to establish and maintain a trusted channel between the TOE and the MDM Agent. If the TOE includes a separate MAS Server, this requirement also addresses the communication between the MAS Server and the MDM Agent. <!-- Craig: You had the previous sentence commented out, but the MAS Server will use (2) for comms with Agent--> Only TLS, DTLS, or HTTPS are used in this trusted channel.<h:br/><h:br/> 
              This requirement is to ensure that the transmission of any audit
              logs, mobile device information data (software version, hardware model, and
              application versions), and configuration data collected by the MDM
              Agent and sent from the MDM Agent to the MDM
              Server, when commanded, or at configurable intervals, is properly protected. This
              trusted channel also protects any commands and policies sent by the MDM Server to the MDM Agent. Either the 
              MDM Agent or the MDM Server is able to initiate the
              connection.<h:br/><h:br/> 
              
              For TLS connections between the MDM Server and Agent, the MDM Server is the Server side of the TLS connection, 
              therefore it is appropriate to include the selection-based FCS_TLSS SFRs in the ST, not FCS_TLSC SFRs. With respect 
              to mutual authentication, in cases where the Agent is outside of the TOE, it should be verified 
              that the server can support mutual authentication, meaning that the server includes support for client-side certificates 
              for TLS mutual authentication post-enrollment. However, the client side is not evaluated since the agent is not in 
              the TOE.<h:br/><h:br/>
              
              This trusted channel protects the connection between an enrolled MDM Agent and the MDM Server. FTP_TRP.1/TRUSTPATH_ENROLL provides a trusted channel to protect the connection between an unenrolled MDM Agent and the MDM Server during the enrollment operation. <h:br/><h:br/> 
              The trusted channel uses TLS, DTLS, or HTTPS as the protocol that preserves the confidentiality and integrity of MDM communications. The ST author chooses the mechanism or mechanisms supported by the TOE.<h:br/><h:br/>
              If the ST author selects "mutually authenticated TLS as defined in the Package for Transport Layer Security" or "mutually authenticated DTLS as defined in the Package for Transport Layer Security", the TSF must be validated against requirements from the Package for Transport Layer Security, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>either TLS or DTLS is selected depending on the selection made in FTP_ITC.1.1/INTER_TSF_XFER_AGENT</h:li>
                    <h:li>server must be selected</h:li> 
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSS_EXT.1.1:
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                    <h:li>mutual authentication must be selected</h:li>
                  </h:ul>
                </h:li>
              </h:ul> 
              Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided services.<h:br/><h:br/> 
              The requirement implies that not only are communications protected when they are initially established, 
              but also on resumption after an outage. It may be the case that some part of the TOE setup 
              involves manually setting up tunnels to protect other communication, and if after an outage the TOE 
              attempts to re-establish the communication automatically with (the necessary) manual intervention, there may be a 
              window created where an attacker might be able to gain critical information or compromise a connection.<h:br/><h:br/>
            </note>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-itc-1e2-ixia">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to permit the TSF and MDM Agent to initiate communication via the trusted channel.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-itc-1e3-ixia"> 
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to initiate communication via the trusted channel for all communication between the TSF and the 
                MDM Agent </title>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the
                methods of Agent-Server communication are indicated, along with how those
                communications are protected. The evaluator shall also confirm that all protocols
                listed in the TSS in support of remote TOE
                administration are consistent with those specified in the requirement, and are
                included in the requirements in the ST.<h:br/><h:br/>
              
                If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
                to verify that it describes (for each supported platform) 
                how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
                the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
                of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains
                instructions for configuring the communication channel between the 
                MDM Agent and the MDM Server for each supported
		method.<h:br/><h:br/>
		</Guidance>
              <Tests>
                <testlist>
                  <test>The evaluators shall ensure that communications using each specified (in the
                    operational guidance) Agent-Server communication method is tested during the
                    course of the evaluation, setting up the connections as described in the
                    operational guidance and ensuring that communication is successful.</test>
                  <test>The evaluator shall ensure, for each method of Agent-Server communication,
                    the channel data is not sent in plaintext.</test>
                  <test>The evaluator shall ensure, for each communication channel with the 
                    MDM Server, that a protocol analyzer identifies the traffic as the
                    protocol under testing.</test>
                    </testlist> Further evaluation activities are associated with the specific protocols.
	      </Tests>
              </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
				<audit-event-info>Non-TOE endpoint of connection</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="ftp_trp.1" iteration="TRUSTPATH_REM_ADMIN" name="Trusted Path (for Remote Administration)">
          <f-element id="trustpath-rem-admin">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables linebreak="yes">
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="TRP1_IPSEC_INVOKE">IPsec</selectable>
                <selectable id="TRP1_TLS_INVOKE">TLS</selectable>
                <selectable id="TRP1_HTTPS_INVOKE">HTTPS</selectable>
                <selectable id="TRP1_SSH_INVOKE">SSH</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="TRP1_IPSEC_IMPLEMENT">IPsec as defined in the PP-Module for VPN Client</selectable>
                <selectable id="TRP1_TLS_IMPLEMENT">TLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="TRP1_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
                <selectable id="TRP1_SSH_IMPLEMENT">SSH as defined in the Extended Package for Secure Shell</selectable>
              </selectables></selectable></selectables> to provide a trusted communication path between itself as a <selectables>
                <selectable>server</selectable>
                <selectable>peer</selectable>
              </selectables> and remote administrators that is logically distinct from other communication paths and provides assured identification of its endpoints and protection of the communicated data from [modification, disclosure].</title> 
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how 
              this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-trp-1e2-tra">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to permit remote administrators to initiate communication via the trusted path.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how 
              this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-trp-1e3-tra">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to require the use of the trusted path for [all remote administration actions].</title>
            <note role="application">This requirement ensures that authorized remote administrators initiate all 
              communication with the TOE via a trusted path, and that all communications with 
              the TOE by remote administrators is performed over this path. The data passed in this trusted 
              communication channel are encrypted as defined in the protocol chosen in the first selection. The ST 
              author chooses the mechanism or mechanisms supported by the TOE.<h:br/><h:br/>
              If "IPsec as defined in the PP-Module for VPN Client" is selected, the TSF must claim conformance to a PP-Configuration that includes the VPN Client PP-Module.<h:br/><h:br/>              
              If the ST author selects "SSH as defined in the Extended Package for Secure Shell", the TSF must be validated against the EP for Secure Shell with the MDM PP. It should be noted that due to constraints imposed by this PP that sha1 cannot be used.<h:br/><h:br/>
              If the ST author selects "TLS as defined in the Package for Transport Layer Security" the TSF must be validated against requirements from the Package for Transport Layer Security, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>TLS shall be selected</h:li>
                    <h:li>server shall be selected</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSS_EXT.1.1:
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                  </h:ul>
                </h:li>
            </h:ul>
            Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided services. <h:br/><h:br/>
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the methods of remote TOE administration are indicated, along with how those communications are protected. The evaluator shall also confirm that all protocols listed in the TSS in support of TOE administration are consistent with those specified in the requirement, and are included in the requirements in the ST.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains instructions for establishing the remote administrative sessions for each supported method.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall also perform the following tests: <testlist>
                  <test>The evaluators shall ensure that communications using each specified (in the operational guidance) remote administration method is tested during the course of the evaluation, setting up the connections as described in the operational guidance and ensuring that communication is successful.</test>
                  <test>For each method of remote administration supported, the evaluator shall follow the operational guidance to ensure that there is no available interface that can be used by a remote user to establish remote administrative sessions without invoking the trusted path.</test>
                  <test>The evaluator shall ensure, for each method of remote administration, the channel data is not sent in plaintext.</test>
                  </testlist> Further evaluation activities are associated with the specific protocols.
		  </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
				<audit-event-info>Identity of administrator</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="ftp_trp.1" iteration="TRUSTPATH_ENROLL" name="Trusted Path (for Enrollment)">
          <f-element id="trustpath-enroll">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality to use <selectables linebreak="yes">
                <selectable id="TRP2_TLS_INVOKE">TLS</selectable>
                <selectable id="TRP2_HTTPS_INVOKE">HTTPS</selectable>
              </selectables></selectable>
              <selectable>implement functionality using <selectables linebreak="yes">
                <selectable id="TRP2_TLS_IMPLEMENT">TLS as defined in the Package for Transport Layer Security</selectable>
                <selectable id="TRP2_HTTPS_IMPLEMENT">HTTPS in accordance with FCS_HTTPS_EXT.1</selectable>
              </selectables></selectable>
            </selectables> to provide a trusted communication path between itself (as a server) and MD users that is logically distinct 
              from other communication paths and provides assured identification of its endpoints and protection of the 
              communicated data from disclosure and detection of modification of the communicated data from 
              [modification, disclosure]. </title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
            </TSS></aactivity>
          </f-element>
          <f-element id="ftp-trp-1e2-te">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to permit MD users to initiate communication via the trusted path.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/>
            </TSS></aactivity>
          </f-element>
          <f-element id="ftp-trp-1e3-te">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
              </selectables> to require the use of the trusted path for [all MD user actions].</title>
            <note role="application">This requirement ensures that authorized MD users initiate all communication with 
              the TOE via a trusted path, and that all communications with the TOE by 
              MD users is performed over this path. The purpose of this connection is for enrollment by the MD user. The 
              data passed in this trusted communication channel are encrypted as defined in the protocol chosen in the first 
              selection. The ST author chooses the mechanism or mechanisms supported by the 
              TOE.<h:br/><h:br/>
              If the ST author selects "TLS as defined in the Package for Transport Layer Security" the TSF must be validated against requirements from the Package for Transport Layer Security, with the following selections made:
              <h:ul>
                <h:li>FCS_TLS_EXT.1: 
                  <h:ul>
                    <h:li>TLS must be selected</h:li>
                    <h:li>server must be selected</h:li>
                  </h:ul>
                </h:li>
                <h:li>FCS_TLSS_EXT.1.1:
                  <h:ul>
                    <h:li>The cipher suites selected must correspond with the algorithms and hash functions allowed in FCS_COP.1.</h:li>
                  </h:ul>
                </h:li>
              </h:ul>
              Protocol, RBG, Certificate validation, algorithm, and similar services may be met with platform provided services. <h:br/><h:br/>
              </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the methods of remote enrollment are indicated, along with how those communications are protected. The evaluator shall also confirm that all protocols listed in the TSS in support of enrollment are consistent with those specified in the requirement, and are included in the requirements in the ST.<h:br/><h:br/>
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains instructions for establishing the enrollment sessions for each supported method.<h:br/><h:br/></Guidance>
              <Tests>For each MDM Agent/platform listed as supported in the ST: <testlist>
                  <test>The evaluators shall ensure that communications using each specified (in the operational guidance) enrollment method is tested during the course of the evaluation, setting up the connections as described in the operational guidance and ensuring that communication is successful.</test>
                  <test>For each method of enrollment supported, the evaluator shall follow the operational guidance to ensure that there is no available interface that can be used by a remote user to establish enrollment sessions without invoking the trusted path.</test>
                  <test>The evaluator shall ensure, for each method enrollment, the channel data is not sent in plaintext. </test>
                  </testlist> Further evaluation activities are associated with the specific protocols.
	      </Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
			</audit-event>
		</f-component>
		
        <f-component cc-id="ftp_trp.1" name="Trusted Path (for Joining)" iteration="TRUSTPATH_JOIN" status="objective">
          <f-element id="ftp-trp-1e1-tj">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to provide a communication path between itself and a joining component that is logically distinct from other communication paths and provides assured identification of <selectables>
                <selectable>the TSF endpoint</selectable>
                <selectable>both joining component and TSF endpoint</selectable>
              </selectables> and protection of the communicated data from modification and <selectables>
                <selectable>disclosure</selectable>
                <selectable>none</selectable>
              </selectables>.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS 
              to verify that it describes (for each supported platform) 
              how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/>
	      </TSS>
            </aactivity>
          </f-element>
          <f-element id="ftp-trp-1e2-tj">
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to permit <selectables>
              <selectable>the TSF</selectable>
              <selectable>the joining component</selectable>
            </selectables> to initiate communication via the trusted path.</title>
            <aactivity>
              <TSS>If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how 
              this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by 
              the MDM Server; nonetheless, that mechanism will be identified in the TSS as part 
              of this evaluation activity).<h:br/><h:br/></TSS>
            </aactivity>
          </f-element>
          <f-element id="fel-trp-func-tsf"> 
            <title><h:b>Refinement:</h:b> The TSF shall <selectables>
              <selectable>invoke platform-provided functionality</selectable>
              <selectable>implement functionality</selectable>
            </selectables> to require the use of the trusted path for [joining components to the TSF under environmental constraints identified in <assignable>reference to operational guidance</assignable>].</title>
            <note role="application">This SFR implements one of the types of channel identified in the main selection for <xref to="fel-cpc-func"/>. The "joining component" in FTP_TRP.1/TRUSTPATH_JOIN is the IT entity that is attempting to join the distributed TOE by using the registration process.<h:br/><h:br/>            
              The effect of this SFR is to require the ability for components to communicate in a secure manner while the distributed TSF is being created (or when adding components to an existing distributed TSF). When creating the TSF from the initial pair of components, either of these components may be identified as the TSF for the purposes of satisfying the meaning of "TSF" in this SFR.<h:br/><h:br/>
              The selection at the end of FTP_TRP.1/TRUSTPATH_JOIN recognises that in some cases confidentiality (i.e. protection of the data from disclosure) may not be provided by the channel. The ST author distinguishes in the TSS whether in this case the TOE relies on the environment to provide confidentiality (as part of the constraints referenced in <xref to="fel-trp-func-tsf"/>) or whether the registration data exchanged does not require confidentiality (in which case this assertion must be justified). If "none" is selected, then this word may be omitted in the ST to improve readability.<h:br/><h:br/>             
              The assignment in <xref to="fel-trp-func-tsf"/> ensures that the ST highlights any specific details needed to protect the registration environment. Note that when the ST uses FTP_TRP.1/TRUSTPATH_JOIN for the registration channel then this channel cannot be reused as the normal inter-component communication channel (the latter channel must meet FTP_ITC.1 or FPT_ITT.1/INTER_XFER / FPT_ITT.1/INTER_XFER_AGENT). Specific requirements for Preparative Procedures relating to FTP_TRP.1/TRUSTPATH_JOIN are defined in the Evaluation Activities.<h:br/><h:br/>
            </note>
            <aactivity>
              <TSS>The evaluator shall examine the TSS to determine that the methods of joining TOE components are indicated, along with how those communications are protected. The evaluator shall also confirm that all protocols listed in the TSS in support of joining are consistent with those specified in the requirement, and are included in the requirements in the ST.<h:br/><h:br/>              
              If "invoke platform-provided functionality" is selected, the evaluator shall examine the TSS to verify that it describes (for each supported platform) how this functionality is invoked (it should be noted that this may be through a mechanism that is not implemented by the MDM Server; nonetheless, that mechanism will be identified in the TSS as part of this evaluation activity).<h:br/><h:br/></TSS>
              <Guidance>The evaluator shall confirm that the operational guidance contains instructions for joining TOE components for each supported method.<h:br/><h:br/></Guidance>
              <Tests>The evaluator shall also perform the following tests: <testlist>
                <test>The evaluator shall ensure that the communications path for joining components to the TSF is tested for each distinct (nonequivalent) component type, setting up the connections as described in the guidance documentation and ensuring that communication is successful. In particular the evaluator shall confirm that requirements on environment protection for the registration process are consistent with observations made on the test configuration (for example, a requirement to isolate the components from the Internet during registration might be inconsistent with the need for a component to contact a license server). If no requirements on the registration environment are identified as necessary to protect confidentiality, then the evaluator shall confirm that the key used for registration can be configured (following the instructions in the guidance documentation) to be at least the same length as the key used for the internal TSF channel that is being enabled. The evaluator shall confirm that the key used for the channel is unique to the pair of components (this is done by identifying the relevant key during the registration test: it is not necessary to examine the key value).</test>
                <test>The evaluator shall follow the guidance documentation to ensure that in fact the communication channel can be enabled by an administrator for all the TOE components identified in the guidance documentation as capable of initiation.</test>
                <test>The evaluator shall ensure that if the guidance documentation states that the channel data is encrypted then the data observed on the channel is not plaintext.</test>
                <test> The evaluator shall ensure that, for each different pair of nonequivalent component types that can use the registration channel, the connection is physically interrupted during a joining attempt. The evaluator shall ensure that when physical connectivity is restored, communications are appropriately protected.</test>
		</testlist> Further evaluation activities are associated with the specific protocols.
		</Tests>
            </aactivity>
          </f-element>
        	<audit-event>
				<audit-event-descr>Initiation and termination of the trusted channel</audit-event-descr>
				<audit-event-info>Trusted channel protocol</audit-event-info>
			</audit-event>
		</f-component>
      </section>
    </section>
	
    <section title="Security Assurance Requirements" id="SARs">
    The Security Objectives for the TOE in <xref to="req"/> were constructed to address threats identified in <xref to="threats"/>. The Security 
	Functional Requirements (SFRs) in <xref to="req"/> are a formal instantiation of the Security Objectives. The PP identifies the Security Assurance
	Requirements (SARs) to frame the extent to which the evaluator assesses the documentation applicable for the evaluation and performs independent testing. <h:br/>
    This section lists the set of SARs from CC part 3 that are required in evaluations against this PP. Individual Evaluation
	Activities (AAs) to be performed are specified both in <xref to="req"/> as well as in this section. <h:br/><h:br/> 
    The general model for evaluation of TOEs against STs written to conform to this PP is as follows: <h:br/><h:br/> 
    After the ST has been approved for evaluation, the ITSEF will obtain the TOE, supporting environmental IT, and the administrative/user guides for the TOE. 
	The ITSEF is expected to perform actions mandated by the Common Evaluation Methodology (CEM) for the ASE and ALC SARs. The ITSEF also performs the Evaluation 
	Activities contained within <xref to="req"/>, which are intended to be an interpretation of the other CEM assurance requirements as they apply to the
	specific technology instantiated in the TOE. The Evaluation Activities that are captured in <xref to="req"/> also provide clarification as to what the
	developer needs to provide to demonstrate the TOE is compliant with the PP. <h:br/><h:br/>
    The TOE security assurance requirements are identified in <xref to="sar"/>. 
    <h:center><h:H4><ctr ctr-type="Table" pre="Table " id="sar">:Security Assurance Requirements</ctr></h:H4></h:center>
    <h:table>
      <h:TR>
        <h:TD><h:b>Assurance Class</h:b></h:TD>
        <h:TD><h:b>Assurance Components</h:b></h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Security Target (ASE)</h:TD>
        <h:TD>
          ST introduction (ASE_INT.1)<h:br/> 
          Conformance claims (ASE_CCL.1)<h:br/> 
          Security objectives for the operational environment (ASE_OBJ.1)<h:br/> 
          Extended components definition (ASE_ECD.1)<h:br/> 
          Stated security requirements (ASE_REQ.1)<h:br/>
          TOE summary specification (ASE_TSS.1) </h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Development (ADV)</h:TD>
        <h:TD> Basic functional specification (ADV_FSP.1) </h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Guidance documents (AGD)</h:TD>
        <h:TD> Operational user guidance (AGD_OPE.1)<h:br/> 
          Preparative procedures (AGD_PRE.1)
        </h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Life cycle support (ALC)</h:TD>
        <h:TD> Labeling of the TOE (ALC_CMC.1)<h:br/>
          TOE CM coverage (ALC_CMS.1) </h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Tests (ATE)</h:TD>
        <h:TD> Independent testing - sample (ATE_IND.1) </h:TD>
      </h:TR>
      <h:TR>
        <h:TD>Vulnerability assessment (AVA)</h:TD>
        <h:TD> Vulnerability survey (AVA_VAN.1) </h:TD>
      </h:TR>
    </h:table>
    <section id="ase" title="Class ASE: Security Target"> 
      The ST is evaluated as per ASE activities defined in the CEM. In addition, there may be Evaluation Activities specified within <xref to="req"/> and relevant appendices that call for necessary descriptions to be included in the TSS that are specific to the TOE technology type. 
       <a-component cc-id="ase_tss.1" name="TOE summary specification">
         <a-element type="C">
           <title>The TOE summary specification shall describe how the TOE meets each SFR.</title>
         </a-element>        
       </a-component>     
    </section>

    <section id="adv" title="Class ADV: Development"> 
      The design information about the TOE is contained in the guidance documentation available to the end user as well as the TSS portion of the ST, and any additional information required by this PP that is not to be made public (e.g., Entropy Essay).
        <a-component cc-id="adv_fsp.1" name="Basic Functional Specification (ADV_FSP.1)"> 
          The functional specification describes the Target Security Functions Interfaces (TSFIs). It is not necessary to have 
		  a formal or complete specification of these interfaces. Additionally, because TOEs conforming to this PP will 
		  necessarily have interfaces to the Operational Environment that are not directly invokable by TOE users, there is 
		  little point specifying that such interfaces be described in and of themselves since only indirect testing of such
		  interfaces may be possible. For this PP, the activities for this family should focus on understanding the interfaces 
		  presented in the TSS in response to the functional requirements and the interfaces presented in the AGD documentation.
		  No additional "functional specification" documentation is necessary to satisfy the evaluation activities specified.<h:br/><h:br/> The interfaces that need to be evaluated are characterized through the information needed to perform the evaluation activities listed, rather than as an independent, abstract list.
            <a-element type="D">
              <title>The developer shall provide a functional specification.</title>
            </a-element>
            <a-element type="D">
              <title>The developer shall provide a tracing from the functional specification to the SFRs.</title>
              <note role="application">As indicated in the introduction to this section, the functional specification is comprised of the information contained in the AGD_OPE and AGD_PRE documentation. The developer may reference a website accessible to application developers and the evaluator. The evaluation activities in the functional requirements point to evidence that should exist in the documentation and TSS section; since these are directly associated with the SFRs, the tracing in element ADV_FSP.1.2D is implicitly already done and no additional documentation is necessary. </note>
            </a-element>          
            <a-element type="C">
              <title>The functional specification shall describe the purpose and method of use for each SFR- enforcing and SFR-supporting TSFI.</title>
            </a-element>
            <a-element type="C">
              <title>The functional specification shall identify all parameters associated with each SFR-enforcing and SFR-supporting TSFI.</title>
            </a-element>
            <a-element type="C">
              <title>The functional specification shall provide rationale for the implicit categorization of interfaces as SFR-non-interfering.</title>
            </a-element>
            <a-element type="C">
              <title>The tracing shall demonstrate that the SFRs trace to TSFIs in the functional specification.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall determine that the functional specification is an accurate and complete instantiation of the SFRs.</title>
              <aactivity>
                There are no specific evaluation activities associated with these SARs, except ensuring the information is provided. The functional specification documentation is provided to support the evaluation activities described in Section 5 and the relevant appendices, and other activities described for AGD, ATE, and AVA SARs. The requirements on the content of the functional specification information is implicitly assessed by virtue of the other evaluation activities being performed; if the evaluator is unable to perform an activity because there is insufficient interface information, then an adequate functional specification has not been provided.
              </aactivity>
            </a-element>          
        </a-component>
      </section>
    <section id="agd" title="Class AGD: Guidance Documentation"> 
      The guidance documents will be provided with the ST. Guidance must include a description of how the IT personnel verifies that the Operational Environment can fulfill its role for the security functionality. The documentation should be in an informal style and readable by the IT personnel.<h:br/><h:br/> 
      Guidance must be provided for every operational environment that the product supports as claimed in the ST. This guidance includes:<h:br/><h:br/>
      <h:ul>
        <h:li>instructions to successfully install the TSF in that environment</h:li>
        <h:li>instructions to manage the security of the TSF as a product and as a component of the larger operational environment</h:li>
        <h:li>instructions to provide a protected administrative capability</h:li>
      </h:ul> Guidance pertaining to particular security functionality must also be provided; requirements on such guidance are contained in the evaluation activities specified with each requirement. 
        <a-component cc-id="agd_ope.1" name="Operational User Guidance (AGD_OPE.1)">
            <a-element type="D">
              <title>The developer shall provide operational user guidance.</title>
              <note role="application">The operational user guidance does not have to be contained in a single document. Guidance to users, administrators and application developers can be spread among documents or web pages. Where appropriate, the guidance documentation is expressed in the eXtensible Configuration Checklist Description Format (XCCDF) to support security automation.<h:br/><h:br/> 
                Rather than repeat information here, the developer should review the evaluation activities for this component to ascertain the specifics of the guidance that the evaluator will be checking for. This will provide the necessary information for the preparation of acceptable guidance. </note>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, the user-accessible functions and privileges that should be controlled in a secure processing environment, including appropriate warnings.</title>
              <note role="application">User and administrator are to be considered in the definition of user role.</note>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, how to use the available interfaces provided by the TOE in a secure manner.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall describe, for each user role, the available functions and interfaces, in particular all security parameters under the control of the user, indicating secure values as appropriate.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall, for each user role, clearly present each type of security-relevant event relative to the user-accessible functions that need to be performed, including changing the security characteristics of entities under the control of the TSF.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall identify all possible modes of operation of the TOE (including operation following failure or operational error), their consequences, and implications for maintaining secure operation.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall, for each user role, describe the security measures to be followed in order to fulfill the security objectives for the operational environment as described in the ST.</title>
            </a-element>
            <a-element type="C">
              <title>The operational user guidance shall be clear and reasonable.</title>
            </a-element>          
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
              <aactivity> 
                Some of the contents of the operational guidance will be verified by the evaluation activities in Sections 4.2, 4.3, and 4.4and evaluation of the 
				TOE according to the CEM. The following additional information is also required.<h:br/><h:br/> 
				If cryptographic functions are provided by the TOE, the operational guidance shall contain instructions for configuring the cryptographic engine
				associated with the evaluated configuration of the TOE. It shall provide a warning to the administrator that use of other cryptographic engines was 
				not evaluated nor tested during the CC evaluation of the TOE.<h:br/><h:br/> The documentation must describe the process for verifying updates to the
				TOE by verifying a digital signature - this may be done by the TOE or the underlying platform. The evaluator shall verify that this process includes
				the following steps:<h:br/><h:br/> 
				Instructions for obtaining the update itself. This should include instructions for making the update accessible to the TOE (e.g., placement in a 
				specific directory).<h:br/><h:br/>
				Instructions for initiating the update process, as well as discerning whether the process was successful or unsuccessful. This includes generation 
				of the hash/digital signature.<h:br/><h:br/>
				The TOE will likely contain security functionality that does not fall in the scope of evaluation under 
				this PP. The operational guidance shall make it clear to an administrator which security functionality is covered by the evaluation activities. 
              </aactivity>
            </a-element>          
        </a-component>
      </section>
      <section id="agd_pre" title="Preparative Procedures (AGD_PRE.1)">
        <a-component cc-id="agd_pre.1" name="Preparative Procedures (AGD_PRE.1)">
            <a-element type="D">
              <title>The developer shall provide the TOE, including its preparative procedures.</title>
              <note role="application">As with the operational guidance, the developer should look to the evaluation activities to determine the required content with respect to preparative procedures.</note>
            </a-element>          
            <a-element type="C">
              <title>The preparative procedures shall describe all the steps necessary for secure acceptance of the delivered TOE in accordance with the developer's delivery procedures.</title>
            </a-element>
            <a-element type="C">
              <title>The preparative procedures shall describe all the steps necessary for secure installation of the TOE and for the secure preparation of the operational environment in accordance with the security objectives for the operational environment as described in the ST.</title>
              <note role="application">It is recognised that the application of these requirements will vary depending on aspects such as whether the TOE is delivered in an operational state, or whether it has to be installed at the TOE owner's site, etc.<h:br/><h:br/>
                It might also be the case that no installation is necessary, for example as a Software as a Service implementation in a Cloud environment. In this case it may be inappropriate to require and analyse installation procedures and thus this requirement is implicitly satisfied.
              </note>
            </a-element>          
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall apply the preparative procedures to confirm that the TOE can be prepared securely for operation.</title>
              <aactivity>
                As indicated in the introduction above, there are significant expectations with respect to the documentation, especially when configuring the operational environment to support TOE functional requirements. The evaluator shall check to ensure that the guidance provided for the TOE adequately addresses all platforms claimed for the TOE in the ST.
              </aactivity>
            </a-element>          
        </a-component>
      </section>
    <section id="alc" title="Class ALC: Life-cycle Support">
      At the assurance level provided for TOEs conformant to this PP, life-cycle support is limited to end-user visible aspects of the life-cycle, rather than an examination of the TOE vendor's development and configuration management process. This is not meant to diminish the critical role that a developer's practices play in contributing to the overall trustworthiness of a product; rather, it's a reflection on the information to be made available for evaluation at this assurance level. 
        <a-component cc-id="alc_cmc.1" name="Labeling of the TOE( ALC_CMC.1)">
          This component is targeted at identifying the TOE such that it can be distinguished from other products or versions from the same vendor and can be easily specified when being procured by an end user. 
            <a-element type="D">
              <title>The developer shall provide the TOE and a reference for the TOE.</title>
            </a-element>          
            <a-element type="C">
              <title>The TOE shall be labeled with its unique reference.</title>
            </a-element>          
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
              <aactivity>The evaluator shall check the ST to ensure that it contains an identifier (such as a product name/version number) that specifically identifies the version that meets the requirements of the ST. Further, the evaluator shall check the AGD guidance and TOE samples received for testing to ensure that the version number is consistent with that in the ST. If the vendor maintains a website advertising the TOE, the evaluator shall examine the information on the website to ensure that the information in the ST is sufficient to distinguish the product.</aactivity>
            </a-element>          
        </a-component>
      </section>
      <section id="alc_cms" title="TOE CM Coverage (ALC_CMS.1)">
        <a-component cc-id="alc_cms.1" name="TOE CM Coverage (ALC_CMS.1)">
          Given the scope of the TOE and its associated evaluation evidence requirements, this component's evaluation activities are covered by the evaluation activities listed for ALC_CMC.1. 
            <a-element type="D">
              <title>The developer shall provide a configuration list for the TOE.</title>
            </a-element>          
            <a-element type="C">
              <title>The configuration list shall include the following: the TOE itself; and the evaluation evidence required by the SARs.</title>
            </a-element>
            <a-element type="C">
              <title>The configuration list shall uniquely identify the configuration items.</title>
            </a-element>          
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.</title>
              <note role="application">
                In cases where the MDM software is Software as a Service, running in a cloud environment where they have little to no control of the operating system and underlying hardware, the evaluated configuration is considered a snapshot of the MDM software with the OS and/or VM versions used at the time of testing. 
              </note>
              <aactivity>The "evaluation evidence required by the SARs" in this
                  PP is limited to the information in the ST coupled with the guidance provided to administrators and users under the AGD requirements. By ensuring that the TOE is specifically identified and that this identification is consistent in the ST and in the AGD guidance (as done in the evaluation activity for ALC_CMC.1), the evaluator implicitly confirms the information required by this component.<h:br/><h:br/> 
                Life-cycle support is targeted aspects of the developer's life-cycle and instructions to providers of applications for the developer's devices, rather than an in-depth examination of the TSF manufacturer's development and configuration management process. This is not meant to diminish the critical role that a developer's practices play in contributing to the overall trustworthiness of a product; rather, it's a reflection on the information to be made available for evaluation.<h:br/><h:br/> 
                <!-- TODO:Is this necessary?: The evaluator shall ensure that the developer has identified (in public-facing development documentation for their platform) one or more development environments appropriate for use in developing applications for the developer's platform. For each of these development environments, the developer shall provide information on how to configure the environment to ensure that buffer overflow protection mechanisms in the environment(s) are invoked (e.g., compiler flags). The evaluator shall ensure that this documentation also includes an indication of whether such protections are on by default, or have to be specifically enabled.<h:br/><h:br/> -->
                The evaluator shall ensure that the TSF is uniquely identified (with respect to other products from the TSF vendor), and that documentation provided by the developer in association with the requirements in the ST is associated with the TSF using this unique identification.<h:br/><h:br/>
              </aactivity>
            </a-element>          
        </a-component>
      </section>
      <section id="ate-tests" title="Class ATE: Tests"> 
        Testing is specified for functional aspects of the system as well as aspects that take advantage of design or implementation weaknesses. The former is done through the ATE_IND family, while the latter is through the AVA_VAN family. At the assurance level specified in this PP, testing is based on advertised functionality and interfaces with dependency on the availability of design information. One of the primary outputs of the evaluation process is the test report as specified in the following requirements.<h:br/><h:br/> Since many of the APIs are not exposed at the user interface (e.g., touch screen), the ability to stimulate the necessary interfaces requires a developer's test environment. This test environment will allow the evaluator, for example, to access APIs and view file system information that is not available on consumer mobile devices. 
        <a-component cc-id="ate_ind.1" name="Independent Testing - Conformance (ATE_IND.1)"> 
          Testing is performed to confirm the functionality described in the TSS as well as the administrative (including configuration and operational) documentation provided. The focus of the testing is to confirm that the requirements specified in Sections 5.3, and 5.4 are being met, although some additional testing is specified for SARs in Section 6. The Evaluation Activities identify the additional testing activities associated with these components. The evaluator produces a test report documenting the plan for and results of testing, as well as coverage arguments focused on the platform/TOE combinations that are claiming conformance to this PP.
            <a-element type="D">
              <title>The developer shall provide the TOE for testing.</title>
            </a-element>          
            <a-element type="C">
              <title>The TOE shall be suitable for testing.</title>
            </a-element>          
            <a-element type="E">
              <title>The evaluator <h:i>shall confirm</h:i> that the information provided meets all requirements for content 
			  and presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall test a subset of the TSF to confirm that the TSF operates as specified.</title>
              <aactivity> The evaluator shall prepare a test plan and report documenting the testing aspects of the system. The
			  test plan covers all of the testing
			  actions contained in the CEM and the body of this PP's Evaluation Activities. While it is not necessary to have 
			  one test case per test listed in an evaluation activity, the evaluator must document in the test plan that each 
			  applicable testing requirement in the ST is covered.<h:br/><h:br/> 
                The test plan identifies the platforms to be tested, and for those platforms not included in the test plan but
				included in the ST, the test plan provides a justification for not testing the platforms. This justification
				must address the differences between the tested platforms and the untested platforms, and make an argument that
				the differences do not affect the testing to be performed. It is not sufficient to merely assert that the
				differences have no affect; rationale must be provided. If all platforms claimed in the ST are tested, then
				no rationale is necessary.<h:br/><h:br/> 
                The test plan describes the composition of each platform to be tested, and any setup that is necessary beyond
				what is contained in the  part of a test or as a standard pre-test condition. This may include special test
				drivers or tools. For each driver or tool, an argument (not just an assertion) should be provided that the 
				driver or tool will not adversely affect the performance of the functionality by the TOE and its platform.
				This also includes the configuration of the cryptographic engine to be used. The cryptographic algorithms 
				implemented by this engine are those specified by this PP and used by the cryptographic protocols being
				evaluated (IPsec, TLS/HTTPS, SSH).<h:br/><h:br/> 
                The test plan identifies high-level test objectives as well as the test procedures to be followed to achieve 
				those objectives. These procedures include expected results. The test report (which could just be an annotated 
				version of the test plan) details the activities that took place when the test procedures were executed, and
				includes the actual results of the tests. This shall be a cumulative account, so if there was a test run that
				resulted in a failure; a fix installed; and then a successful re-run of the test, the report would show a
				"fail" and "pass" result (and the supporting details), and not just the "pass" result.<h:br/><h:br/>
              </aactivity>
            </a-element>          
        </a-component>
      </section>
    <section id="ava" title="Class AVA: Vulnerability Analysis">
      For the first generation of this protection profile, the evaluation lab is expected to survey open sources to discover 
	  what vulnerabilities have been discovered in these types of products. In most cases, these vulnerabilities will require 
	  sophistication beyond that of a basic attacker. Until penetration tools are created and uniformly distributed to the
	  evaluation labs, the evaluator will not be expected to test for these vulnerabilities in the TOE. The labs will be 
	  expected to comment on the likelihood of these vulnerabilities given the documentation provided by the vendor. This
	  information will be used in the development of penetration testing tools and for the development of future protection 
	  profiles. 
        <a-component cc-id="ava_van.1" name="Vulnerability Survey (AVA_VAN.1)">
            <a-element type="D">
              <title>The developer shall provide the TOE for testing.</title>
            </a-element>          
            <a-element type="C">
              <title>The TOE shall be suitable for testing.</title>
            </a-element>          
            <a-element type="E">
              <title>The evaluator shall confirm that the information provided meets all requirements for content and 
			  presentation of evidence.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall perform a search of public domain sources to identify potential vulnerabilities in 
			  the TOE.</title>
            </a-element>
            <a-element type="E">
              <title>The evaluator shall conduct penetration testing, based on the identified potential vulnerabilities, to 
			  determine
			  that the TOE is resistant to attacks performed by an attacker possessing Basic attack potential.</title>
              <aactivity>As with ATE_IND, the evaluator shall generate a report to document their findings with respect to this
			  requirement. This report could physically be part of the overall test report mentioned in ATE_IND, or a separate
			  document. The evaluator performs a search of public information to determine the vulnerabilities that have been
			  found in network infrastructure devices and the implemented communication protocols in general, as well as those
			  that pertain to the particular TOE. The evaluator documents the sources consulted and the vulnerabilities found
			  in the report. For each vulnerability found, the evaluator either provides a rationale with respect to its 
			  non-applicability, or the evaluator formulates a test (using the guidelines provided in ATE_IND) to confirm
			  the vulnerability, if suitable. Suitability is determined by assessing the attack vector needed to take
			  advantage of the vulnerability. If exploiting the vulnerability requires expert skills and an electron
			  microscope, for instance, then a test would not be suitable and an appropriate justification would be formulated.
              </aactivity>
            </a-element>          
        </a-component>
      </section>
    </section>
  </section>

  <appendix id="optional" title="Optional Requirements">
    <!-- Note: This text is auto populated -->
  </appendix>  
  <appendix id="sel-based" title="Selection-Based Requirements"> 
    As indicated in the introduction to this PP, the baseline requirements (those that must be performed by the TOE or its
	underlying platform) are contained in the body of the PP. There are additional requirements based on selections in the body 
	of the PP: If certain selections are made, then additional requirements below will need to be included. </appendix>
  <appendix id="objective" title="Objective Requirements"> 
    As indicated in the introduction to this PP, the baseline requirements (those that must be performed by the TOE or its 
	underlying platform) are contained in the body of this PP. There are additional requirements that specify security 
	functionality that is desirable and these requirements are contained in this Appendix. It is expected that these 
	requirements will transition from objective requirements to baseline requirements in future versions of this PP.<h:br/><h:br/> 
	At any time these may be included in the ST such that the TOE is still conformant to this PP.<h:br/><h:br/> This Appendix is 
	divided into two subsections: objective requirements that may be performed by the TSF and objective requirements that may be
	performed by the MDM Agent or its underlying platform.<h:br/><h:br/>
  </appendix>
  

  <appendix id="entropy" title="Entropy Documentation and Assessment"> 
    This appendix describes the required supplementary information for each entropy source used by the TOE.<h:br/><h:br/> The 
	documentation of the entropy source(s) should be detailed enough that, after reading, the evaluator will thoroughly 
	understand the entropy source and why it can be relied upon to provide sufficient entropy. This documentation should 
	include multiple detailed sections: design description, entropy justification, operating conditions, and health testing. 
	This documentation is not required to be part of the TSS. <h:br/><h:br/>
    <section id="design-description" title="Design Description"> Documentation shall include the design of each entropy source
	as a whole, including the interaction of all entropy source components. Any information that can be shared regarding the
	design should also be included for any third-party entropy sources that are included in the product.<h:br/><h:br/> The
	documentation will describe the operation of the entropy source to include, how entropy is produced, and how unprocessed 
	(raw) data can be obtained from within the entropy source for testing purposes. The documentation should walk through the
	entropy source design indicating where the entropy comes from, where the entropy output is passed next, any post-processing 
	of the raw outputs (hash, XOR, etc.), if/where it is stored, and finally, how it is output from the entropy source. Any 
	conditions placed on the process (e.g., blocking) should also be described in the entropy source design. Diagrams and
	examples are encouraged.<h:br/><h:br/> This design must also include a description of the content of the security boundary 
	of the entropy source and a description of how the security boundary ensures that an adversary outside the boundary cannot 
	affect the entropy rate.<h:br/><h:br/> If implemented, the design description shall include a description of how third-party
	applications can add entropy to the RBG. A description of any RBG state saving between power-off and power-on shall be 
	included.<h:br/><h:br/>
    </section>
    <section id="entropy-justification" title="Entropy Justification"> There should be a technical argument for where
      the unpredictability in the source comes from and why there is confidence in the entropy
      source delivering sufficient entropy for the uses made of the RBG output (by this particular
        TOE). This argument will include a description of the expected min-entropy
      rate (i.e. the minimum entropy (in bits) per bit or byte of source data) and explain that
      sufficient entropy is going into the TOE randomizer seeding process. This
      discussion will be part of a justification for why the entropy source can be relied upon to
      produce bits with entropy.<h:br/><h:br/> The amount of information necessary to justify the
      expected min-entropy rate depends on the type of entropy source included in the
      product.<h:br/><h:br/> For developer provided entropy sources, in order to justify the min-entropy
      rate, it is expected that a large number of raw source bits will be collected, statistical
      tests will be performed, and the min-entropy rate determined from the statistical tests.
      While no particular statistical tests are required at this time, it is expected that some
      testing is necessary in order to determine the amount of min-entropy in each output.<h:br/><h:br/>
      For third party provided entropy sources, in which the TOE vendor has
      limited access to the design and raw entropy data of the source, the documentation will
      indicate an estimate of the amount of min-entropy obtained from this third-party source. It
      is acceptable for the vendor to "assume" an amount of min-entropy, however, this assumption
      must be clearly stated in the documentation provided. In particular, the min-entropy estimate
      must be specified and the assumption included in the ST.<h:br/><h:br/> Regardless
      of type of entropy source, the justification will also include how the DRBG is initialized
      with the entropy stated in the ST, for example by verifying that the
      min-entropy rate is multiplied by the amount of source data used to seed the DRBG or that the
      rate of entropy expected based on the amount of source data is explicitly stated and compared
      to the statistical rate. If the amount of source data used to seed the DRBG is not clear or
      the calculated rate is not explicitly related to the seed, the documentation will not be
      considered complete.<h:br/><h:br/> The entropy justification shall not include any data added from
      any third-party application or from any state saving between restarts.<h:br/><h:br/>
    </section>
    <section id="operating-conditions" title="Operating Conditions"> The entropy rate may be affected by conditions
      outside the control of the entropy source itself. For example, voltage, frequency,
      temperature, and elapsed time after power-on are just a few of the factors that may affect the
      operation of the entropy source. As such, documentation will also include the range of
      operating conditions under which the entropy source is expected to generate random data.
      Similarly, documentation shall describe the conditions under which the entropy source is no
      longer guaranteed to provide sufficient entropy. Methods used to detect failure or degradation
      of the source shall be included.<h:br/><h:br/>
    </section>
    <section id="sec4" title="Health Testing"> More specifically, all entropy source health tests
      and their rationale will be documented. This will include a description of the health tests,
      the rate and conditions under which each health test is performed (e.g., at startup,
      continuously, or on-demand), the expected results for each health test, TOE
      behavior upon entropy source failure, and rationale indicating why each test is believed to be
      appropriate for detecting one or more failures in the entropy source.<h:br/><h:br/>
    </section>
  </appendix>
  
  <appendix id="EACDT" title="Evaluating Additional Components for a Distributed TOE">
    In the case of a distributed TOE the ST will identify an evaluated configuration that consists of a number of separate components chosen by the ST author, 
	which collectively satisfy the requirements of the PP. This evaluated configuration need not be the minimum set of components that could possibly meet the PP 
	(e.g. if the TOE is intended for large enterprise deployments then the evaluated configuration might include some redundancy in components in order to support
	expected connectivity and loads), but because this is the main configuration referred to in the ST and the evaluation, it is treated in this section as the 
	minimum configuration of interest and is referred to here as the 'minimum configuration' as well as the 'evaluated configuration'.<h:br/><h:br/>
    
    In addition to the minimum configuration above, the ST may also identify (at the author's discretion, and subject to verification as described in this section) 
	which TOE components can have instances added to an operational configuration without affecting the validity of the CC certification. The ST description may 
	include constraints on how such components are added, including required and/or prohibited configurations of the components.<h:br/><h:br/>
    
    Extra instances of a TOE component must have the same hardware and software as the original component included in the evaluated configuration.<h:br/><h:br/>
    <section title="Evaluator Actions for Assessing the ST" id="sec1">
      <h:h4>TSS</h:h4>
      The evaluator shall examine the TSS to identify any extra instances of TOE components allowed in the ST and shall examine the description of how the additional 
	  components maintain the SFRs to confirm that it is consistent with the role that the component plays in the evaluated configuration. For example: the secure 
	  channels used by the extra component for intra-TOE communications (FPT_ITT) and external communications (FTP_ITC) must be consistent, the audit information
	  generated by the extra component must be maintained, and the management of the extra component must be consistent with that used for the original instance of 
	  the component in the minimum configuration.
    </section>
    <section title="Evaluator Actions for Assessing the Guidance Documentation" id="sec2">
      <h:h4>Guidance</h:h4>
w      <!-- <Guidance> -->
	The evaluator shall examine the description of the extra instances of TOE components in the guidance documentation to confirm that they are consistent with those
	identified as allowed in the ST. This includes confirmation that the result of applying the guidance documentation to configure the extra component will leave the
	TOE in a state such that the claims for SFR support in each component are as described in the ST and therefore that all SFRs continue to be met when the extra
	components are present.<h:br/><h:br/>
      
      The evaluator shall examine the secure communications described for the extra components to confirm that they are the same as described for the components in
	  the minimum configuration (additional connections between allowed extra components and the components in the minimum configuration are allowed of course).<h:br/><h:br/>
      <!-- </Guidance> -->
    </section> 
    <section title="Evaluator Actions for Testing the TOE" id="sec3">
      <h:h4>Tests</h:h4>
      <!-- <Tests> -->
	The evaluator tests the TOE in the minimum configuration as defined in the ST (and the guidance documentation).<h:br/><h:br/>
      
      If the description of the use of extra components in the ST and guidance documentation identifies any difference in the SFRs allocated to a component, or 
	  the scope of the SFRs involved (e.g. if different selections apply to different instances of the component) then the evaluator tests these additional SFR cases
	  that were not included in the minimum configuration.<h:br/><h:br/>
      
      In addition, the evaluator tests the following aspects for each extra component that is identified as allowed in the distributed TOE:<h:br/><h:br/>
      <h:ul>
        <h:li>Communications: the evaluator follows the guidance documentation to confirm, by testing, that any additional connections introduced with the extra 
		component and not present in the minimum configuration are consistent with the requirements stated in the ST ( e.g. with regard to protocols and ciphersuites
		used). An example of such an additional connection would be if a single instance of the component is present in the minimum configuration and adding a 
		duplicate component then introduces an extra communication between the two instances. Another example might be if the use of the additional components
		necessitated the use of a connection to an external authentication server instead of using locally stored credentials. </h:li>
        <h:li>Audit: the evaluator confirms that the audit records from different instances of a component can be distinguished so that it is clear which instance
		generated the record.</h:li>
        <h:li>Management: if the extra component manages other components in the distributed TOE then the evaluator shall follow the guidance documentation to
		confirm that management via the extra component uses the same roles and role holders for administrators as for the component in the minimum configuration.</h:li>
      </h:ul>
      <!-- </Tests> -->
    </section>
  </appendix> 
 
<appendix id="equiv" title="MDM Software Equivalency Guidelines">
    <section id="mdm-intro" title="Introduction">
      The purpose of equivalence in PP-based evaluations is to find a balance between evaluation rigor and commercial practicability, to 
      ensure that evaluations meet customer expectations while recognizing that there is little to be gained from requiring that every 
      variation in a product or platform be fully tested. If a product is found to be compliant with a PP on one platform, then all 
      equivalent products on equivalent platforms are also considered to be compliant with the PP.
      <h:br />
      <h:br />
      A Vendor can make a claim of equivalence if the Vendor believes that a particular instance of their Product implements PP-specified 
      security functionality in a way equivalent to the implementation of the same functionality on another instance of their Product on 
      which the functionality was tested. The Product instances can differ in version number or feature level (model), or the instances may
      run on different platforms. Equivalency can be used to reduce the testing required across claimed evaluated configurations. It can 
      also be used during Assurance Maintenance to reduce testing needed to add more evaluated configurations to a certification.
      <h:br />
      <h:br />
      These equivalency guidelines do not replace Assurance Maintenance requirements or NIAP Policy #5 requirements for CAVP certificates. 
      Nor may equivalency be used to leverage evaluations with expired certifications.
      <h:br />
      <h:br />
      These Equivalency Guidelines represent a shift from complete testing of all product instances to more of a risk-based approach. 
      Rather than require that every combination of product and platform be tested, these guidelines support an approach that recognizes
      that products are being used in a variety of environments, and often in cloud environments over where the vendor (and sometimes the 
      customer) have little or no control over the underlying hardware. Developers should be responsible for the security functionality of 
      their applications on the platforms they are developed for, whether that is an operating system, a virtual machine, or a software-based
      execution environment such as a container. But those platforms may themselves run within other environments, virtual machines or
      operating systems, that completely abstract away the underlying hardware from the application. The developer should not be held
      accountable for security functionality that is implemented by platform layers that are abstracted away. The implication is that
      not all security functionality will necessarily be tested for all platform layers down to the hardware for all evaluated
      configurations, especially for applications developed for software-based execution environments such as containers. For these cases, 
      the balancing of evaluation rigor and commercial practicability tips in favor of practicability. Note that this does not affect the requirement 
	  that at least one product instance be fully tested on at least one platform with cryptography mapped to a CAVP certificate.
      <h:br />
      <h:br />
      Equivalency has two aspects:
      <h:br />
      <h:ol>
        <h:li><h:b><h:i>Product Equivalence:</h:i></h:b> Products may be considered equivalent if there are no
          differences between Product Models and Product Versions with respect to PP-specified security functionality.</h:li>
        <h:li><h:b><h:i>Platform Equivalence:</h:i></h:b> Platforms may be considered equivalent if there are no
          significant differences in the services they provide to the Product, or in the way the platforms 
          provide those services, with respect to PP-specified security functionality.</h:li>
      </h:ol>
      The equivalency determination is made in accordance with these guidelines by the Validator and Scheme using information provided by the Evaluator/Vendor.
    </section>
    <section id="approach" title="Approach to Equivalency Analysis">
      There are two scenarios for performing equivalency analysis. One is when a product has been certified and the vendor 
      wants to show that a later product should be considered certified due to equivalence with the earlier product. The 
      other is when multiple product variants are going though evaluation together and the vendor would like to reduce 
      the amount of testing that must be done. The basic rules for determining equivalence are the same in both cases. 
      But there is one additional consideration that applies to equivalence with previously certified products. That is, 
      the product with which equivalence is being claimed must have a valid certification in accordance with scheme rules
      and the Assurance Maintenance process must be followed. If a product’s certification has expired, then equivalence 
      cannot be claimed with that product.
      <h:br /><h:br />
      When performing equivalency analysis, the Evaluator/Vendor should first use the factors and guidelines for Product
      Model equivalence to determine the set of Product Models to be evaluated. In general, Product Models that do not differ 
      in PP-specified security functionality are considered equivalent for purposes of evaluation against the SWApp PP.
      <h:br /><h:br />
      If multiple revision levels of Product Models are to be evaluated, or to determine whether a revision of an evaluated 
      product needs re-evaluation, the Evaluator/Vendor and Validator should use the factors and guidelines for Product 
      Version equivalence to analyze whether Product Versions are equivalent.
      <h:br /><h:br />
      Having determined the set of Product Models and Versions to be evaluated, the next step is to determine the set of
      Platforms that the Products must be tested on.
      <h:br /><h:br />
      Each non-equivalent Product for which compliance is claimed must be fully tested on each non-equivalent platform 
      for which compliance is claimed. For non-equivalent Products on equivalent platforms, only the differences that
      affect PP-specified security functionality must be tested for each product.
      <h:br />
      <h:br />
      <h:b><h:i>"Differences in PP-Specified Security Functionality" Defined</h:i></h:b>
      <h:br />
      If PP-specified security functionality is implemented by the TOE, then differences in the actual implementation
      between versions or product models break equivalence for that feature. Likewise, if the TOE implements the 
      functionality in one version or model and the functionality is implemented by the platform in another version 
      or model, then equivalence is broken. If the functionality is implemented by the platform in multiple models or 
      versions on equivalent platforms, then the functionality is considered different if the product invokes the platform 
      differently to perform the function.
      
    </section>
    <section id="modelequiv" title="Specific Guidance for Determining Product Model Equivalence">
      Product Model equivalence attempts to determine whether different feature levels of the same product across 
      a product line are equivalent for purposes of PP testing. For example, if a product has a "basic" edition and an "enterprise" 
      edition, is it necessary to test both models? Or does testing one model provide sufficient assurance that both models 
      are compliant?
      <h:br />
      <h:br />
      Product models are considered equivalent if there are no differences that affect PP-specified security functionality, as indicated in <xref to="modeleq"/>.
      <h:br />
      <h:br />
      <h:b><ctr ctr-type='Table' pre="Table " id="modeleq">: Determining Product Model Equivalence</ctr></h:b>
      <h:table border="1">
        <h:tr class="header" bgcolor="#cccccc">
          <h:td valign="top">Factor</h:td>
          <h:td valign="top">Same/Different</h:td>
          <h:td valign="top">Guidance</h:td>
        </h:tr>
        <h:tr>
          <h:td rowspan="2" valign="top">PP-Specified Funtionality</h:td>
          <h:td valign="top">Same</h:td>
          <h:td valign="top">If the differences between Models affect only non-PP-specified functionality, then the Models are equivalent. </h:td>
        </h:tr>
        <h:tr>
          <h:td valign="top">Different</h:td>
          <h:td valign="top">If PP-specified security functionality is affected by the differences between Models, 
            then the Models are not equivalent and must be tested separately. It is necessary only to test the functionality 
            affected by the software differences. If only differences are tested, then the differences must be enumerated, 
            and for each difference the Vendor must provide an explanation of why each difference does or does not affect 
            PP-specified functionality. If the Product Models are separately tested fully, then there is no need to document the differences. 
          </h:td>
        </h:tr>
      </h:table>
      <h:br/> 
      <h:br/>
    </section>
    <section id="versionequiv" title="Specific Guidance for Determining Product Version Equivalence">
      In cases of version equivalence, differences are expressed in terms of changes implemented in revisions 
      of an evaluated Product. In general, versions are equivalent if the changes have no effect on any 
      security-relevant claims about the TOE or assurance evidence. Non-security-relevant changes to TOE 
      functionality or the addition of non-security-relevant functionality does not affect equivalence.
      <h:br /><h:br />
      <h:b><ctr ctr-type='Table' pre="Table " id="versioneq">: Factors for Determining Product Version Equivalence</ctr></h:b>
      <h:table border="1">
        <h:tr class="header" bgcolor="#cccccc">
          <h:td valign="top">Factor</h:td>
          <h:td valign="top">Same/Different</h:td>
          <h:td valign="top">Guidance</h:td>
        </h:tr>
        <h:tr valign="top">
          <h:td valign="top">Product Models</h:td>
          <h:td valign="top">Different</h:td>
          <h:td valign="top">Versions of different Product Models are not equivalent unless the Models are equivalent as defined in subsection 3.</h:td>
        </h:tr>
        <h:tr>
          <h:td rowspan="2" valign="top">PP-Specified Funtionality</h:td>
          <h:td valign="top">Same</h:td>
          <h:td valign="top">If the differences affect only non-PP-specified functionality, then the Versions are equivalent. </h:td>
        </h:tr>
        <h:tr>
          <h:td valign="top">Different</h:td>
          <h:td valign="top">If PP-specified security functionality is affected by the differences, then the 
            Versions are not considered equivalent and must be tested separately. It is necessary only to test 
            the functionality affected by the changes. If only the differences are tested, then for each 
            difference the Vendor must provide an explanation of why the difference does or does not affect 
            PP-specified functionality. If the Product Versions are separately tested fully, then there is 
            no need to document the differences. </h:td>
        </h:tr>
      </h:table>
      <h:br />
      <h:br />
    </section>
    <section id="platformequiv" title="Specific Guidance for Determining Platform Equivalence">
      Platform equivalence is used to determine the platforms that equivalent versions of a Product must be tested on. 
      Platform equivalence analysis done for one MDM cannot be applied to another MDM.
      Platform equivalence is not general, it is with respect to a particular MDM. 
      <h:br /><h:br />
      Product Equivalency analysis must already have been done and Products have been determined to be equivalent.
      <h:br /><h:br />
      The platform can be hardware or virtual hardware, an operating system or similar entity, or a software execution 
      environment such as a container. For purposes of determining equivalence for MDMs, we address each
      type of platform separately. In general, platform equivalence is based on differences in the interfaces between the 
      TOE and Platform that are relevant to the implementation of PP-specified security functionality.
      <h:br /><h:br />
      <section id="hardware-equiv" title="Platform Equivalence, Hardware/Virtual Hardware Platforms">
        If an MDM runs directly on hardware without an operating system, or directly on virtualized 
        hardware without an operating system, then platform equivalence is based on processor architecture and 
        instruction sets. In the case of virtualized hardware, it is the virtualized processor and architecture 
        that are presented to the MDM that matters, not the physical hardware.
        <h:br /><h:br />
        Platforms with different processor architectures and instruction sets are not equivalent. This is not 
        likely to be an issue for equivalency analysis for MDMs since there is likely to be a different 
        version of the MDM for different hardware environments.
        Equivalency analysis becomes important when comparing processors with the same architecture. Processors 
        with the same architecture that have instruction sets that are subsets or supersets of each other are not
        disqualified from being equivalent for purposes of an MDM evaluation. If the MDM takes the same 
        code paths when executing PP-specified security functionality on different processors of the same family, 
        then the processors can be considered equivalent with respect to that MDM.
        For example, if an MDM follows one code path on platforms that support the AES-NI instruction 
        and another on platforms that do not, then those two platforms are not equivalent with respect to that 
        MDM functionality. But if the MDM follows the same code path whether or not the platform 
        supports AES-NI, then the platforms are equivalent with respect to that functionality.
        <h:br /><h:br />
        The platforms are equivalent with respect to the MDM if the platforms are equivalent with respect to all PP-specified
        security functionality.
        <h:br /><h:br />
        <h:b><ctr ctr-type='Table' pre="Table " id="hwplateq">: Factors for Determining Hardware/Virtual Hardware Platform Equivalence</ctr></h:b>
        <h:table border="1">
          <h:tr class="header" bgcolor="#cccccc">
            <h:td valign="top">Factor</h:td>
            <h:td valign="top">Same/Different/None</h:td>
            <h:td valign="top">Guidance</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Architectures</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Platforms that present different processor architectures and instruction sets to the MDM are not equivalent.</h:td>
          </h:tr>
          <h:tr>
            <h:td valign="top">PP-Specified Funtionality</h:td>
            <h:td valign="top">Same</h:td>
            <h:td valign="top">For platforms with the same processor architecture, the platforms are equivalent with
              respect to the MDM if execution of all PP-specified security functionality follows the same code path on both platforms.</h:td>
          </h:tr>
        </h:table>
        <h:br />
        <h:br />
        
      </section>
      <section id="os-equiv" title="Platform Equivalence, OS Platforms">
        For MDMs that are built for and run on operating systems, platform equivalence is 
        determined by the interfaces between the MDM and the operating system that are relevant to PP-specified 
        security functionality. Generally, these are the processor interface, device interfaces, and OS APIs. The following 
        factors applied in order:
        <h:br /><h:br />
        <h:b><ctr ctr-type='Table' pre="Table " id="osplateq">: Factors for Determining OS/VS Platform Equivalence</ctr></h:b>
        <h:table border="1">
          <h:tr class="header" bgcolor="#cccccc">
            <h:td valign="top">Factor</h:td>
            <h:td valign="top">Same/Different/None</h:td>
            <h:td valign="top">Guidance</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Architectures</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Platforms that run on different processor architectures and instruction sets are not equivalent.</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Vendors</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Platforms from different vendors are not equivalent. </h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Versions</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Platforms from the same vendor with different major version numbers are not equivalent.</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Interfaces</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Platforms from the same vendor and major version are not equivalent if there are
              differences in device interfaces and OS APIs that are relevant to the way the platform provides PP-specified 
              security functionality to the MDM. </h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Interfaces</h:td>
            <h:td valign="top">Same</h:td>
            <h:td valign="top">Platforms from the same vendor and major version are equivalent if there are 
              no differences in device interfaces and OS APIs that are relevant to the way the platform 
              provides PP-specified security functionality to the MDM, or if the Platform does 
              not provide such functionality to the MDM.</h:td>
          </h:tr>          
        </h:table>        
        <h:br />
        <h:br />
    
      </section>
      <section id="software-equiv" title="Software-based Execution Environment Platform Equivalence">
        If an MDM is built for and runs in a non-OS software-based execution environment, such as a Container or 
        Java Runtime, then the below criteria must be used to determine platform equivalence. The key point is that the 
        underlying hardware (virtual or physical) and OS is not relevant to platform equivalence. This allows MDMs 
        to be tested and run on software-based execution environments on any hardware, as in cloud deployments.
        <h:br /><h:br />
        <h:b><ctr ctr-type='Table' pre="Table " id="swplateq">: Factors for Software-based Execution Environment Platform Equivalence</ctr></h:b>
        <h:table border="1">
          <h:tr class="header" bgcolor="#cccccc">
            <h:td valign="top">Factor</h:td>
            <h:td valign="top">Same/Different/None</h:td>
            <h:td valign="top">Guidance</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Type/Vendor</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Software-based execution environments that are substantially different or come 
              from different vendors are not equivalent. For example, a java virtual machine is not the same as a 
              container. A Docker container is not the same as a CoreOS container.</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">Platform Versions</h:td>
            <h:td valign="top">Different</h:td>
            <h:td valign="top">Execution environments that are otherwise equivalent are not equivalent if they have 
              different major version numbers.</h:td>
          </h:tr>
          <h:tr valign="top">
            <h:td valign="top">PP-Specified Security Functionality</h:td>
            <h:td valign="top">Same</h:td>
            <h:td valign="top">All other things being equal, execution environments are equivalent if there is no 
              significant difference in the interfaces through which the environments provide PP-specified security 
              functionality to MDMs.</h:td>
          </h:tr>
        </h:table>
        <h:br />
        <h:br />
      </section>
    </section>
    <section id="specificity" title="Level of Specificity for Tested Configurations and Claimed Equivalent Configurations">
      In order to make equivalency determinations, the vendor and evaluator must agree on the equivalency claims. They must 
      then provide the scheme with sufficient information about the TOE instances and platforms that were evaluated, and the 
      TOE instances and platforms that are claimed to be equivalent.
      <h:br /><h:br />
      The ST must describe all configurations evaluated down to processor manufacturer, model number, and microarchitecture version. 
      <h:br /><h:br />
      The information regarding claimed equivalent configurations depends on the platform that the MDM was developed for and runs on.
      <h:br /><h:br />
      <h:b>Bare-Metal MDMs</h:b>
      <h:br /><h:br />
      For MDM Servers that run without an operating system on bare-metal or virtual bare-metal, the claimed configuration must 
      describe the platform down to the specific processor manufacturer, model number, and microarchitecture version. The Vendor
      must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE functions
      differently to leverage platform differences (e.g., instruction set extensions) in the tested configuration versus the 
      claimed equivalent configuration. 
      <h:br /><h:br />
      <h:b>Traditional MDMs</h:b>
      <h:br /><h:br />
      For MDMs that run with an operating system as their immediate platform, the claimed configuration must describe 
      the platform down to the specific operating system version. If the platform is a virtualization system, then the claimed 
      configuration must describe the platform down to the specific virtualization system version. The Vendor must describe the 
      differences in the TOE with respect to PP-specified security functionality and how the TOE functions differently to leverage
      platform differences in the tested configuration versus the claimed equivalent configuration. Relevant platform differences 
      could include instruction sets, device interfaces, and OS APIs invoked by the TOE to implement PP-specified security 
      functionality.
      <h:br /><h:br />
      <h:b>Software-Based Execution Environments</h:b>
      <h:br /><h:br />
      For MDMs that run in a software-based execution environment such as a Java virtual machine or a Container, then 
      the claimed configuration must describe the platform down to the specific version of the software execution environment. 
      The Vendor must describe the differences in the TOE with respect to PP-specified security functionality and how the TOE 
      functions differently to leverage platform differences in the tested configuration versus the claimed equivalent 
      configuration.
      <h:br />
      
    </section>
  </appendix>
	
	<!-- Appendix: Implicity Satisfied Requirements -->
	<appendix title="Implicitly Satisfied Requirements" id="satisfiedreqs">
		This appendix lists requirements that should be considered satisfied by products successfully evaluated against this PP-Module.
		However, these requirements are not featured explicitly as SFRs and should not be included in the ST. They are not included as standalone 
		SFRs because it would increase the time, cost, and complexity of evaluation. This approach is permitted by [CC] Part 1, 8.2 Dependencies
		between components.<h:p/>
		This information benefits systems engineering activities which call for inclusion of particular security controls. Evaluation against
		the PP-Module provides evidence that these controls are present and have been evaluated.<h:p/>
		<h:b><ctr ctr-type="Table" pre="Table " id="imp-sat-reqs-table">: Implicitly Satisfied Requirements</ctr></h:b>
    		<h:table>	
	<h:tr class="header"><h:td>Requirement</h:td><h:td>Rationale for Satisfaction</h:td></h:tr>
	<h:tr>
	<h:td>FMT_MTD.1 – Management of TSF Data</h:td>
	<h:td>
		FAU_SEL.1 has a dependency on FMT_MTD.1 because the configuration settings that determine what events are audited is considered to be
		TSF data. While FAU_SEL.1 determines the extent to which the TOE’s audit function is configured, it relies on FMT_MTD.1 to determine the
		administrative roles that are permitted to manipulate this data.<h:p/>
		The PP allows FAU_SEL.1 to be implemented either by the TSF or by the TOE platform because the TOE may rely on the audit functionality
		provided by the OS it runs on. If this is configured entirely through the platform, the administrator does not necessarily need to be
		authenticated by the TOE to do this. Therefore, requiring FMT_MTD.1 does not make sense in this situation. If this is configured through 
		the TOE, it can be implied from a review of FMT_SMR.1(1) that the ‘MD user’ role cannot perform this function as they lack the authority
		to manage the TSF. It is therefore understood that this function can be performed by the ‘administrator’ role or potentially by one or more
		roles specified by the ST author if the selection to specify additional roles is chosen. An additional SFR that explicitly identifies the roles
		permitted to manage this function is redundant in this context.<h:p/>
	</h:td>
	</h:tr>
	<h:tr>
	<h:td>FPT_STM.1 – Reliable time stamps</h:td>
	<h:td>
	  	The PP’s iterations of FAU_GEN.1 as well as its cryptographic functionality have a dependency on FPT_STM.1 because audit records require accurate 
		timestamps as well as some cryptographic operations, such as determining if a presented X.509 certificate is expired. The TOE is installed
		on a general-purpose computer or specialized network device that is assumed to have the ability to provide certain functions to the TOE as 
		specified in A.MDM_SERVER_PLATFORM. This assumption explicitly lists ‘reliable timestamps’ as a function that the TSF is expected to have 
		available to it.<h:p/>
	</h:td>
	</h:tr>
    </h:table>
  </appendix>
 
  <appendix id="use-case" title="Use Case Templates"> 
    The following use case templates list those selections, assignments, and objective requirements that best support the use cases identified by this Protection Profile. Note that the templates assume that all SFRs listed in Section 5 are included in the ST, not just those listed in the templates. These templates and deviations from the template should be identified in the Security Target to assist customers with making risk-based purchasing decisions. Products that do not meet these templates are not precluded from use in the scenarios identified by this Protection Profile. Where selections for a particular requirement are not identified in a use case template, all available selections are equally applicable to the use case. 
    <section title="Enterprise-owned device for general-purpose enterprise use" id="usecase1">
      <h:table>
        <h:TR>
          <h:TD><h:b>Requirement</h:b></h:TD>
          <h:TD><h:b>Action</h:b></h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 32</h:TD>
          <h:TD>Include in ST and assign GPS.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 34</h:TD>
          <h:TD>Include in ST. Assign personal hotspot connections (if feature
            exists).</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 47</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 49</h:TD>
          <h:TD>Include in ST and select "a. USB mass storage mode".</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 51</h:TD>
          <h:TD>Include in ST. Select both options.</h:TD>
        </h:TR>
      </h:table> </section>   
    <section title="Enterprise-owned device for specialized, high-security use" id="usecase2">
      <h:table>
        <h:TR>
          <h:TD><h:b>Requirement</h:b></h:TD>
          <h:TD><h:b>Action</h:b></h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 15</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 16</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 31</h:TD>
          <h:TD>Include in ST and select "no other method".</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 32</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 33</h:TD>
          <h:TD>Include in ST. Assign at least USB.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 34</h:TD>
          <h:TD>Include in ST. Assign all protocols where the TSF acts as a server.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 36</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 37</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 40</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 42</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 47</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 52</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 54</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function c</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function d</h:TD>
          <h:TD>Include in ST.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_CKM.1.1</h:TD>
          <h:TD>Select RSA with key size of 3072 or select ECC schemes.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_CKM.2.1</h:TD>
          <h:TD>Select "RSA schemes" or select "ECC schemes".</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_COP.1.1/COMF_ALG</h:TD>
          <h:TD>Select 256 bits</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_COP.1.1/HASH_ALG</h:TD>
          <h:TD>Select SHA-384</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_COP.1.1/SIGN_ALG</h:TD>
          <h:TD>Select RSA with key size of 3072 or select ECC schemes.</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FIA_X509_EXT.2.2</h:TD>
          <h:TD>Select either "allow the administrator to choose…" or "not accept the
            certificate".</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_TLSC_EXT.1.1 (from TLS Package)</h:TD>
          <h:TD>If included in ST, select "TLS 1.2".</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FCS_TLSC_EXT.2.1 (from TLS Package)</h:TD>
          <h:TD>If included in ST, select "secp384r1".</h:TD>
        </h:TR>
      </h:table>
    </section>
    <section title="Personally owned device for personal and enterprise use" id="usecase3">
      <h:table>
        <h:TR>
          <h:TD><h:b>Requirement</h:b></h:TD>
          <h:TD><h:b>Action</h:b></h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 13</h:TD>
          <h:TD>Include in ST</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 14</h:TD>
          <h:TD>Include in ST</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 21</h:TD>
          <h:TD>Include in ST</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 22</h:TD>
          <h:TD>Include in ST</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 30</h:TD>
          <h:TD>Select "on a per-app basis" and/or "on a per-group of application processes
            basis"</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 31</h:TD>
          <h:TD>If included in ST, select "on a per-app basis" and/or "on a
            per-group of application processes basis"</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 48</h:TD>
          <h:TD>Include in ST</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_AGENT Function 52</h:TD>
          <h:TD>If included in ST, select "on a per-app basis" and/or "on a
            per-group of application processes basis"</h:TD>
        </h:TR>
        <h:TR>
          <h:TD>FMT_SMF.1/SERVER_CONF_SERVER Function f</h:TD>
          <h:TD>Include in the ST</h:TD>
        </h:TR>
      </h:table>
    </section>
    <section title="Personally owned device for personal and limited enterprise use" id="usecase4">
      At this time no requirements are recommended for this use case. </section>
  </appendix>
  
  <appendix id="ref" title="References">
    <bibliography>
      <entry id="bibCEM">
        <tag>CEM</tag>
        <description>
          <h:a href="http://www.commoncriteriaportal.org/files/ccfiles/CEMV3.1R4.pdf">Common Evaluation Methodology for Information Technology Security - Evaluation Methodology</h:a>, CCMB-2012-09-004, Version 3.1, Revision 4, September 2012.
        </description>
      </entry>
      <entry id="bibCSA">
        <tag>CSA</tag>
        <description>
          <h:a href="http://csrc.nist.gov/groups/SMA/ispab/documents/csa_87.txt">Computer Security Act of 1987</h:a>, H.R. 145, June 11, 1987. </description>
      </entry>
      <entry id="bibOMB">
        <tag>OMB</tag>
        <description>
          <h:a href="http://www.whitehouse.gov/sites/default/files/omb/memoranda/fy2006/m06-19.pdf">Reporting Incidents Involving Personally Identifiable Information and Incorporating the Cost for Security in Agency Information Technology Investments</h:a>, OMB M-06-19, July 12, 2006. </description>
      </entry>
      <entry id="bibMDF">
        <tag>MDF PP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=381">Protection Profile for Mobile Device Fundamentals, Version 3.0, June 2016</h:a>
        </description>
      </entry>
      <entry id="bibMDMA">
        <tag>MDM Agent PP</tag>
        <description>
          <h:a href="https://www.niap-ccevs.org/Profile/Info.cfm?id=403">Protection Profile for Mobile Device Management, Version 3.0, October 2016</h:a>
        </description>
      </entry>
    </bibliography>
  </appendix>

  <appendix title="Acronyms" id="acronyms">
    <acronyms/>
  </appendix>
</PP>

